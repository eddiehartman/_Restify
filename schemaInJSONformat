---
openapi: 3.0.3
info:
  title: Merged documentation
  version: "1.0"
servers:
- url: https://192.168.252.3:30943
tags:
- name: ACI Management
- name: Access Administration Batch Submit
- name: Access Management
- name: Activity Management
- name: Delegation Management
- name: Entitlement Assignments
- name: Entitlement Management
- name: Form Designer APIs v1.2
- name: ITIM Group Management
- name: Identity Policy Management
- name: LifecycleRule Management
- name: Organizational Management API
- name: Password Management
- name: Password Policy Management
- name: Person Management
- name: Search
- name: Service Management
- name: System User Management
- name: View Management
- name: Certification Campaign assignments v1.0 - Deprecated
- name: Certification Campaign assignments v2.0
- name: Certification Campaign configurations v1.0 - Deprecated
- name: Certification Campaign configurations v2.0
- name: Certification Campaign instances v1.0 - Deprecated
- name: Certification Campaign instances v2.0
- name: Certification Campaign statistics v1.0 - Deprecated
- name: Certification Campaign statistics v2.0
- name: Serviceability v2.0
- name: UI Capabilities v1.0
- name: ARC Statistics APIs
- name: ARC User APIs
- name: Activity Folder APIs
- name: Bulk APIs
- name: Business Activity APIs
- name: Mitigation APIs
- name: Risk APIs
paths:
  /acis/{id}:
    get:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIResponseBean'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    put:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIRequestBean'
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "204":
          description: The changes were accepted.
    delete:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "204":
          description: The request was accepted
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /lifecyclerule/{lifecycleRuleIdentifier}:
    get:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Lookup
      description: Returns information about the specified Lifecycle Rule.
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        description: Unique Identifier for a lifecycleRule.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the LifecycleRule.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=filter,decription"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxudWxsfG51bGw
                    title: Deletion Lifecycle Rule
                _attributes:
                  name: Deletion Lifecycle Rule
                  operation: delete
    put:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Modify
      description: "Modifies information for specified lifecycle Rule. This API modifies\
        \ attributes of lifecycle rule as well as update schedules. If you add new\
        \ schedule and do not wish to remove previously set schedules , then provide\
        \ new schedule along with previous schedules in request body. \r\n\r\n_attributes\
        \ : JSON representation of the lifecycle attributes to be modified. Following\
        \ attributes can be specified. \r\n\r\nname : Can be specified to modify the\
        \ name of the lifecycle rule. \r\n\r\ndescription : Can be specified to modify\
        \ the description of the lifecycle Rule. \r\n\r\nOperationName : Can be specified\
        \ to modify the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter\
        \ : Can be specified to modify the lifecycle rule filter. \r\n\r\nschedules\
        \ : JSON representation of array of lifecycle schedules to be set. It is an\
        \ optional attribute. In each schedule you can specify hour, minute, month,\
        \ day of the week, days of the week, day of the month, quarterly, and semi-annually.\
        \ Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour\
        \ of the schedule. Allowed values are 0-23. To specify hourly schedule set\
        \ hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59.\
        \ \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This\
        \ attribute is exclusive with dayOfWeek. To set the dayOfMonth value other\
        \ than -1(daily), the month value must be set either to specific month or\
        \ -1(monthly). Allowed values are 1-28, if the schedule is set to monthly,\
        \ otherwise the allowed value varies according to the month value. \r\n\r\n\
        month : month of the schedule (-1 if every month). Allowed values are 1-12\
        \ (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the\
        \ schedule (-1 if every day). This attribute is deprecated for weekly schedule.\
        \ This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 =\
        \ Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly\
        \ schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple\
        \ values are specified in pipe-separated format (1|2 = Sunday and Monday).\
        \ Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0\
        \ to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive\
        \ with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter\
        \ is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual\
        \ : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual\
        \ is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n"
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        description: Unique identifier for a LifecycleRule.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyLifecycleRuleRequestBeanSwagger'
      responses:
        "202":
          description: OK
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has an invalid data structure
                  for field " Schedule".
                id: CTGIMZ052
                inserts:
                - ' Schedule'
                key: com.ibm.isim.rest.data.INVALID_DATA_FOR
    delete:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Remove
      description: Remove the specified LifecycleRule.
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has an invalid data structure
                  for field "invalid Identifier".
                id: CTGIMZ052
                inserts:
                - invalid Identifier
                key: com.ibm.isim.rest.data.INVALID_DATA_FOR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{category}/{orgContainerId}:
    get:
      tags:
      - Search
      summary: Organization Container Lookup
      description: Returns information about the specified organizational container.
      parameters:
      - name: category
        in: path
        description: "Specifies the type of organizational container to look up. Valid\
          \ values are - \"admindomains\", \"bporganizations\", \"organizationunits\"\
          , \"locations\", and \"organizations\". The values are case=insensitive."
        required: true
        schema:
          enum:
          - admindomains
          - bporganizations
          - organizationunits
          - locations
          - organizations
          type: string
      - name: orgContainerId
        in: path
        description: Unique Identifier for an organizational container.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: Specifies comma-separated attributes to return for the organizational
          container. The specified attributes are returned in the "_attributes" section
          of the response. Specifying a value of "*" returns all of the attributes.
          By default all the attributes are returned. Example - ?attributes=l
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of an organizational container (eg. ersupervisor). The specified
          attributes are returned in the "_embedded" section of the response. Specifying
          a value of '*' after reference attribute returns all the properties of the
          reference attribute. Example - ?embedded=ersupervisor.cn.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02OTczMDEyMjg3MDkyNTUzMTIwLG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                _embedded:
                  ersupervisor:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2lLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Alan Smith
                    _attributes:
                      cn: Alan Smith
                _attributes:
                  l: Raleigh
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /views/{id}:
    get:
      tags:
      - View Management
      summary: Get View
      description: "Returns details of the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 'OK. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResponseBean'
    put:
      tags:
      - View Management
      summary: Update View
      description: "Update the details of the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRequestBean'
      responses:
        "204":
          description: No Content
    delete:
      tags:
      - View Management
      summary: Delete View
      description: "Delete the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /formtemplates:
    get:
      tags:
      - Form Designer APIs v1.2
      summary: Get Formtemplates
      description: |-
        This API retrieves a list of form templates.

        Note: The form templates are sorted based on erformname.
      parameters:
      - name: ercustomclass
        in: query
        description: "Filters the formTemplates by specified ercustomclass. Note:\
          \ The client is responsible for performing URL encoding if necessary. Example\
          \ - ?ercustomclass=%2Bcn (%2B is UTF-8 encoding for + sign) "
        required: false
        schema:
          type: string
      - name: erformname
        in: query
        description: "Filters the formTemplates by specified erformname. Note: The\
          \ client is responsible for performing URL encoding if necessary. Example\
          \ - ?erformname=%2Bcn (%2B is UTF-8 encoding for + sign) "
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=10
        required: false
        schema:
          type: string
      - name: profileName
        in: query
        description: "Filters the formTemplates by specified profile name. Note: The\
          \ client is responsible for performing URL encoding if necessary. Example\
          \ - ?profileName=%2Bcn (%2B is UTF-8 encoding for + sign)"
        required: false
        schema:
          type: string
          example: Person
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-30 "
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/xml:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
            application/json:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
        "400":
          description: Bad Request
          content:
            application/xml: {}
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/xml: {}
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/xml: {}
            application/json: {}
        "404":
          description: Not Found
          content:
            application/xml: {}
            application/json: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems:
    put:
      tags:
      - Activity Management
      summary: Batch work items modify
      description: Modifies a batch of work items by either approving or rejecting
        the activity request.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: methodOverride
        in: header
        description: 'Specifies the HTTP method override. The value of this parameter
          is - "submit-in-batch". '
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkItemBatchUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entitlements/assignments/search:
    post:
      tags:
      - Entitlement Assignments
      summary: Enttilement Assignments Search
      description: Returns all role assignment attributes that match the specified
        search criteria.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
        required: false
        schema:
          type: integer
        example: 1000
      - name: page
        in: query
        description: Specifies the page to retrieve. Specify 1 for the first page.
        required: false
        schema:
          type: integer
        example: 1
      - name: user
        in: query
        description: Specifies the user for the search. It is the encoded value that
          is returned by the people search API
        required: false
        schema:
          type: string
        example: ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWNvbQ==
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' \"\
          \r\n\t\t\t\t\t+ \"option performs the search without referencing any cache.\
          \ The 'delete-cache' option deletes the cache. \"\r\n\t\t\t\t\t+ \"In this\
          \ case, empty search results are returned"
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAssignmentRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/json:
              example:
                count: 1
                limit: 1000
                resources:
                - code:
                    href: /itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA
                  assignmentAttributes:
                  - values:
                    - 12/16/2022
                    name: enddate
                  - values:
                    - in-person
                    name: method
                  - values:
                    - 08/15/2022
                    name: startdate
                  - values:
                    - chris.miller
                    name: instructors
                  entitlement:
                    href: /itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                    title: Java Programming
                  user:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                    title: John Doe
                  properties:
                    rightsRef: ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  entitlementName: Java Programming
                page: 1
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems/userrecert/{workitemId}:
    put:
      tags:
      - Activity Management
      summary: Work Item Modify for User Re-certification
      description: Modifies a work item by executing an action provided for the activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecertifyWorkItemSwagger'
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/quicksearches:
    get:
      tags:
      - Activity Management
      summary: Activities Quick Search
      description: Returns information about quick searches for activities that are
        sorted by due date.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/activities/quicksearches
                _attributes:
                  requesters:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: James Pearch
                    _attributes:
                      filter: requester;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsbb3JnLGRjPWNvbQ
                  requestees:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Alan Smith
                    _attributes:
                      filter: requestee;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG913U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  subjects:
                  - _links:
                      self:
                        href: /itim/rest/access/2460300160735116790
                        title: GSA
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300160735116790
                  - _links:
                      self:
                        href: /itim/rest/access/2460300385874741343
                        title: East Region Fileshare
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300385874741343
                  - _links:
                      self:
                        href: /itim/rest/access/2460300685064242489
                        title: Intranet
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300685064242489
                  - _links:
                      self:
                        href: /itim/rest/access/2460300534814505620
                        title: Payroll
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300534814505620
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/{personId}:
    get:
      tags:
      - Person Management
      summary: Person Lookup
      description: Returns information about the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique Identifier for a user.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the user.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for reference\
          \ attributes of a user (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section of the response. Specifying a value of '*'\
          \ after reference attribute returns all the properties of the reference\
          \ attribute. Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      - name: forms
        in: query
        description: "Specifies the boolean. If true, then the form is returned for\
          \ the user."
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  manager:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Alan Smith
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  uid: asmith
                  ercustomdisplay: Smith
                  ersupervisor: "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  mail: asmith@ibm.com
                  manager: "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  givenname: Alan
                  erpersonstatus: ACTIVE
                  name: Alan Smith
                  sn: Smith
                  cn: Alan Smith
                  personType: Person
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    put:
      tags:
      - Person Management
      summary: Person Modify
      description: Modifies information for the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique identifier for a user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'suspend' to suspend a person. Example - X-HTTP-Method-Override=suspend\
          \ \n\r\nUse 'restore' to restore a suspended person. Example - X-HTTP-Method-Override=restore\
          \ \n\r\nThe default if this header is not specified is to send a PUT request"
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/PersonSuspendRestoreBeanSwagger'
              - $ref: '#/components/schemas/PersonModifyBeanSwagger'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    delete:
      tags:
      - Person Management
      summary: Person Delete
      description: Deletes the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique identifier for a user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              schema:
                $ref: '#/components/schemas/PersonDeleteResponseBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /apisecurity/v1.0/runtime/entitlements:
    get:
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /passwordpolicy:
    get:
      tags:
      - Password Policy Management
      summary: Search Password Policy
      description: "Returns information about password policies matching the specified\
        \ search criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"erpolicyitemname\"\
        \ of the password policy is returned in the _links.self.title property. \r\
        \n\r\nBy default, no attributes are returned. The client must specify the\
        \ \"attributes\" query parameter to request the attributes to be returned\
        \ in the \"_attributes\" property of each service.\r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ password policy. The specified attributes are returned in the \"_attributes\"\
          \ property of each password policy. Specifying a value of \"*\" returns\
          \ all attributes. Example - ?attributes=rules,erpolicytarget,erenabled"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned service. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Bdescription\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without refererencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDEwMSxvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Default password policy for ITIM service
                _attributes:
                  erenabled: "true"
                  erscope: "2"
                  description: Disallow empty password for ITIM service
              - _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD01MTMxOTMxNDM2MDk5NjA2OTEzLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy
                _attributes:
                  erenabled: "true"
                  erscope: "2"
                  description: abc-desc
    post:
      tags:
      - Password Policy Management
      summary: Password Policy Create
      description: "Creates a new Password Policy with the given attributes. \r\n\r\
        \norgID : The ID of the Organization container in which this Password Policy\
        \ is to be created. This parameter is required. \r\n\r\nrules : JSON representation\
        \ of the Password Policy rules to be set. Below are the attributes than can\
        \ be used. \r\n\r\nminLength(Minimum length) : Minimum length of the password\
        \ to be generated. Numeric values allowed. By default, -1 is set indicating\
        \ that the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length\
        \ of the password to be generated. Numeric values allowed. By default, -1\
        \ is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum\
        \ repeated characters) : Maximum allowed number of sequential characters within\
        \ the password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length)\
        \ : Length of the password history used to check for repeating passwords.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length\
        \ of the password history used to check for repeating passwords spelled backwards.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID\
        \ in password. It is case sensitive. Allowed values are true and false. By\
        \ default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with\
        \ case insensitivity) : Allow or disallow userID in password regardless of\
        \ upper and lower cases. Allowed values are true and false. By default, true\
        \ is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user\
        \ name in password. It is case sensitive. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user\
        \ name with case insensitivity) : Allow or disallow user name in password\
        \ regardless of upper and lower cases. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary)\
        \ : Allow or disallow the use of passwords defined in password dictionary.\
        \ Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters\
        \ not allowed) : Characters which are not to be used within the password.\
        \ \r\n\r\nrequiredChars(Required characters) : Characters one of which which\
        \ must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters)\
        \ : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts\
        \ with characters) : Characters one of which must be the first character set\
        \ of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique\
        \ characters) : Minimum required number of distinct characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic\
        \ characters) : Minimum required number of alphabetic characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters)\
        \ : Minimum required number of numeric characters within the password. Numeric\
        \ values allowed. By default, -1 is set indicating that the rule is disabled.\
        \ \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password\
        \ complexity rule. Allowed value are true and false. By default, false is\
        \ set. \r\n\r\ncustomRules : JSON representation of custom password rules\
        \ to be enforced for the policy. The key contains the full qualified name\
        \ of the rule class as specified in passwordrules.properties. For example,\
        \ if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule,\
        \ then the key here will be examples.passwordrules.RegularExpressionRule.\
        \ The value parameter can contain boolean value or any other value as per\
        \ the property value of the rule in passwordrules.properties. For example,\
        \ if the value is set to false in the passwordrules.properties, then the user\
        \ can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\"\
        : \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy\
        \ targets to be set for the password policy. Allowed values for constant are\
        \ ALL_SERVICE(the policy will be applicable for all services in the system.\
        \ In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the\
        \ policy will be applicable for a specific service which is specified by the\
        \ service URI) and SERVICE_TYPE(the policy will be applicable for a specific\
        \ service type which is specified by the service profile name e.g WinLocalProfile).\
        \ Please note, for SERVICE_TYPE, only service profiles other than ITIM service,\
        \ hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE\
        \ must belong to the same org container for which the policy is being created.\
        \ \r\n\r\n_attributes : JSON representation of the Password Policy attributes\
        \ to be set. Below are the attributes than can be used. \r\n\r\nerpolicyitemname\
        \ : Name of the password policy. It is a mandatory parameter. \r\n\r\nerscope\
        \ : Scope of the password policy. Allowed value are 2(this business unit and\
        \ sub units) and 1(this business unit only). It is a mandatory parameter.\
        \ \r\n\r\nerenabled : Specifies whether the password policy will be enabled\
        \ or disabled as soon as the policy is created. Allowed values are true and\
        \ false. It is a mandatory parameter. \r\n\r\ndescription : Description of\
        \ the password policy. It is an optional parameter. \r\n\r\nerlabel : Specifies\
        \ a caption for the password policy. It is an optional parameter. \r\n\r\n\
        erkeywords : Specifies keywords for the password policy. It is an optional\
        \ parameter. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePasswordPolicyRequestBeanSwagger'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD02MzI4NTE2NjQyMTU3MTQzOTIwLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy new
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Organization
                _attributes:
                  erenabled: "true"
                  erglobalid: "6328516642157143920"
                  erscope: "1"
                  erkeywords: Policy new
                  description: test new
                  rules:
                    allowUserIDCaseInsensitive: true
                    minDistinctCharacters: -1
                    reversedHistoryLength: -1
                    minLength: 5
                    repeatedHistoryLength: -1
                    allowInDictionary: true
                    maxValidityPeriod: -1
                    passwordComplexity: false
                    allowUserName: true
                    customRules:
                      examples.passwordrules.RegularExpressionRule: "true"
                    maxSequentialCharacters: -1
                    allowUserNameCaseInsensitive: true
                    minAlphabeticCharacters: 3
                    allowUserID: true
                    invalidChars: ""
                    requiredChars: ""
                    restrictedToChars: ""
                    minValidityPeriod: -1
                    minDigitCharacters: -1
                    maxLength: 13
                    startsWithChars: ""
                  erpolicytarget:
                  - SPECIFIC_TYPE; WinLocalProfile
                  - SPECIFIC_SERVICE; ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                  objectclass:
                  - top
                  - erPasswordPolicy
                  - erManagedItem
                  - erPolicyBase
                  - erPolicyItemBase
                  erpolicyitemname: REST password-Policy new
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/cancel/{requestId}:
    post:
      tags:
      - Search
      summary: Request to Cancel
      description: Request to cancel that is in pending status.
      parameters:
      - name: requestId
        in: path
        description: Unique Identifier for a request.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /tasks/me/{category}:
    get:
      tags:
      - Search
      summary: Task Search
      description: Returns a list of tasks that can be performed by the currently
        logged in user.
      parameters:
      - name: category
        in: path
        description: "Identifies the application that is currently being accessed\
          \ by user. Valid values are console, selfservice, and servicecenter."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _id: SVCENTER_CHANGE_PASSWORD
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_CHANGE_PASSWORD_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_DELEGATION_SCHEDULE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_ACTIVITY
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_OTHERS_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_OTHERS_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_PROFILE_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_REQUEST_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_REQUEST_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_PROFILE_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_REQUEST_STATUS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_TODO_LIST
                _attributes:
                  isCustom: false
                  category: servicecenter
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /passwordpolicy/{passwordPolicyId}:
    get:
      tags:
      - Password Policy Management
      summary: Password Policy Lookup
      description: Returns information about the specified password policy.
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique Identifier for the password policy.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the password\
          \ policy. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" will return all of the attributes.\
          \ By default all the attributes are returned. Example - ?attributes=erpolicytarget,description,rules"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD00MDQ2MDQwOTE4NDI0MDQ3MTAxLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy new
                _attributes:
                  description: Trial password policy
                  rules:
                    allowUserIDCaseInsensitive: true
                    minDistinctCharacters: -1
                    reversedHistoryLength: -1
                    minLength: 5
                    repeatedHistoryLength: -1
                    allowInDictionary: true
                    maxValidityPeriod: -1
                    passwordComplexity: false
                    allowUserName: false
                    customRules:
                      examples.passwordrules.RegularExpressionRule: qqq
                    maxSequentialCharacters: -1
                    allowUserNameCaseInsensitive: true
                    minAlphabeticCharacters: 3
                    allowUserID: true
                    invalidChars: ""
                    requiredChars: ""
                    restrictedToChars: ""
                    minValidityPeriod: -1
                    minDigitCharacters: -1
                    maxLength: 13
                    startsWithChars: ""
    put:
      tags:
      - Password Policy Management
      summary: Password Policy Modify
      description: "Modifies a Password Policy with the given attributes. Please note,\
        \ at least one of rules, policyTargets or _attributes will need to be specified.\
        \ \r\n\r\nrules : JSON representation of the Password Policy rules to be set.\
        \ Below are the attributes than can be used. This is an optional parameter.\
        \ \r\n\r\nNote : In order to disable an existing rule, the rule name will\
        \ need to be specified with it's default value e.g \"minLength\" : \"-1\"\
        \ \r\n\r\nminLength(Minimum length) : Minimum length of the password to be\
        \ generated. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length\
        \ of the password to be generated. Numeric values allowed. By default, -1\
        \ is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum\
        \ Repeated Characters) : Maximum allowed number of sequential characters within\
        \ the password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length)\
        \ : Length of the password history used to check for repeating passwords.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length\
        \ of the password history used to check for repeating passwords spelled backwards.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID\
        \ in password. It is case sensitive. Allowed values are true and false. By\
        \ default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with\
        \ case insensitivity) : Allow or disallow userID in password regardless of\
        \ upper and lower cases. Allowed values are true and false. By default, true\
        \ is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user\
        \ name in password. It is case sensitive. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user\
        \ name with case insensitivity) : Allow or disallow user name in password\
        \ regardless of upper and lower cases. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary)\
        \ : Allow or disallow the use of passwords defined in password dictionary.\
        \ Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters\
        \ not allowed) : Characters which are not to be used within the password.\
        \ \r\n\r\nrequiredChars(Required characters) : Characters one of which which\
        \ must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters)\
        \ : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts\
        \ with characters) : Characters one of which must be the first character set\
        \ of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique\
        \ characters) : Minimum required number of distinct characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic\
        \ characters) : Minimum required number of alphabetic characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters)\
        \ : Minimum required number of numeric characters within the password. Numeric\
        \ values allowed. By default, -1 is set indicating that the rule is disabled.\
        \ \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password\
        \ complexity rule. Allowed value are true and false. By default, false is\
        \ set. \r\n\r\ncustomRules : JSON representation of custom password rules\
        \ to be enforced for the policy. The key contains the full qualified name\
        \ of the rule class as specified in passwordrules.properties. For example,\
        \ if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule,\
        \ then the key here will be examples.passwordrules.RegularExpressionRule.\
        \ The value parameter can contain boolean value or any other value as per\
        \ the property value of the rule in passwordrules.properties. For example,\
        \ if the value is set to false in the passwordrules.properties, then the user\
        \ can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\"\
        : \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy\
        \ targets to be set for the password policy. This is an optional parameter.\
        \ Assigning new values will remove all existing policy targets. In order to\
        \ retain previous targets, those targets need to be specified. Allowed values\
        \ for constant are ALL_SERVICE(the policy will be applicable for all services\
        \ in the system. In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the\
        \ policy will be applicable for a specific service which is specified by the\
        \ service URI) and SERVICE_TYPE(the policy will be applicable for a specific\
        \ service type which is specified by the service profile name e.g WinLocalProfile).\
        \ Please note, for SERVICE_TYPE, only service profiles other than ITIM service,\
        \ hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE\
        \ must belong to the same org container for which the policy is being created.\
        \ \r\n\r\n_attributes : JSON representation of the Password Policy attributes\
        \ to be set. This is an optional parameter. Below are the attributes than\
        \ can be used. \r\n\r\nerpolicyitemname : Name of the password policy. If\
        \ this parameter is specified, then a value must be entered. \r\n\r\nerscope\
        \ : Scope of the password policy. Allowed value are 2(this business unit and\
        \ sub units) and 1(this business unit only). If this parameter is specified,\
        \ then a value must be entered. \r\n\r\nerenabled : Specifies whether the\
        \ password policy will be enabled or disabled as soon as the policy is created.\
        \ Allowed values are true and false. If this parameter is specified, then\
        \ a value must be entered. \r\n\r\ndescription : Description of the password\
        \ policy. It is an optional parameter. \r\n\r\nerlabel : Specifies a caption\
        \ for the password policy. It is an optional parameter. \r\n\r\nerkeywords\
        \ : Specifies keywords for the password policy. It is an optional parameter.\
        \ \r\n"
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique identifier for the password policy to be modified.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPasswordPolicyRequestBeanSwagger'
      responses:
        "202":
          description: OK. The request was successful
    delete:
      tags:
      - Password Policy Management
      summary: Password Policy Delete
      description: Removes the specified password policy.
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique identifier for the password policy to be deleted.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}:
    get:
      tags:
      - System User Management
      summary: System User lookup
      description: Returns information about the specified Identity Governance system
        account.
      parameters:
      - name: systemUserId
        in: path
        description: A unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return the system\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. If the excludeAttributeFromResponse property in the rest.properties\
          \ is set to some attribute value, that attribute is excluded from the response\
          \ though it is specified in the attribute list. Specifying a value \"*\"\
          \ returns all of attributes except those that are specified in the excludeAttributeFromResponse\
          \ property. By default, all attributes other than those that are specified\
          \ in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid,eraccountstatus"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return a reference\
          \ attribute of the system user. For example, owner. The specified attributes\
          \ are returned in the \"_embedded\" section of the response. Specifying\
          \ a value \"*\" after a reference attribute returns all properties of the\
          \ reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNTM1NzA0Mjg2MzMyMTI1MTk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: asmith
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                  tasks:
                  - href: /itim/rest/tasks/me/servicecenter
                    title: servicecenter
                  - href: /itim/rest/tasks/me/selfservice
                    title: selfservice
                _attributes:
                  owner: "erglobalid=25357042863321251,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountcompliance: "1"
                  eruid: asmith
                  eraccountownershiptype: Individual
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/assignments:
    get:
      tags:
      - Search
      summary: Access Assignment Search
      description: "Returns all Access Assignments for the specified requestee. \n\
        If Header parameter Access-Categories-List is specified , the complete list\
        \ of access categories associated with the user assignments are returned."
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ access item. Specifying * returns all attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation,roleAssignmentAttributeValues"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) for sorting the \"\r\n\t\t\t\t\t+ \"returned list\
          \ of accesses. ?sort=%2BaccessName, ?sort=%2BaccessCategory, Example - ?sort=%2Ddescription\"\
          \r\n\t\t\t\t\t+ \"(%2B and %2D is UTF-8 encoding for + and - sign respectively)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the\
          \ client that specify the same search criteria are satisfied via the cache.\
          \ The 'no-cache' \"\r\n\t\t\t\t\t+ \"option specifies performs the search\
          \ without referencing any cache. The 'delete-cache' option deletes the \"\
          \r\n\t\t\t\t\t+ \"cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Permission-List
        in: header
        description: "Specifies whether the API returns the list of actions that can\
          \ be performed on the returned assignments. By default, the permissions\
          \ list is not returned. Example - Permission-List=get-permissions "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  account:
                    _links:
                      self:
                        href: /itim/rest/accounts/ZXJnbG9iYWxpZD00NjkzMTIzMjc1NjA3ODQ3MjU2LG91PTAsb3U9YWNjb3VudHMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: asmith7
                    _attributes:
                      eraccountcompliance: "1"
                      eruid: asmith7
                      eraccountstatus: "0"
                _links:
                  access:
                    href: /itim/rest/access/4693112079467885909
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: ausintranet(asmith7)
                _attributes:
                  badges: []
                  accessName: ausintranet
                  entityType: 2
                  description: Austin intranet
                  status: FULFILLED
                  tags: []
              - _links:
                  access:
                    href: /itim/rest/access/4693112079467885909
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Manager
                _attributes:
                  badges: []
                  roleAssignmentAttributes:
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: StartDate
                      assignmentAttributeLabel: StartDate
                      assignmentAttributeValue:
                        values:
                        - 12/21/2020
                        name: startdate
                      definedRoleName: Manager
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: EndDate
                      assignmentAttributeLabel: EndDate
                      assignmentAttributeValue:
                        values:
                        - 10/21/2020
                        name: enddate
                      definedRoleName: Manager
                  accessName: Manager
                  entityType: 3
                  description: Allows end user a manager role.
                  accessCategory: Application
                  status: FULFILLED
                  tags: []
                  isEditRoleAssignmnetAttributeAllowedForPerson: true
                  isViewRoleAssignmnetAttributeAllowedForPerson: true
    post:
      tags:
      - Access Administration Batch Submit
      summary: Access Assignment Batch Requests
      description: "\r\n[Access Assignment Batch Addition](/itim/swaggerdoc/Access_Assignment_Batch_Addition.html)\
        \ - Add access assignments in a batch. \n\r\n[Access Assignment Batch Deletion](/itim/swaggerdoc/Access_Assignment_Batch_Deletion.html)\
        \ - Delete access assignments in a batch. \n\r\n[Access Assignment Batch Modify](/itim/swaggerdoc/Access_Assignment_Batch_Modify.html)\
        \ - Modify access assignments in a batch. \n\r\n[Access Assignment Batch Validation](/itim/swaggerdoc/Access_Assignment_Batch_Validation.html)\
        \ - Validate access assignments in a batch. \n\r\n[Access Assignment Batch\
        \ Check Compliance](/itim/swaggerdoc/Access_Assignment_Batch_Check_Compliance.html)\
        \ - Check the compliance of access assignments in a batch. \r\n\r\nClick link\
        \ to see more details for each request\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pasns the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'check-compliance' to check a batch of access assignments\
          \ for compliance. Example - X-HTTP-Method-Override=check-compliance \n\r\
          \nUse 'validate-full' to validate access assignments in a batch. Example\
          \ - X-HTTP-Method-Override=validate-full \n\r\nUse 'submit-in-batch' to\
          \ submit access assignments for addition, deletion and modification in a\
          \ batch. Example - X-HTTP-Method-Override=submit-in-batch"
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAssignCheckComplianceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
        "202":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/me:
    get:
      tags:
      - System User Management
      summary: Current System User Lookup
      description: Returns information about a user who is logged in to the Identity
        Governance system account.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return the current\
          \ Identity Governance account. The specified attributes are returned in\
          \ the \"_attributes\" section of the response. If the excludeAttributeFromResponse\
          \ property in the rest.properties is set to some attribute value, that attribute\
          \ is excluded from the response though it is specified in the attribute\
          \ list. Specifying a value \"*\" returns all of attributes except those\
          \ that are specified in the excludeAttributeFromResponse property. By default,\
          \ all attributes other than those that are specified in excludeAttributeFromResponse\
          \ property are returned. Example - ?attributes=eruid,eraccountstatus"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return a reference\
          \ attribute of the system user. For example, owner. The specified attributes\
          \ are returned in the \"_embedded\" section of the response. Specifying\
          \ a value \"*\" after a reference attribute returns all properties of the\
          \ reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          headers:
            CSRFToken:
              description: "To prevent cross-site request forgery (CSRF) attacks,\
                \ a user must pass the valid CSRF token in the request header. When\
                \ a new PUT, POST, or DELETE request is created, the request header\
                \ must contain CSRF token that is received to the authorized user."
              style: simple
              schema:
                type: string
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: ITIM Manager
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                  tasks:
                  - href: /itim/rest/tasks/me/console
                    title: console
                  - href: /itim/rest/tasks/me/servicecenter
                    title: servicecenter
                  - href: /itim/rest/tasks/me/selfservice
                    title: selfservice
                _attributes:
                  owner: "erglobalid=00000000000000000007,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=00000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountcompliance: "1"
                  erobjecttype: "1"
                  eruid: ITIM Manager
                  erroles: "erglobalid=00000000000000000003,ou=sysRoles,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles/{systemRoleId}:
    get:
      tags:
      - Search
      summary: System Role (ITIM Group) Lookup
      description: Returns information about the specified system role (ITIM Group).
      parameters:
      - name: systemRoleId
        in: path
        description: Unique Identifier for system role (ITIM Group).
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma- separated attributes to return for the system\
          \ role. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default all the attributes are returned. Example - ?attributes=errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for the reference
          attributes of system role (eg. erparent). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erparent.*
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA2MixvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Auditor
                _embedded:
                  erparent:
                    _links:
                      self:
                        href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: JKEnterprise
                    _attributes:
                      erorgstatus: "0"
                      description: J K Enterprise
                      o: JKEnterprise
                _attributes:
                  errolename: Auditor
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/constraints:
    get:
      tags:
      - System User Management
      summary: System User Contraints Lookup
      description: "Returns the constraints for the specified system user \r\n\nThe\
        \ \"passwordRules\" property is an array listing of each rule for the password.\
        \ \r\n\nIf there are no password rules, an empty array is returned."
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated constraints toe return for the
          specified link. The specified constraints are returned in the "_embedded"
          property of the constraint object. Example - ?embedded=passwordConstraints
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  passwordConstraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints/password
                    title: Password Constraints
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints
                    title: Constraints
                  systemuser:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: criegle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/{accessId}:
    get:
      tags:
      - Access Management
      summary: Access Lookup
      description: Returns information about the specified access.
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for an access\
          \ item. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. Example.\
          \ ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconAccessRoleAccess.gif
                  self:
                    href: /itim/rest/access/6892757478197795306
                    title: FTP Server
                  owners:
                    href: /itim/rest/access/6892757478197795306/owners
                _attributes:
                  badges:
                  - style: red
                    designation: Critical
                  - style: green
                    designation: JK Enterprise
                  accessName: FTP Server
                  entityType: 1
                  entityProfile: PosixLinuxProfile
                  accessCategory: Application
                  isCommon: true
                  description: FTP Server
    put:
      tags:
      - Access Management
      summary: Modify Access
      description: "\r\nModifies access information for the entity \r\n\r\n Required\
        \ attributes\r\nenableAccess - Value should be true if access needs to be\
        \ enabled otherwise false if access needs to be disabled \r\n\r\nentityType\
        \ - Value should be 3 as currently this API only supports creating access\
        \ for the role \r\n\r\nProvide list attributes(if any) that needs to be updated\
        \ e.g. badges, tags, additionalInformation, accessName, accessCategory, description,\
        \ isCommon, icon\r\n"
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAccessBean'
      responses:
        "204":
          description: No Content
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entitlements/assignments/{assignmentId}:
    get:
      tags:
      - Entitlement Assignments
      summary: Assignment Lookup
      description: Returns assignment details of a specified assignment ID.
      parameters:
      - name: assignmentId
        in: path
        description: Specifies the assignment ID for a lookup. It is the encoded value
          that is returned by the /assignments/search API
        required: true
        schema:
          type: string
        example: MTk5OTczMzYyNDk0Mjk2NDcxNw
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/json:
              example:
                code:
                  href: /itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA
                assignmentAttributes:
                - values:
                  - 12/16/2022
                  name: enddate
                - values:
                  - in-person
                  name: method
                - values:
                  - 08/15/2022
                  name: startdate
                - values:
                  - chris.miller
                  name: instructors
                entitlement:
                  href: /itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  title: Java Programming
                user:
                  href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  title: John Doe
                properties:
                  rightsRef: ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                entitlementName: Java Programming
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /serviceprofiles:
    get:
      summary: Get All
      description: Get details of all installed service types
      parameters:
      - name: limit
        in: query
        description: enter a limit for search
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: "Returns serviceProfiles whose names contain the string specified\
          \ in the filter. Example: name=WinLocalProfile"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-30 "
        schema:
          type: string
      responses:
        "200":
          description: Fetched all details
        "404":
          description: Not Found. A general failure occurred while searching through
            the repository.
    post:
      summary: Add ServiceProfile
      description: Upload a Service profile jar
      parameters:
      - name: uuid
        in: query
        description: The product uuid to be used while adding serviceProfile
        required: false
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: choose ServiceProfile jar
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartBodyBean'
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/me:
    get:
      tags:
      - Person Management
      summary: Current Person Lookup
      description: Returns the information about the currently logged in user.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the current\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. Example\
          \ - ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for a reference\
          \ attribute of a user (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section of the response. Specifying a value of '*'\
          \ after reference attribute returns all properties of the reference attribute.\
          \ Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JjPWNvbQ
                    title: Alan Smith
                _embedded:
                  manager:
                    _links:
                      self:
                        href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Chuck Riegle
                    _attributes:
                      name: Chuck Riegle
                _attributes:
                  uid: asmith
                  telephonenumber: 919-224-1234
                  givenname: Alan
                  erpersonstatus: ACTIVE
                  name: Alan Smith
                  mobile: 919-123-4567
                  cn: Alan Smith
                  sn: Smith
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/bulk:
    post:
      tags:
      - Access Management
      summary: performAccessBulkOperation
      description: "\r\n\r\nEnable/ Disable access for Role Entities \r\n\r\n Required\
        \ attributes: \r\n\r\nenableAccess - Value should be true or false depending\
        \ on whether access is to be enabled or disabled \r\n\r\nentityRef - Value\
        \ should be uuid of the role for which access needs to be created. \r\n\r\n\
        accessCategory - Is considered only when enableAccess is true\r\n\r\nIn case\
        \ of providing accessSubtype value for accessCategory hierarchy of accessType\
        \ should be provided \r\n\r\ne.g. If Application has subtype ApplicationSubtype\
        \ and ApplicationSubtype has subtype ApplicationSubtypeChild\r\n\r\nthen to\
        \ add ApplicationSubtypeChild as accessCategory value should be provided as\
        \ Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\nNote: commonAccess\
        \ attribute considered only when enableAccess is true and is only applicable\
        \ for static roles not for dynamic roles. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAccessRequestBean'
      responses:
        "200":
          description: Success
        "207":
          description: "There was a problem with one or more entities in the list,\
            \ error details will be available in the response"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - result: "true"
                operation: update access of the role
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /roles/orgroles:
    get:
      tags:
      - Search
      summary: Organizational Role Search
      description: "Returns information about the organizational role that matches\
        \ the specified search criteria. \nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes to be returned in the \"_attributes\" property of each static\
        \ role. \nA requested attribute is not returned if the client does not have\
        \ permission to retrieve the attribute or if the value of the attribute is\
        \ null. \nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \n"
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for each static
          role. The specified attributes are returned in the "_attributes" property
          of each static role. Specifying a value of "*" returns all attributes. Example-
          ?attributes=errolename
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned static role. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example- ?sort=%2Berrolename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: type
        in: query
        description: Specifies the type of role to search for. Example. ?type=static
        schema:
          default: static
          enum:
          - static
          - dynamic
          - all
      - name: Cache-Control
        in: header
        description: "Specifies the caching options. By default, search results are\
          \ cached for each client so that subsequent requests by the client that\
          \ specify the same search criteria are satisfied via the cache. The 'no-cache'\
          \ option performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example- Cache-Control=no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example- items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: terminator Role
                _attributes:
                  errolename: terminator Role
              - _links:
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: supervisor Role
                _attributes:
                  errolename: supervisor Role
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /serviceprofiles/{uuid}:
    get:
      summary: Get by uuid
      description: Get details of a service profile
      parameters:
      - name: uuid
        in: path
        description: enter a uuid for search
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      summary: Update ServiceProfile
      description: "Upload a Service profile jar Note: The customer is responsible\
        \ for providing the correct UUID and the appropriate profile JAR file to be\
        \ updated"
      parameters:
      - name: uuid
        in: path
        description: The product uuid to be used while adding serviceProfile
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: choose ServiceProfile jar
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartBodyBean'
      responses:
        "200":
          description: OK
    delete:
      summary: delete a service profile
      description: Deletes a service profile when a valid uuid is provided.
      parameters:
      - name: uuid
        in: path
        description: The product uuid to delete for
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
        "204":
          description: No Content. Deleted the service Profile.
        "404":
          description: Not Found. A general failure occurred while searching through
            the repository.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/{personId}/accounts:
    get:
      tags:
      - Person Management
      summary: Person Account search
      description: Returns the accounts of a specified user.
      parameters:
      - name: personId
        in: path
        description: The person ID to retrieve accounts for.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the account.\
          \ The specified attributes are returned in the \"_attributes\" section.\
          \ Specifying a value of \"*\" returns all attributes. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of the accounts (eg. erservice). The specified attributes are
          returned in the "_embedded" section of the response. Specifying a value
          of '*' after reference attribute returns all the properties of the reference
          attribute. Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which the returned people are sorted. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  erservice:
                    _links:
                      statusDetails:
                        href: /itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20/statusdetails
                        title: statusDetails
                      self:
                        href: /itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                        title: ITIM Service
                    _attributes:
                      erservicename: ITIM Service
                _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: asmith
                _attributes:
                  eruid: asmith
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/configuration:
    get:
      tags:
      - Password Management
      summary: Password Configuration
      description: Return the Password configuration for Identity Governance.
      parameters:
      - name: attributes
        in: query
        description: Specifies if the password synch property is returned. Example
          - ?attributes=isSynchPassword
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/password/configuration
                    title: Challenge response configuration resource
                _attributes:
                  responseMinLength: -1
                  isSSOEnabled: false
                  challengeNumberRequired: 1
                  challengeResponseEnabled: true
                  responseMatchQuestion: false
                  responseDisallowUserID: false
                  isChallengeUserDefined: true
                  responseUniqueAnswer: false
                  isSynchPassword: true
                  isChallengeResponseEnforced: false
                  responseNumberConfigured: 1
                  applicationURL: /itim/self/Login/ChallengeResponse.do
                  responseMaxRepeatChar: -1
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/count:
    get:
      tags:
      - Activity Management
      summary: Pending Count of Activities For Current User
      description: Returns the count of pending requests for a user.
      parameters:
      - name: status
        in: query
        description: "Specifies the status of activities whose count is to be returned.\
          \ Currently, only the status PENDING is supported."
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                count: 30
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/assignments/{assignmentId}:
    delete:
      tags:
      - Access Management
      summary: Access Assignment Delete
      description: Deletes the specified access assignment.
      parameters:
      - name: assignmentId
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAssignmentSingleRequestBean'
      responses:
        "202":
          description: "Accepted. The request was accepted for processing, but the\
            \ processing is not complete."
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  result:
                    href: /itim/rest/requests/7655357092010861510
                requestID: "7655357092010861510"
                results:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    assingment:
                      href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVv
                  status: SUCCESS
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    accesses: []
                  status: SUCCESS
                overallStatus: SUBMITTED
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                results:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    assingment:
                      href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAs
                  messages:
                  - text: com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID
                    key: com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID
                  status: ERROR
                overallStatus: ERROR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse:
    get:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup For Current User
      description: Returns the list of forgotten password questions configured for
        the currently logged in user.
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
                challengeResponses:
                - response: SHA-256:Y2hrdGMzOXBiOTN1:PdLrmAtsfC0u0zluEZ0u6lV0Ev0FmnY2cyuGmYKw/aw=
                  challenge: What is the name of your first company?
                - response: SHA-256:bnhqaXIwaDMxNWl6:TjBvQJnvo4BD3JGPTsGRtwvtIIBjsg/Zmthrdxf4mmM=
                  challenge: What is your favorite color?
                - response: SHA-256:a2I0dm9rOTI5MTI1:oCepu5gwY8YzcLhGJLnGck7XGhsNyJ8nIKIg5onXVEI=
                  challenge: How many siblings do you have?
    put:
      tags:
      - Password Management
      summary: Forgotten Password Challenge Response Question Update
      description: "Specifies that the currently logged in user can update the forgotten\
        \ password questions and answers. Users can modify the response for an existing\
        \ challenge or create a new challenge response. \r\nNote : The 'password'\
        \ attribute of the request payload must contain the Identity Manager System\
        \ account password of the current user."
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger'
      responses:
        "200":
          description: Challenge response questions are submitted successfully.
          content:
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
        "400":
          description: "Bad Request. This might happen if challenges are empty, a\
            \ response is not provided for a challenge, the password is invalid, and\
            \ et cetera."
          content:
            application/json:
              example:
                severity: E
                text: CTGIMH066E The value entered for Identity Governance Password
                  field is not correct. Enter the correct password.
                id: CTGIMH066
                key: com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD
    post:
      tags:
      - Password Management
      summary: Forgotten Password Challenge Response Question Submit
      description: Specifies that the currently logged in user can create forgotten
        passwordquestions and answers. The 'password' attribute of the request payload
        mustcontain the Identity Governance System account password of the current
        user.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger'
      responses:
        "201":
          description: Challenge response questions are submitted successfully.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
        "400":
          description: "Bad Request. This might happen if challenges are empty, a\
            \ response is not provided for a challenge, password is invalid, and et\
            \ cetera."
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMH066E The value entered for Identity Governance Password
                  field is not correct. Enter the correct password.
                id: CTGIMH066
                key: com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/bpperson:
    get:
      tags:
      - Person Management
      summary: People Search for Business Partner Person
      description: "Returns information for the specified user that belongs to a Business\
        \ Partner Person category. \r\n\r\nThe \"name\" of the user is returned in\
        \ the _links.self.title property. \r\n\r\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes that are returned in the \"_attributes\" property of each user.\
        \ \r\n\r\nA requested attribute is not returned if the client does not have\
        \ permission to retrieve the attribute or if the value of the attribute is\
        \ null. \r\n\r\nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ iser. The specified attributes are returned in the \"_attributes\" property\
          \ of each person. Specifying a value of \"*\" returns all attributes. Example\
          \ - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma separated attributes to return for a reference
          attribute of a user (eg. manager). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=manager.cn
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that should be returned
          by the search. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned result. Note: The client is responsible\
          \ for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is\
          \ UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options . By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Mark Stevens
                _attributes:
                  sn: Stevens
                  cn: Mark Stevens
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: James Parch
                _attributes:
                  sn: Parch
                  cn: James Parch
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entities:
    get:
      tags:
      - Search
      summary: Widget Filter Search
      description: "Returns the search results that are based on the filter configured\
        \ for a widget . This API is used with the form template REST API. Identity\
        \ Governance forms consist of some widgets that contain an LDAP search filter\
        \ that is configured by System Administrator. \r\n\nThis configured search\
        \ filter is returned by \"form tempalate\" REST API in an encrypted format.\
        \ The LDAP search API decrypts this filter and returns the search result.\
        \ \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the attribute that must be returned as part of search.\
          \ Only one attribute can be specified. If you specify a comma-separated\
          \ list of attributes, then no attributes are returned. Example - ?attributes=cn"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to be returned. Note : The range\
          \ uses a zero-based index. Example - items=0-99 "
        schema:
          type: string
      - name: com.ibm.isim.rest.accesstoken
        in: header
        description: This mandatory header parameter contains the encrypted filter
          on which search is executed. This token is generated by the "form template"
          REST API.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _id: ZXJnbG9iYWxpZD0yNDk5MjUzNTY5NjU4OTcxMTg1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Alan Smith
              - _id: ZXJnbG9iYWxpZD0yNDk5MjUzNTc0NjU3MTkyNzM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Chuck Riegle
              - _id: ZXJnbG9iYWxpZD0yNDk5MjU0NjU2NjczNDE2OTMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Dan Gosling
              - _id: ZXJnbG9iYWxpZD0yNDk5MjU0OTg3MjMzOTU0NjEyLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Danny Guthrie
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /identitypolicy:
    get:
      tags:
      - Search
      summary: Search All Identity Policies
      description: Returns list of all the Identity Policies.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ identity policy. By default, no attributes are returned. The client must\
          \ specify the \"attributes\" query parameter to request the attributes to\
          \ be returned in the \"_attributes\" property of each identity policy. A\
          \ requested attribute is returned if the client does not have permission\
          \ to retrieve the attribute or if the value of the attribute is null. Specifying\
          \ a value of \"*\" will return all of the attributes. Example. ?attributes=l"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Berpolicyitemname\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ
                    title: Default identity policy for ITIM (Person)
                _attributes:
                  eruserclass: Person
                  erenabled: "true"
                  erglobalid: "00000000000000000006"
                  erkeywords: Person
                  erscope: "2"
                  description: Default identity policy for all services and for Person
                    class.
                  erlabel: ITIM's default identity policy (Person)
                  erjavascript: "function createIdentity() { \n var EXISTING_CASE=0;\
                    \ \n var UPPER_CASE=1; \n var LOWER_CASE=2; \n var tf = false;\
                    \ \n var identity = \"\"; \n var baseidentity = \"\"; \n var counter\
                    \ = 0; \n var locale = subject.getProperty(\"erlocale\"); \n var\
                    \ fAttrKey = \"uid\"; \n var sAttrKey = \"\"; \n var idx1 = 0;\
                    \ \n var idx2 = 0; \n var fCase = 2; \n var sCase = 2; \n if ((locale\
                    \ != null) && (locale.length > 0)) { \n locale = locale[0]; \n\
                    \ }\n if (locale == null || locale.length == 0)\n locale = \"\"\
                    ; \n var firstAttribute = \"\"; \n var secondAttribute = \"\"\
                    ; \n if (((fAttrKey != null) && (fAttrKey.length > 0)) || ((sAttrkey\
                    \ != null) && (sAttrkey.length > 0))) {\n if ((fAttrKey != null)\
                    \ && (fAttrKey.length > 0)) { \n firstAttribute = subject.getProperty(fAttrKey);\
                    \ \n if (((firstAttribute != null) && (firstAttribute.length >\
                    \ 0))) \n firstAttribute = firstAttribute[0]; \n if (firstAttribute\
                    \ == null || firstAttribute.length == 0) \n firstAttribute = \"\
                    \"; \n else { \n firstAttribute=IdentityPolicy.resolveAttribute(fAttrKey,firstAttribute);\
                    \ \n if ((idx1>firstAttribute.length) || (idx1==0)) \n idx1=firstAttribute.length;\
                    \ \n firstAttribute = firstAttribute.substring(0,idx1); \n } \n\
                    \ if (fCase == UPPER_CASE) \n firstAttribute = firstAttribute.toUpperCase(locale);\
                    \ \n else if (fCase == LOWER_CASE) \n firstAttribute = firstAttribute.toLowerCase(locale);\
                    \ \n } \n if ((sAttrKey != null) && (sAttrKey.length > 0)) { \n\
                    \ secondAttribute = subject.getProperty(sAttrKey); \n if (((secondAttribute\
                    \ != null) && (secondAttribute.length > 0))) \n secondAttribute\
                    \ = secondAttribute[0]; \n if (secondAttribute == null || secondAttribute.length\
                    \ == 0) \n secondAttribute = \"\"; \n else { \n secondAttribute=IdentityPolicy.resolveAttribute(sAttrKey,secondAttribute);\
                    \ \n if ((idx2>secondAttribute.length) || (idx2==0)) \n idx2=secondAttribute.length;\
                    \ \n secondAttribute = secondAttribute.substring(0,idx2); \n }\
                    \ \n if (sCase == UPPER_CASE) \n secondAttribute = secondAttribute.toUpperCase(locale);\
                    \ \n else if (sCase == LOWER_CASE) \n secondAttribute = secondAttribute.toLowerCase(locale);\
                    \ \n } \n baseidentity = firstAttribute + secondAttribute; \n\
                    \ } \n if ((baseidentity == null) || (baseidentity.length == 0))\
                    \ { \n var givenname = subject.getProperty(\"givenname\"); \n\
                    \ if (((givenname != null) && (givenname.length > 0))) \n givenname\
                    \ = givenname[0]; \n if(givenname == null || givenname.length\
                    \ == 0) \n givenname = \"\"; \n else \n givenname = givenname.substring(0,1);\
                    \ \n baseidentity = givenname + subject.getProperty(\"sn\")[0];\
                    \ \n } \n if (baseidentity == null) {\n baseidentity = \"\";\n\
                    \ }\n tf = IdentityPolicy.userIDExists(baseidentity, false, false);\
                    \ \n if (!tf) \n return baseidentity; \n while (tf) { \n counter+=1;\
                    \ \n identity = baseidentity + counter; \n tf = IdentityPolicy.userIDExists(identity,\
                    \ false, false); \n } \n return identity; \n } \n \n return createIdentity();"
                  erpolicytarget: 2;*
                  objectclass:
                  - top
                  - erIdentityPolicy
                  - erPolicyBase
                  - erPolicyItemBase
                  - erManagedItem
                  erpolicyitemname: Default identity policy for ITIM (Person)
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
    post:
      tags:
      - Identity Policy Management
      summary: Identity Policy Create
      description: "Creates a new Identity Policy with the given attributes. \r\n\
        orgID : The ID of the Organization container in which this Identity Policy\
        \ is to be created. This parameter is required. \r\n_attributes : JSON representation\
        \ of the Identity Policy attributes to be set. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdentityPolicyRequestBeanSwagger'
      responses:
        "201":
          description: Created
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /acis:
    get:
      tags:
      - ACI Management
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: name
        in: query
        description: filter ACIs by name
        schema:
          type: string
      - name: orgID
        in: query
        description: filter ACIs by organization
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: target
        in: query
        description: filter ACIs by type
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIResponseBean'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "206":
          description: partial content when range parameter is used
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIResponseBean'
    post:
      tags:
      - ACI Management
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIRequestBean'
      responses:
        "201":
          description: OK. The changes were accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIResponseBean'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles/{uuid}:
    get:
      tags:
      - ITIM Group Management
      summary: Lookup System Role
      description: Returns information about the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma- separated attributes to return for the system\
          \ role. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default all the attributes are returned. Example - ?attributes=errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for the reference
          attributes of system role (eg. erparent). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erparent.*
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/systemroles/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: AdminRole1111
                  ersystemrolecategory:
                    href: /itim/rest/v1.2/views/1
                    title: "1"
                  erparent:
                    href: /itim/rest/v1.2/organizationcontainers/organizations/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: isvgim
                _attributes:
                  errolename: AdminRole1111
                  description: new updated description for the systemrole
                  ersystemrolecategory: "1"
                  uuid: cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                  parentUUID: cc7ec53b-3305-41bb-9c6f-ce7b67115d9b
    put:
      tags:
      - ITIM Group Management
      summary: System Role Update
      description: Updates the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySystemRoleRequestSwagger'
      responses:
        "204":
          description: OK. The request was successful.
    delete:
      tags:
      - ITIM Group Management
      summary: System Role Delete
      description: Deletes the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories:
    get:
      tags:
      - Access Management
      summary: Access Categories Search
      description: Returns all access categories defined in Identity Governance.
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BY2Nlc3NSb2xlLG91PWFjY2Vzc1R5cGUsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: Role
                _attributes:
                  name: Role
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1NYWlsR3JvdXAsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: E-mail group
                _attributes:
                  name: MailGroup
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1TaGFyZWRGb2xkZXIsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: Shared folder
                _attributes:
                  name: SharedFolder
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Application
                _attributes:
                  name: Application
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1CdXNpbmVzcyxvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Business
                _attributes:
                  name: Business
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/delegations:
    get:
      tags:
      - Delegation Management
      summary: Delegations Lookup
      description: "Returns information about the delegations, if any, for the specified\
        \ user."
      parameters:
      - name: systemUserId
        in: path
        description: Unique Identifier for a system user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                links:
                  delegatee:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                  self:
                    href: itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations/JGVydWlkPWNyaWVnbGUsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20kMTQyNDEzNjYwMDAwMCQxNDI0MjIzMDAwMDAw
                _attributes:
                  endDate: 1424223000000
                  startDate: 1424136600000
    post:
      tags:
      - Delegation Management
      summary: Delegation Add
      description: Adds delegation for the specified user.
      parameters:
      - name: systemUserId
        in: path
        description: Unique Identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateRequestBean'
      responses:
        "201":
          description: The delegation schedule is successfully created.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts:
    get:
      tags:
      - Search
      summary: Account Search
      description: "Returns information about accounts that match the specified search\
        \ criteria if there are any. \nBy default, no attributes are returned. The\
        \ client must specify the \"attributes\" query parameter to request the attributes\
        \ to be returned in the \"_attributes\" property of each account. \nIf wild-card\
        \ is used, the list of returned attributes is different for different account\
        \ profiles. \nIf a particular type is searched, the client knows the exact\
        \ value to pass so that a profile can be searched(Ex.PosixLinuxAccount, ITIMAccount\
        \ etc.). \n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes that are returned for\
          \ each account. The specified attributes are returned in the \"_attributes\"\
          \ property of each account. Specifying a value of \"*\" returns all attributes.\
          \ Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of accounts (eg. erservice). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned account. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Deruid\
          \ (%2D is UTF-8 encoding for - sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: criegle
                _attributes:
                  eruid: criegle
              - _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9YWF1c3RpbixvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: aaustin
                _attributes:
                  eruid: aaustin
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/{activityId}:
    get:
      tags:
      - Activity Management
      summary: Activity Lookup
      description: Returns information about the specified activity.
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: participantLimit
        in: query
        description: Specifies the maximum number of participants for an activity.
          Specifying a zero (0) indicates that there is no limit.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                request:
                  id: "2461570965242287130"
                  justification: ghyrh
                  submittedDate: 1428649755392
                _links:
                  requester:
                    href: /itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: James Pearch
                  request:
                    href: /itim/rest/requests/2461570965242287130
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
                  workitem:
                    href: /itim/rest/workitems/2461578203364444755
                  self:
                    href: /itim/rest/activities/2461577992772412588
                    title: Approval activity
                  dependentAccesses: []
                  participants:
                  - href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                subject:
                  _links:
                    icon:
                      href: custom/ui/images/access/iconApplicationAccess.gif
                    self:
                      href: /itim/rest/access/2460300160735116790
                      title: GSA
                  _attributes:
                    name: GSA
                    accessCategory: Application
                    description: GSA repository.
                    serviceName: GSA
                    type: ACCESS
                    accountUserId: asmith
                uiProperties:
                - name: ui.activities.displayJustification
                  value: true
                - name: ui.activities.displayUserComments
                  value: true
                _attributes:
                  requesteeName: Alan Smith
                  workitemId: "2461578203364444755"
                  instructions: Request for Approval
                  totalNumberOfParticipants: 1
                  requesterName: James Pearch
                  dueDate: 1428736156784
                  escalated: false
                  name: Approval activity
                  id: "2461577992772412588"
                  type: APPROVAL
                  status:
                    text: Pending
                    key: RequestAuditDataActivity.Status.PENDING
                  dueDateWarning: true
                actions:
                  approve:
                    code: AA
                    inProgressLabel:
                      text: Approving
                      key: AA_inProgress
                    label:
                      text: Approve
                      key: AA
                  reject:
                    code: AR
                    inProgressLabel:
                      text: Rejecting
                      key: AR_inProgress
                    label:
                      text: Reject
                      key: AR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access:
    get:
      tags:
      - Search
      summary: Access Search
      description: Returns all accesses for the specified user.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ access item. The specified attributes are returned in the \"_attributes\"\
          \ property of each access item. Specifying a value of \"*\" returns all\
          \ attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: searchForCommonAccess
        in: query
        description: Decides whether default search for common access should be executed
          in request access flow.
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) by which the returned list of accesses should be\
          \ sorted. Sorting is currently supported on the following attributes- accessName,\
          \ accessCategory, description and additionalInformation. Any other attribute\
          \ will be ignored and the sorting attribute and order will be chosen by\
          \ the underlying data store (in the case of access it is RDBMS). Example\
          \ - ?sort=%2BaccessName, ?sort=%2BaccessCategory, ?sort=%2Ddescription,\
          \ ?sort=%2DadditionalInformation (%2B and %2D is UTF-8 encoding for + and\
          \ - sign respectively)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ searches without referencing any cache. The 'delete-cache' option deletes\
          \ the cache. In this case, empty search results are returned. Example -\
          \ Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplications~BusinessApplications~FinanceAccess.gif
                  self:
                    href: /itim/rest/access/376511431976528341
                    title: Accounting Plus
                  owners:
                    href: /itim/rest/access/376511431976528341/owners
                _attributes:
                  badges: []
                  additionalInformation: ' '
                  accessName: Accounting Plus
                  entityType: 2
                  entityProfile: LdapGroupProfile
                  accessCategory: Applications:BusinessApplications:Finance
                  isCommon: false
                  description: "Accounts payable, receivable and more..."
                  tags: "Require manager approval |testing 1,2,3"
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif
                  self:
                    href: /itim/rest/access/376511317273827596
                    title: Business Partner Connect
                  owners:
                    href: /itim/rest/access/376511317273827596/owners
                _attributes:
                  badges: []
                  additionalInformation: ' '
                  accessName: Business Partner Connect
                  entityType: 2
                  entityProfile: LdapGroupProfile
                  accessCategory: Applications:SupportApplications
                  isCommon: false
                  description: Allows business partners to access project manuals
                    and support documentation.
                  tags: Customer data
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/3383957381996504114
                    title: Manager
                  owners:
                    href: /itim/rest/access/3383957381996504114/owners
                _attributes:
                  badges: []
                  roleAssignmentAttributes:
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: StartDate
                      assignmentAttributeLabel: StartDate
                      definedRoleName: Manager
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: EndDate
                      assignmentAttributeLabel: EndDate
                      definedRoleName: Manager
                  additionalInformation: ' '
                  accessName: Manager
                  entityType: 3
                  entityProfile: Organization role
                  description: Allows end user a manager role.
                  isCommon: false
                  tags: Customer data
                  isEditRoleAssignmnetAttributeAllowedForPerson: true
    post:
      tags:
      - Access Management
      summary: Create Access
      description: "\r\n\r\nCreates access for the entity \r\n\r\n Required attributes:\
        \ \r\n\r\nentityType - Value should be 3 as currently this API only supports\
        \ creating access for the role \r\n\r\nentityRef - Value should be uuid of\
        \ the role for which access needs to be created. \r\n\r\naccessCategory -\
        \ \r\n\r\nIn case of providing accessSubtype value for accessCategory hierarchy\
        \ of accessType should be provided \r\n\r\ne.g. If Application has subtype\
        \ ApplicationSubtype and ApplicationSubtype has subtype ApplicationSubtypeChild\r\
        \n\r\nthen to add ApplicationSubtypeChild as accessCategory value should be\
        \ provided as Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\
        \nNote: isCommon attribute is only applicable for static roles not for dynamic\
        \ roles. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessBean'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                accessId: "5065865355324288496"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/constraints/password:
    get:
      tags:
      - Password Management
      summary: System User password constraints Lookup
      description: "Returns the password constraints for the specified system user.\
        \ \r\nThe \"passwordRules\" property is an array listing of each rule for\
        \ the password. If there are no password rules, an empty array is returned."
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated constraints to return for the specified
          link. The specified constraints are returned in the "_embedded" property
          of the constraint object. Example - ?embedded=passwordConstraints
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints/password
                    title: Password Constraints
                passwordRules:
                - text: The minimum number of characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories/{accessCategoryID}:
    get:
      tags:
      - Access Management
      summary: Access Category Lookup
      description: Returns information about a specified access category.
      parameters:
      - name: accessCategoryID
        in: path
        description: Unique Identifier for an access category.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  children:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/childaccesscategories
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                _attributes:
                  name: Application
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems/{workitemId}:
    put:
      tags:
      - Activity Management
      summary: WorkItem Modify
      description: "Modifies a work item by executing an action provided for the activity.\r\
        \n\r\nRequest Body Parameters:\r\n\r\nA decision based activity eg. approvals,\
        \ separation of duty violations, simple user recertifications:\r\n\r\nEither\
        \ of the following action code should be specified in the request body:\r\n\
        \r\nFor an activity approval : AA\r\n\r\nFor an activity rejection : AR\r\n\
        \r\n\r\n\r\nCompleting a work order request:\r\n\r\nEither of the following\
        \ action code should be specified in the request body:\r\n\r\nFor an activity\
        \ success : SS  if you complete the work order.\r\n\r\nFor an activity warning\
        \ : SW  if the work order is only partially complete.\r\n\r\nFor an activity\
        \ failure : SF  if you cannot complete the work order.\r\n\r\n\r\n\r\nCompleting\
        \ a global alert policy enforcement:\r\n\r\nThe following action code should\
        \ be specified in the request body:\r\n\r\nFor an activity success: SS if\
        \ you want to correct the noncompliance.\r\n\r\nYou must set attribute deferActivity\
        \ to false.\r\n\r\n\r\n\r\nDeferring a global alert policy enforcement:\r\n\
        \r\nThe action code should be specified as SS in the request body:\r\n\r\n\
        You must set attribute deferActivity to true.\r\n\r\nYou must specify deferDate,\
        \ which is in milliseconds since the standard base time known as \"the epoch\"\
        , namely January 1, 1970, 00:00:00 GMT.\r\n\r\n\r\n\r\nProviding request for\
        \ information:\r\n\r\nThe following action code should be specified in the\
        \ request body:\r\n\r\nFor an activity request submission: RS.\r\n\r\nYou\
        \ can specify the value for RFI attributes in rfiAttributeValues.\r\n\r\n\r\
        \n\r\n\r\n\r\n[See request examples](/itim/swaggerdoc/workItemModify.html)"
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkItemUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
    post:
      tags:
      - Activity Management
      summary: User Re-certification Check Impact
      description: Evaluates the user re-certification impact
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: 'Specifies the HTTP method override. The value of this parameter
          is - "check-recertification" '
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRecertificationDetailsBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                rolesImpactTarget:
                - ownershipType: ""
                  name: Developers
                  impactedBy: ""
                  description: Developers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                - ownershipType: ""
                  name: Managers
                  impactedBy: ""
                  description: Managers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                accountsImpactTarget:
                - ownershipType: Individual
                  name: vm on linux service
                  impactedBy: ""
                  description: ""
                  dependentRecertificationTodoTargets:
                  - ownershipType: ""
                    name: apache access
                    impactedBy: ""
                    description: Apache access to xyz application
                    dependentRecertificationTodoTargets: []
                    dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                    impactType: explicit
                  dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                - ownershipType: Individual
                  name: vm on aix service
                  impactedBy: Developers
                  description: ""
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: implicit
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities:
    get:
      tags:
      - Activity Management
      summary: Activities Search
      description: Returns information about activities that match the specified search
        criteria.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: participantLimit
        in: query
        description: Specifies the maximum number of participants to return. Example.
          ?participantLimitParm=10
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned account."
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - request:
                  id: "2461570965242287130"
                  justification: ghyrh
                  submittedDate: 1428649755392
                _links:
                  requester:
                    href: /itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: James Pearch
                  request:
                    href: /itim/rest/requests/2461570965242287130
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
                  workitem:
                    href: /itim/rest/workitems/2461578203364444755
                  self:
                    href: /itim/rest/activities/2461577992772412588
                    title: Approval activity
                  dependentAccesses: []
                  participants:
                  - href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                subject:
                  _links:
                    icon:
                      href: custom/ui/images/access/iconApplicationAccess.gif
                    self:
                      href: /itim/rest/access/2460300160735116790
                      title: GSA
                  _attributes:
                    name: GSA
                    accessCategory: Application
                    description: GSA repository.
                    serviceName: GSA
                    type: ACCESS
                    accountUserId: asmith
                _attributes:
                  requesteeName: Alan Smith
                  workitemId: "2461578203364444755"
                  instructions: Request for Approval
                  totalNumberOfParticipants: 1
                  requesterName: James Pearch
                  dueDate: 1428736156784
                  escalated: false
                  name: Approval activity
                  id: "2461577992772412588"
                  type: APPROVAL
                  status:
                    text: Pending
                    key: RequestAuditDataActivity.Status.PENDING
                  dueDateWarning: true
                actions:
                  approve:
                    code: AA
                    inProgressLabel:
                      text: Approving
                      key: AA_inProgress
                    label:
                      text: Approve
                      key: AA
                  reject:
                    code: AR
                    inProgressLabel:
                      text: Rejecting
                      key: AR_inProgress
                    label:
                      text: Reject
                      key: AR
              - {}
              - {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/{requestId}:
    get:
      tags:
      - Search
      summary: Request Lookup
      description: Returns information about the specified request.
      parameters:
      - name: requestId
        in: path
        description: Unique Identifier for a request.
        required: true
        schema:
          format: int64
          type: integer
      - name: activityID
        in: query
        description: Specifies the activity ID that requires request information.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  requester:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                  self:
                    href: /itim/rest/requests/9170709815227290417
                obligations:
                - _auditattributes: {}
                  action: MODIFY_PERSON
                  id: obligation1
                  _attributes:
                    manager: "erglobalid=7641180504304689103,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                requests:
                - _links:
                    requestee:
                      href: /itim/rest/people
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Chuck Riegle
                      erparent:
                        href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD04ODE1MzI3OTYxODY1NjE5ODk3LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    _attributes:
                      mail: criegle@ibm.com
                      erparent: "erglobalid=8815327961865619897,ou=orgChart,erglobalid=00000000000000000000,ou=org,dc=com"
                  obligations:
                  - $ref: obligation1
                  _attributes:
                    action:
                      text: Edit profile
                      key: RequestAuditData.Action.MODIFY
                    status:
                      text: Fulfilled
                      key: RequestAuditData.Status.FULFILLED
                _attributes:
                  action:
                    text: Edit profile
                    key: RequestAuditData.Action.MODIFY
                  justification: Updating manager
                  id: "9170709815227290417"
                  submittedDate: 1430211848230
                  completedDate: 1430211859884
                  status:
                    text: Fulfilled
                    key: RequestAuditData.Status.FULFILLED
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{category}:
    get:
      tags:
      - Search
      summary: Organization Container Search
      description: Returns information about the organization container that matches
        the specified search criteria if any.
      parameters:
      - name: category
        in: path
        description: "Specifies the type of organization container to look up. Valid\
          \ values are - \"admindomains\", \"bporganizations\", \"organizationunits\"\
          , \"locations\", and \"organizations\". The values are case-insensitive."
        required: true
        schema:
          enum:
          - admindomains
          - bporganizations
          - organizationunits
          - locations
          - organizations
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ organizational container. By default, no attributes are returned. The\
          \ client must specify the \"attributes\" query parameter to request the\
          \ attributes to be returned in the \"_attributes\" property of each person.\
          \ A requested attribute is returned if the client does not have permission\
          \ to retrieve the attribute or if the value of the attribute is null. Specifying\
          \ a value of \"*\" will return all of the attributes. Example. ?attributes=l"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that search returns. Example.
          ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned location. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example. ?sort=%2Bl\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  l: Raleigh
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services:
    get:
      tags:
      - Service Management
      summary: Search Service
      description: "Returns information about services matching the specified search\
        \ criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"name\" of the service is\
        \ returned in the _links.self.title property. \r\n\r\nThe \"statusDetails\"\
        \ of the service is returned as the _links.statusDetails.href link. \r\n\r\
        \nBy default, no attributes are returned. The client must specify the \"attributes\"\
        \ query parameter to request the attributes to be returned in the \"_attributes\"\
        \ property of each service. \r\n\r\nIf a wild-card is used, the list of attributes\
        \ returned is different for different service profiles. \r\n\r\nTo search\
        \ a particular type, the client must know the exact value to pass to search\
        \ that profile(Ex.PosixLinuxProfile). \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ service. The specified attributes are returned in the \"_attributes\"\
          \ property of each service. Specifying a value of \"*\" returns all attributes.\
          \ Example - ?attributes=erservicename,owner,erparent"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned service. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Berservicename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without refererencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: GSA
                _attributes:
                  description: GSA hosted on Linux server.
                  erservicename: GSA
              - _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Fileshare on solaris
                _attributes:
                  description: Fileshare on solaris.
                  erservicename: Fileshare on solaris
    post:
      tags:
      - Service Management
      summary: Service Create
      description: "Creates a new service with the given attributes. \r\nprofileName:\
        \ Name of the service profile. This is a required parameter. \r\norgID: The\
        \ ID of the Organization container in which this service is to be created.\
        \ This parameter is required. \r\n_attributes : JSON representation of the\
        \ service attributes to be set. \r\n \r\nOptional request body parameters:\r\
        \n manualWorkOrderRequest: This is applicable only when service is to be created\
        \ in manual connection mode.\r\n If you request service in manual connection\
        \ mode and do not provide the details for the manualWorkOrderRequest, then\
        \ the service will\r\n be created with a default data for manual work order.\r\
        \n The manualWorkOrderRequest should be specified in following format : \r\
        \n\r\n \"manualWorkOrderRequest\": {\r\n\r\n      \"participant\": {\r\n \
        \           \t\"type\":\"USER\",\r\n             \t\"id\":\"ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVy\r\
        \n                Z2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ\"\
        \r\n       },\r\n      \"escalationParticipant\": {\r\n            \t\"type\"\
        :\"ADMINISTRATOR\"\r\n       },\r\n     \t\"escalationPeriod\":\"10\",\r\n\
        \     \t\"defaultNotification\":\"true\"\r\n }\r\n \r\n Supported values for\
        \ participant and escalationParticipant \"type\":\r\n 1) ADMINISTRATOR, SERVICE_OWNER,\
        \ MANAGER : id value does not required.\r\n 2) USER, ORGANIZATIONAL_ROLE,\
        \ GROUP : id value required.\r\n \r\n defaultProvisioningPolicyRequest: Should\
        \ be specified only when you want a default provisioning policy to be created\
        \ after\r\n the service is created.\r\n If you request service without providing\
        \ any details for defaultProvisioningPolicyRequest then request does not create\
        \ default\r\n provisioning policy for a service.\r\n \r\n This should be specified\
        \ in the following format :\r\n \"defaultProvisioningPolicyRequest\": {\r\n\
        \r\n \t\t\"enabled\":\"true\",\r\n \t\t\"provisioningMode\":\"Automatic\"\r\
        \n }\r\n \r\n \"provisioningMode\" mode, which specifies the provisioning\
        \ policy mode, should be Automatic or Manual.\r\n\r\n[See more request examples](/itim/swaggerdoc/serviceCreate.html)"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/password:
    put:
      tags:
      - Password Management
      summary: Change Password (System Accounts)
      description: Changes password for the Identity Governance System account.
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID to retrieve constraints for.
        required: true
        schema:
          type: string
      - name: maxWaitTime
        in: query
        description: Maximum time (in milliseconds) after which the call returns if
          request is not complete. A value less than 0 is not considered. Example
          - ?maxWaitTime=5000
        schema:
          type: string
      - name: pollingTime
        in: query
        description: Frequency (in milliseconds) to check if the request completed.
          A value less than 0 is not considered. Example - ?pollingTime=1000
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: Specifying "validate" requests validation of the password. Example
          - X-HTTP-Method-Override=validate
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordSwaggerBean'
      responses:
        "202":
          description: OK. The request was successful
        "400":
          description: Bad request. This response is returned if the request header
            or query parameters are not formatted correctly.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - severity: E
                text: CTGIMH001E The password does not meet the requirements of the
                  password rules.
                id: CTGIMH001
                key: com.ibm.passwordrules.ONE_OR_MORE_RULES_VIOLATED
                supportingData:
                  _links:
                    self:
                      href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password
                    systemuser:
                      href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                      title: ITIM Manager
                  passwordRules:
                  - text: The minimum number of characters in the password is 1.
                    inserts:
                    - "1"
                    key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
                    passedValidation: true
                  - text: The maximum number of characters in the password is 5.
                    inserts:
                    - "5"
                    key: com.ibm.isim.rest.passwordrules.MAX_LENGTH
                    passedValidation: false
                  - text: The maximum repeated characters in the password is 1.
                    inserts:
                    - "1"
                    key: com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL
                    passedValidation: true
                  - text: The password must not include the characters "!@#$".
                    inserts:
                    - '!@#$'
                    key: com.ibm.isim.rest.passwordrules.INVALID_CHAR
                    passedValidation: true
    post:
      tags:
      - Password Management
      summary: Validate password (System Account)
      description: Validates password for the Identity Governance System account.
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: Specifying a value of "validate" indicates a request to validate
          the password. Example - X-HTTP-Method-Override=validate
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePasswordSwaggerBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: '/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password '
                  systemuser:
                    href: '/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t '
                    title: ITIM Manager
                passwordRules:
                - text: The minimum number of characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
                  passedValidation: true
                - text: The maximum number of characters in the password is 5.
                  inserts:
                  - "5"
                  key: com.ibm.isim.rest.passwordrules.MAX_LENGTH
                  passedValidation: false
                - text: The maximum repeated characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL
                  passedValidation: false
                - text: The password must not include the characters "!@#$".
                  inserts:
                  - '!@#$'
                  key: com.ibm.isim.rest.passwordrules.INVALID_CHAR
                  passedValidation: true
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /roles/{roleId}:
    get:
      tags:
      - Search
      summary: Role Lookup
      description: Returns information about the specified role.
      parameters:
      - name: roleId
        in: path
        description: Unique Identifier for a role.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma-separated attributes to return for the role.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default\
          \ all attributes are returned. Example - ?attributes=owner,errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of role (eg. owner). The specified attributes are returned in
          the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=owner.cn.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: ITIM Administrators
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  owner: "erglobalid=6892768069536854,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  errolename: ITIM Administrators
                  description: Predefined system administrator role
                  eraccessname: ITIM Administrators
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/enforcepolicy/{serviceId}:
    post:
      tags:
      - Service Management
      summary: Enforce Policy for Service
      description: "Enforce a policy on the specified service. \r\n\r\nscheduledTime\
        \ is optional. The scheduled time should be specified in following format\
        \ : MM/dd/yyyy HH:mm \r\n\r\nIf you want to enforce the policy immediately\
        \ then provide the null or empty contents (i.e. null or {}) in request body.\r\
        \n"
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnforcePolicyRequestBeanSwagger'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/person:
    get:
      tags:
      - Person Management
      summary: People Search for Person Category
      description: "Returns information for the specified user that belongs to a Person\
        \ category. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title\
        \ property. \r\n\r\nBy default, no attributes are returned. The client must\
        \ specify the \"attributes\" query parameter to request the attributes that\
        \ are returned in the \"_attributes\" property of each user. \r\n\r\nA requested\
        \ attribute is not returned if the client does not have permission to retrieve\
        \ the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute\
        \ has multiple values, the value of the corresponding property is an array\
        \ of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each person. The specified attributes are returned in the \"_attributes\"\
          \ property of each person. Specifying a value of \"*\" will return all of\
          \ the attributes. Example - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of a user (eg. manager). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=manager.cn
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned result. Note: The client is responsible\
          \ for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is\
          \ UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  manager:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3UdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: Chuck Riegle
                    _attributes:
                      cn: Chuck Riegle
                _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Alan Smith
                _attributes:
                  sn: Smith
                  cn: Alan Smith
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Chuck Riegle
                _attributes:
                  sn: Riegle
                  cn: Chuck Riegle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/profiles:
    get:
      tags:
      - Person Management
      summary: Person profile search
      description: Returns all profile types for Person.
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                profiles:
                - Person
                - BPPerson
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms/people/{profileName}:
    get:
      tags:
      - Search
      summary: Form Template Person Profile Lookup
      description: Returns the form of the specified person profile
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body:
                      tabbedForm:
                        tab:
                        - image: true
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                            - parameter: "true"
                              type: REQUIRED
                            - type: INVALID_CHARS
                            - parameter: "true"
                              type: NO_WHITE_SPACE
                            label: User ID
                            required: "true"
                          - input:
                              size: "50"
                              name: data.erposixgecos
                              type: text
                            editable: true
                            name: data.erposixgecos
                            label: Gecos (comments)
                          - input:
                              size: "50"
                              name: data.erposixuid
                              type: text
                            editable: true
                            name: data.erposixuid
                            constraint:
                            - parameter: "true"
                              type: INTEGER_ONLY
                            - parameter: "0"
                              type: MIN_VALUE
                            label: UID number
                          - editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixdupuid
                            label: Allow duplicate UIDs?
                          - isHiddenOnModify: "true"
                            editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixprivategroup
                            label: Do Not Create User Private Group
                          - editable: true
                            name: data.erposixsudoprivileges
                            isReadOnlyOnModify: "true"
                            label: sudo privileges
                            editableTextList:
                              comboItem:
                                size: true
                                width: "300"
                                name: data.erposixsudoprivileges
                                label: sudo privileges
                            direction: inherit
                          index: "0"
                          title: Account information
                          selected: "true"
                          url: "javascript:switchTabs (document.forms['body'],0);"
                        - image: true
                          formElement: []
                          index: "1"
                          title: Access information
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],1 );"
                        - image: true
                          formElement: []
                          index: "3"
                          title: Pre Exec and Post Exec Choices
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],3 );"
                _links:
                  resourcebundle:
                    href: /itim/rest/forms/resourcebundle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts/{accountId}:
    get:
      tags:
      - Search
      summary: Account Lookup
      description: Returns information about the specified account.
      parameters:
      - name: accountId
        in: path
        description: Unique Identifier for an account.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the account.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of accounts (eg. erservice). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY3NDYwMzI3MDc1MzQ5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  erservice:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3NDc4MTk3Nzk1MzA2LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/accounts/ZXJnbG9iYWxpZD02ODkyNzY3NjE1NTUxODgzNjQzLG91PTAsb3U9YWNjb3VudHMsZXJnbG9MDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: asmith
                _attributes:
                  owner: "erglobalid=6892767460327075,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=6892757478197795,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eruid: asmith
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/complianceDetails/{activityId}:
    get:
      tags:
      - Activity Management
      summary: Compliance Issues Lookup
      description: Returns compliance issues to be resolved for the specified todo
        activity.
      parameters:
      - name: activityId
        in: path
        description: Unique identifier for a activity.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _attributes:
                  name: Local Groups
                  label: Local Groups
                  newValues: Guest
              - _attributes:
                  name: Description
                  label: Description
                  oldValues: Distributed Users
              - _attributes:
                  name: Description
                  label: Description
                  newValues: Common Users
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse/user:
    post:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup
      description: Returns the list of forgotten password questions configured for
        the user.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeRequestUserBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/user
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
        "400":
          description: "Bad Request. This could happen if the forgotten passwordconfiguration\
            \ is not enabled or the user has not providedanswers to the forgotten\
            \ password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM049E The password challenge response function is disabled.
                  Contact the Identity Governance administrator for more information.
                id: CTGIMM049
                key: com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/{accessId}/owners:
    get:
      tags:
      - Access Management
      summary: Access Owners Search
      description: Returns users who are owners of the specified access.
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ user. Example - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma separated attributes to return for a user\
          \ reference attribute (eg. manager). The specified attributes are returned\
          \ in the \\\"_embedded\\\" section. Example - ?embedded=manager.name,manager.telephoneNumber."
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) for sorting the returned users. Example - ?sort=+cn"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the\
          \ client that specify the same search criteria are satisfied via the cache.\
          \ The 'no-cache' \"\r\n\t\t\t\t\t+ \"option performs the search without\
          \ referencing any cache. The 'delete-cache' option deletes the cache. \"\
          \r\n\t\t\t\t\t+ \"In this case, empty search results are returned. Example\
          \ - Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAcGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Chuck Reigle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories/{accessCategoryID}/childaccesscategories:
    get:
      tags:
      - Access Management
      summary: Child Access Categories Lookup
      description: Returns all sub-categories of a specified access category.
      parameters:
      - name: accessCategoryID
        in: path
        description: Unique Identifier for an access category.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbkhpZXIxLGVyb2JqZWN0cHJvZmlsZW5hbWU9QXBwbGljYXRpb24sb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: Finance
                _attributes:
                  name: Finance
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbjg3NjY4Um9sZTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: HumanResource
                _attributes:
                  name: HumanResource
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1zdWJjYXRlZ29yeTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Marketing
                _attributes:
                  name: Marketing
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms/resourcebundle:
    get:
      tags:
      - Search
      summary: Resource Bundle Lookup
      description: Returns resource bundle which contains all the labels for Identity
        Governance attributes.
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/forms/resourcebundle
                _attributes:
                  "0": Active
                  erservicepassword: Administrator password
                  "1": Inactive
                  street: Street
                  reconciliation.monthly: Monthly
                  eraccessoption: Access Options
                  erlastoperation: Last Operation
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts/password:
    put:
      tags:
      - Password Management
      summary: Get Password Rules/Submit Change Password/Validate Change Password
      description: "This endpoint can be used to perform following operations:\n\n\
        [Get Password Rules](/itim/swaggerdoc/Get_Password_Rules.html) - Retrieve\
        \ password policies that tell users how to create a compliant password. \n\
        [Submit Change Password](/itim/swaggerdoc/Submit_Change_Password.html) - Submit\
        \ a password to update it. \n[Validate Change Password](/itim/swaggerdoc/Validate_Change_Password.html)\
        \ - Validate whether the provided password complies with password rules. \n\
        \nClick link to see more details for each request"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'cumulate' to gather password rules. Example - X-HTTP-Method-Override\
          \ = cumulate \nUse 'submit-in-batch' to set new password. Example - X-HTTP-Method-Override\
          \ = submit-in-batch \nUse 'validate-error-check-only' to validate the password\
          \ against rules. Example - X-HTTP-Method-Override = validate-error-check-only "
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{orgContainerId}:
    put:
      tags:
      - Organizational Management API
      summary: Transfer Organization unit
      description: Moves the organization unit from the current parent container to
        a new parent
      parameters:
      - name: orgContainerId
        in: path
        description: "Unique identifier for an organization, organization unit, location,\
          \ admin domain, busines partner unit."
        required: true
        schema:
          type: string
      - name: parentOrg
        in: query
        description: Unique identifier of the new parent container
        required: true
        schema:
          type: string
      - name: schedule
        in: query
        description: "The scheduled time should be specified in following format:\
          \ MM/dd/yyyy HH"
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2531483138088579374"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/rfiformdetails/{workitemId}:
    get:
      tags:
      - Activity Management
      summary: RFI Form Details Lookup
      description: Returns RFI form details to be resolved for the specified todo
        activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a activity.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body: {}
                container: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                processName: Person Add
                defaultAttrValues:
                  uid:
                  - Sachin
                  employeetype:
                  - empType1
                  manager:
                  - "erglobalid=7784750119600149440,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  givenname:
                  - Sachin Babar
                id: CREATE_PERSON
                operation: add
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /authz/v1.0/entitlements/{entitlement}:
    post:
      tags:
      - Entitlement Management
      summary: Grant and Revoke an Entitlement to one or multiple users
      description: "\r\n\r\nGrant and Revoke an Entitlement to one or multiple users\
        \ \r\n\r\n Required attributes: \r\n\r\n user - Value should be Person ID\
        \ \r\n"
      parameters:
      - name: entitlement
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke'
      responses:
        "200":
          description: Success
          content:
            application/json:
              example:
              - code: 44e5e3f9-1e6e-4c34-83db-546ddf8cd693
                success: true
                operation: grant
              - code: 44e5e3f9-1e6e-4c34-83db-546ddf8cd693
                success: true
                operation: revoke
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /formtemplates/{profileName}:
    get:
      tags:
      - Form Designer APIs v1.2
      summary: Get Formtemplate
      description: This API is used to get formtemplate for a profile.
      parameters:
      - name: profileName
        in: path
        description: "Select profileName. Example values: WinLocalAccount, BPPerson,\
          \ BPOrganization, WinLocalGroupProfile, Location, Organization, OrganizationalUnit,\
          \ Person, DefaultRole, AdminDomain, ADFeed, CSVFeed, DSML2Service, DSMLInfo,\
          \ HostedService, ITIMService, RFC2798Feed, WinLocalProfile, SystemRole,\
          \ ITIMAccount"
        required: true
        schema:
          type: string
          example: Person
      responses:
        "200":
          description: Success
          content:
            application/xml:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
        "400":
          description: Bad Request
          content:
            application/xml: {}
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/xml: {}
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/xml: {}
            application/json: {}
        "404":
          description: Not Found
          content:
            application/xml: {}
            application/json: {}
    put:
      tags:
      - Form Designer APIs v1.2
      summary: Update Formtemplates
      description: "This API is used to update a formtemplate for a profile. Required\
        \ attributes: profileName"
      parameters:
      - name: profileName
        in: path
        description: "Select profileName. Example values: WinLocalAccount, BPPerson,\
          \ BPOrganization, WinLocalGroupProfile, Location, Organization, OrganizationalUnit,\
          \ Person, DefaultRole, AdminDomain, ADFeed, CSVFeed, DSML2Service, DSMLInfo,\
          \ HostedService, ITIMService, RFC2798Feed, WinLocalProfile, SystemRole,\
          \ ITIMAccount"
        required: true
        schema:
          type: string
          example: Person
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignFormBean'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Success
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people:
    get:
      tags:
      - Person Management
      summary: Person Search
      description: "Returns information about users that match the specified search\
        \ criteria if any. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title\
        \ property. \r\n\r\nBy default, no attributes are returned. The client must\
        \ specify the \"attributes\" query parameter to request the attributes to\
        \ return in the \"_attributes\" property of each person. \r\n\r\nA requested\
        \ attribute is not returned if the client does not have permission to retrieve\
        \ the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute\
        \ has multiple values, the value of the corresponding property is an array\
        \ of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each person. The specified attributes are returned in the \"_attributes\"\
          \ section. Specifying a value of \"*\" returns all attributes. Example -\
          \ ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for a user\
          \ reference attribute (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section. Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      - name: forms
        in: query
        description: "Specifies the boolean. If true, then form are returned for the\
          \ user."
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: subordinateFilter
        in: query
        description: "Specifies the boolean. If true, then the returned users are\
          \ filtered to narrow the search to a logged in users subordinates."
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Judith Hall
                _attributes:
                  telephoneNumber:
                  - 555-1111
                  - 555-2222
                  mail: jhall@jkenterprises.com
              - _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ABCnbG8iDFxpTR01Ngh4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjWQVdlZ
                    title: Chuck Riegle
                _attributes:
                  telephoneNumber: 555-3333
                  mail: criegle@jkenterprises.com
    post:
      tags:
      - Person Management
      summary: Person Create
      description: "\r\n\r\nCreates a new person with the given attributes \r\n\r\n\
        profileName, orgID is required . \r\n\r\nscheduledTime is optional. The scheduled\
        \ time should be specified in following format : MM/dd/yyyy HH:mm \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRequestBean'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /ui/api/v1.0/user/preferences/customization:
    get:
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse/{userid}:
    get:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup (Deprecated)
      description: "Returns the list of forgotten password questions configured for\
        \ the user. \nThis API has been deprecated to restrict passing userId in a\
        \ URL. For secure lookup of Forgotten Password Questions, use 'Forgotten Password\
        \ Questions Lookup' API with POST method.\n"
      parameters:
      - name: userid
        in: path
        description: Specifies the name of the user's Identity Governance System account.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/itim%20manager
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
        "400":
          description: "Bad Request. This could happen if the forgotten passwordconfiguration\
            \ is not enabled or the user has not providedanswers to the forgotten\
            \ password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM049E The password challenge response function is disabled.
                  Contact the Identity Governance administrator for more information.
                id: CTGIMM049
                key: com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED
      deprecated: true
    put:
      tags:
      - Password Management
      summary: Submit Responses for Forgotten Password Questions
      description: Submit responses for forgotten password questions to recover password.
      parameters:
      - name: userid
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordSubmitResponseBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
                _attributes:
                  transactionid: "283367112556274689"
                  status: SUCCESS
        "400":
          description: "Bad Request. This might happen if the user providedincorrect\
            \ responses to forgotten password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM036E The response is incorrect. Enter correct response.
                id: CTGIMM036
                key: com.ibm.itim.apps.ejb.home.HomeBean.INVALID_ANSWERS
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /authz/v1.0/access/assignments/assignment-attributes:
    put:
      tags:
      - Entitlement Management
      summary: Create assignment attributes value for a role type entitlement
      description: "\r\n\r\nCreate assignment attribute value for one or multiple\
        \ users \r\n\r\n Required attributes: \r\n\r\n Entitlement,User and AssignmentAttributeValue\
        \ \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAssignementAttributeValueGrant'
      responses:
        "200":
          description: Success
        "207":
          description: "There was a problem with one or more entities in the list,\
            \ error details will be available in the response"
          content:
            application/json:
              example:
              - result: "true"
                operation: update role assignment attribute values
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /identitypolicy/{identityPolicyId}:
    get:
      tags:
      - Identity Policy Management
      summary: Identity Policy Lookup
      description: Returns information about the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique Identifier for a Identity Policy.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the identity\
          \ policy. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default, all the attributes are returned. Example - ?attributes=erscope,erlabel"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ
                    title: Default identity policy for ITIM (Person)
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9RGl2eWE
                    title: Organization
                _attributes:
                  eruserclass: Person
                  erpolicytarget: 2;*
                  erpolicyitemname: Default identity policy for ITIM (Person)
    put:
      tags:
      - Identity Policy Management
      summary: Identity Policy Modify
      description: Modifies information for the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique identifier for a Identity Policy
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyIdentityPolicyBeanSwagger'
      responses:
        "202":
          description: OK. The request was successful
    delete:
      tags:
      - Identity Policy Management
      summary: Identity Policy Delete
      description: Deletes the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique identifier for a Identity Policy.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms:
    get:
      tags:
      - Search
      summary: Form Template Lookup
      description: Returns the form of the specified entity.
      parameters:
      - name: access
        in: query
        description: Specifies the unique identifier of the access. Use this attribute
          with the requestee parameter to return the form of the account.
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of forms. The parameter allows user to read the resource bundle
          details. Example - ?embedded=form.resourcebundle
        schema:
          type: string
      - name: requestee
        in: query
        description: Specifies the unique identifier of the person for whom the form
          must be looked up.
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body:
                      tabbedForm:
                        tab:
                        - image: true
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                            - parameter: "true"
                              type: REQUIRED
                            - type: INVALID_CHARS
                            - parameter: "true"
                              type: NO_WHITE_SPACE
                            label: User ID
                            required: "true"
                          - input:
                              size: "50"
                              name: data.erposixgecos
                              type: text
                            editable: true
                            name: data.erposixgecos
                            label: Gecos (comments)
                          - input:
                              size: "50"
                              name: data.erposixuid
                              type: text
                            editable: true
                            name: data.erposixuid
                            constraint:
                            - parameter: "true"
                              type: INTEGER_ONLY
                            - parameter: "0"
                              type: MIN_VALUE
                            label: UID number
                          - editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixdupuid
                            label: Allow duplicate UIDs?
                          - isHiddenOnModify: "true"
                            editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixprivategroup
                            label: Do Not Create User Private Group
                          - editable: true
                            name: data.erposixsudoprivileges
                            isReadOnlyOnModify: "true"
                            label: sudo privileges
                            editableTextList:
                              comboItem:
                                size: true
                                width: "300"
                                name: data.erposixsudoprivileges
                                label: sudo privileges
                            direction: inherit
                          index: "0"
                          title: Account information
                          selected: "true"
                          url: "javascript:switchTabs (document.forms['body'],0);"
                        - image: true
                          formElement: []
                          index: "1"
                          title: Access information
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],1 );"
                        - image: true
                          formElement: []
                          index: "3"
                          title: Pre Exec and Post Exec Choices
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],3 );"
                _links:
                  self:
                    href: /itim/rest/forms?access=/itim/rest/access/6892757478197795306&filterId=formSearch
                  resourcebundle:
                    href: /itim/rest/forms/resourcebundle
    post:
      tags:
      - Search
      summary: Label Lookup
      description: Returns label information about an attribute. For example - label
        of attribute "cn" is "Full Name".
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: "Default value : cn,sn,mail"
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - Full name
              - Last name
              - E-mail address
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /lifecyclerule:
    get:
      tags:
      - Search
      summary: Search All LifecycleRules
      description: Returns information about the lifecycle Rule that match the specified
        search criteria.
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for the LifecycleRule.
          The specified attributes are returned in the "_attributes" section of the
          response. Specifying a value of "*" returns all attributes.
        schema:
          type: string
      - name: ruleType
        in: query
        description: Specifies the rule type to be searched.
        required: true
        schema:
          enum:
          - PROFILE_TYPE
          - CATEGORY_TYPE
          - RECERT_POLICY_TYPE
          type: string
      - name: typeInfo
        in: query
        description: " String representing the type info to be searched. The values\
          \ that can be specified for typeInfo depends on ruleType and is summarized\
          \ below.To search rules at Global or other entity type level specify ruleType=CATEGORY_TYPE\
          \ and typeInfo = Global, Account, Person or BPPerson. To search rules for\
          \ a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile\
          \ name of the entity, like ADProfile, ITIMAccount, Person etc. To search\
          \ rules for a specific recertification policy, specify ruleType=RECERT_POLICY_TYPE\
          \ and typeInfo = the DN of the recertification policy."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxDQVRFR09SWV9UWVBFfEFjY291bnQ
                    title: Delete Person LCR
                _attributes:
                  filter: ""
                  name: Delete Person LCR
                  description: Lifecycle Rule to delete terminated person
                  ruleid: 9088349764208198280
                  operation: delete
    post:
      tags:
      - LifecycleRule Management
      summary: Add LifecylceRule
      description: "Create a new LifecylceRule with the given attributes. Following\
        \ is the description of attributes that are supported. \r\n\r\nruleType :\
        \ Mandatory Parameter in request body. Specifies the rule type. Allowed values\
        \ for different rule types are PROFILE_TYPE, CATEGORY_TYPE and RECERT_POLICY_TYPE.\
        \ \r\n\r\ntypeInfo : Mandatory Parameter in request body. String representing\
        \ the type info for different rule types. The values that can be specified\
        \ for typeInfo depends on ruleType and is summarized below. \r\n\r\nTo add\
        \ a rule at Global or other entity type level specify ruleType=CATEGORY_TYPE\
        \ and typeInfo = Global, Account, Person or BPPerson \r\n\r\nTo add a rule\
        \ for a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile\
        \ name of the entity, like ADProfile, ITIMAccount, Person etc. \r\n\r\n_attributes\
        \ : JSON representation of the lifecycle attributes to be set. Following attributes\
        \ can be specified. \r\n\r\nname : It is a mandatory attribute and specifies\
        \ the name of the lifecycle rule to be created. \r\n\r\ndescription : It is\
        \ an optional attribute that can be used to set the description of the lifecycle\
        \ Rule. \r\n\r\nOperationName : It is mandatory attribute that specifies the\
        \ name of the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter\
        \ : It is an optional attribute and can be used to set the lifecycle rule\
        \ filter. Filter is not set for typeInfo (Global). \r\n\r\nschedules : JSON\
        \ representation of array of lifecycle schedules to be set. It is an optional\
        \ attribute. In each schedule you can specify hour, minute, month, day of\
        \ the week, days of the week, day of the month, quarterly, and semi-annually.\
        \ Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour\
        \ of the schedule. Allowed values are 0-23. To specify hourly schedule set\
        \ hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59.\
        \ \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This\
        \ attribute is exclusive with dayOfWeek. To set the dayOfMonth value other\
        \ than -1(daily), the month value must be set either to specific month or\
        \ -1(monthly). Allowed values are 1-28, if the schedule is set to monthly,\
        \ otherwise the allowed value varies according to the month value. \r\n\r\n\
        month : month of the schedule (-1 if every month). Allowed values are 1-12\
        \ (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the\
        \ schedule (-1 if every day). This attribute is deprecated for weekly schedule.\
        \ This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 =\
        \ Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly\
        \ schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple\
        \ values are specified in pipe-separated format (1|2 = Sunday and Monday).\
        \ Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0\
        \ to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive\
        \ with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter\
        \ is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual\
        \ : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual\
        \ is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLifecycleRuleRequestBeanSwagger'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/lifecyclerule/MTI3NzcwMDUxODgxOTE5ODYwNnxDQVRFR09SWV9UWVBFfEFjY291bnQ
                    title: Suspend Dormant Account LCR
                _attributes:
                  Filter: (cn=*)
                  schedules:
                    dayOfWeek: 0
                    hour: 12
                    month: 0
                    dayOfMonth: -1
                    minute: 0
                  name: Suspend Dormant Account LCR
                  description: LCR to suspend dormant accounts
                  ruleid: 1277700518819198606
                  operation: suspend
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has a missing data for required
                  field "name".
                id: CTGIMZ052
                inserts:
                - name
                key: com.ibm.isim.rest.data.MISSING_DATA_FOR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers:
    get:
      tags:
      - Search
      summary: Search All Organization Containers
      description: Returns list of all the organization containers.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ organizational container. By default, no attributes are returned. The\
          \ client must specify the \"attributes\" query parameter to request the\
          \ attributes to be returned in the \"_attributes\" property of each organizational\
          \ container. A requested attribute is returned if the client does not have\
          \ permission to retrieve the attribute or if the value of the attribute\
          \ is null. Specifying a value of \"*\" will return all of the attributes.\
          \ Example. ?attributes=l"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  l: Raleigh
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/userrecertdetails/{workitemId}:
    get:
      tags:
      - Activity Management
      summary: User Re-certification Details Lookup
      description: Returns User re-certification details for the specified todo activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                accountsToCertify:
                - ownershipType: Individual
                  decision: true
                  name: vm on linux service
                  description: ""
                  dependentRecertificationTodoTargets:
                  - ownershipType: ""
                    decision: true
                    name: apache access
                    description: Apache access to xyz application
                    dependentRecertificationTodoTargets: []
                    dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                - ownershipType: Individual
                  decision: true
                  name: vm on aix service
                  description: ""
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                comment: ""
                justification: ""
                rolesToCertify:
                - ownershipType: ""
                  decision: true
                  name: Developers
                  description: Developers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                - ownershipType: ""
                  decision: true
                  name: Managers
                  description: Managers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/selfregister:
    post:
      tags:
      - Person Management
      summary: Person Self Register
      description: "Creates a person in the provisioning platform without accessing\
        \ the system with an Identity Governance account login and password. \r\n\r\
        \nprofileName, orgID is required.\r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfRegisterPersonRequestBean'
      responses:
        "202":
          description: Accepted.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests:
    get:
      tags:
      - Search
      summary: Requests Search
      description: "Returns information about requests matching the specified search\
        \ criteria, if any. \r\nBy default, all information is returned for each entry\
        \ in the array, which makes each search entry identical to a Request Lookup\
        \ API. \r\nA request is not returned if the client does not have permission\
        \ to access it. \r\n"
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the order (\"+\" for ascending, \"-\" for descending)\
          \ for sorting the returned requests. Note: The client is responsible for\
          \ performing URL encoding if necessary. The valid attributes used in the\
          \ sort are - requestee, status, date. By default, the entries are sorted\
          \ by date in descending order. Example - ?sort=%2Brequestee (%2B is UTF-8\
          \ encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: "OK. The request was successful\r\n\r\n[Please click here to\
            \ view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  requester:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                  self:
                    href: /itim/rest/requests/2186821305970425066
                obligations:
                - form:
                    page:
                      body:
                        form:
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: User ID
                            required: "true"
                            direction: inherit
                          - input:
                              size: "50"
                              name: data.cn
                              type: text
                            editable: true
                            name: data.cn
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: Full name
                            required: "true"
                            direction: inherit
                          - input:
                              size: "50"
                              name: data.sn
                              type: text
                            editable: true
                            name: data.sn
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: Last name
                            required: "true"
                            direction: inherit
                          - editable: true
                            name: data.description
                            loginHours:
                              orientation: landscape
                              interval: onehour
                            label: Authorized hours
                            direction: inherit
                          action: formvalidator0
                  action: CREATE_ACCOUNT
                  id: obligation1
                  _attributes:
                    employeenumber: Z456123
                    mail: criegle@jke.test
                    telephonenumber: 1-512-456-3451
                    givenname: Chuck
                    initials: ""
                    eruid: criegle
                    cn: Chuck Riegle
                    sn: Riegle
                    title: Senior Manager Accounting
                    erldappwdreset: "true"
                requests:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      icon:
                        href: custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif
                      self:
                        href: /itim/rest/access/376511317273827596
                    _attributes:
                      accessName: Business Partner Connect
                      description: Allows business partners to access project manuals
                        and support documentation.
                      serviceName: Application Server
                  obligations:
                  - $ref: obligation1
                  _attributes:
                    action:
                      text: New access request
                      key: AccessRequestAuditDataAccess.Action.ADD
                    status:
                      text: Pending
                      key: AccessRequestAuditDataAccess.Status.PENDING
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      icon:
                        href: custom/ui/images/access/iconFilesharesAccess.gif
                      self:
                        href: /itim/rest/access/376511866909527916
                    _attributes:
                      accessName: North Region File Share
                      description: File share containing region project files including
                        confidential data.
                      serviceName: GSA
                  obligations: []
                  _attributes:
                    action:
                      text: New access request
                      key: AccessRequestAuditDataAccess.Action.ADD
                    status:
                      text: Pending
                      key: AccessRequestAuditDataAccess.Status.PENDING
                _attributes:
                  action:
                    text: Manage Access
                    key: RequestAuditData.Action.ACCESS_BATCH_REQUEST
                  justification: User Need access
                  id: "2186821305970425066"
                  submittedDate: 1430733268995
                  status:
                    text: Pending
                    key: RequestAuditData.Status.PENDING
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/{serviceId}/statusdetails:
    get:
      tags:
      - Service Management
      summary: Lookup Service Status
      description: "Returns information about the status of the service. Service status\
        \ can be : \r\n\r\nALIVE - Last attempt to contact the service was successful.\
        \ \r\n\r\nFAILED - Last attemp to contact the service failed. \r\n\r\nLOCKED_RECON_IN_PROGRESS\
        \ - System is currently reconciling the service. \r\n\r\nATTEMPTING_RECOVERY\
        \ - System is trying to recover the service. \r\n\r\nUNKNOWN - Status is unknown.\
        \ \r\n"
      parameters:
      - name: serviceId
        in: path
        description: Unique Identifier for a service.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _attributes:
                  status: ALIVE
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/delegations/{delegateId}:
    put:
      tags:
      - Delegation Management
      summary: Delegation Modify
      description: Modifies the delegations for the specified user.
      parameters:
      - name: delegateId
        in: path
        description: Unique identifier for a delegation.
        required: true
        schema:
          type: string
      - name: systemUserId
        in: path
        description: Unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateRequestBean'
      responses:
        "200":
          description: OK. The request was successful
          content: {}
    delete:
      tags:
      - Delegation Management
      summary: Delegation Delete
      description: Deletes the delegation for the specified user.
      parameters:
      - name: delegateId
        in: path
        description: Unique identifier for a delegation.
        required: true
        schema:
          type: string
      - name: systemUserId
        in: path
        description: Unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entities/attributeslist:
    get:
      tags:
      - Search
      summary: Attribute Names Lookup
      description: "Returns the list of attributes configured for an objectclass .\
        \ This API is used in conjunction with form template REST API. ISIM forms\
        \ contains widgets in which the object class is configured by System Administrator.\
        \ \r\nThis object class is returned by \"form tempalate\" REST API in an encrypted\
        \ format. The API decrypts this object class and returns the list of attributes.\r\
        \n"
      parameters:
      - name: com.ibm.isim.rest.accesstoken
        in: header
        description: This mandatory header parameter contains the encrypted object
          class whose attributes are to be listed. This token will be generated by
          the "form template" REST API.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - attributeLabel: Administrative assistant
                _attributes:
                  name: secretary
                  label: Administrative assistant
              - attributeLabel: Business category
                _attributes:
                  name: businesscategory
                  label: Business category
              - attributeLabel: E-mail address
                _attributes:
                  name: mail
                  label: E-mail address
              - attributeLabel: Employee number
                _attributes:
                  name: employeenumber
                  label: Employee number
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers:
    get:
      tags:
      - System User Management
      summary: System User Search
      description: "Returns information about any system user that matches the specified\
        \ search criteria. \r\n\nThe \"name\" of the system user is returned in the\
        \ _links.self.title property. \r\n\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes that are returned in the \"_attributes\" property of each system\
        \ user. \r\n\nA requested attribute is not returned if the client does not\
        \ have permission to retrieve the attribute or if the value of the attribute\
        \ is null. \r\n\nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return each system\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. If the excludeAttributeFromResponse property in the rest.properties\
          \ is set to some attribute value, that attribute is excluded from the response\
          \ though it is specified in the attribute list. Specifying a value \"*\"\
          \ returns all of attributes except those that are specified in the excludeAttributeFromResponse\
          \ property. By default, all attributes other than those that are specified\
          \ in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search operation
          returns. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order for sorting the returned system\
          \ users. \"+\" represents ascending order while \"-\" represents descending\
          \ order. Note: The client is responsible to perform URL encoding if necessary.\
          \ Example - ?sort=%2Beruid (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: ITIM Manager
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                _attributes:
                  eruid: ITIM Manager
              - _links:
                  expiredPassword:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/password
                    title: Expired Password
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: chuck
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/constraints
                    title: Constraints
                _attributes:
                  eruid: chuck
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/{serviceId}:
    get:
      tags:
      - Service Management
      summary: Lookup Service
      description: Returns information about the specified service.
      parameters:
      - name: serviceId
        in: path
        description: Unique Identifier for a service.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the service.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" will return all of the attributes.\
          \ By default all the attributes are returned. Example - ?attributes=erservicename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma separated attributes that should be returned
          for a reference attribute of service (eg. owner). The specified attributes
          are returned in the "_embedded" section of the response. Specifying a value
          of '*' after reference attribute returns all the properties of the reference
          attribute. Example - ?embedded=owner.cn
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG
                    title: GSA
                _embedded:
                  owner:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Judith Hill
                    _attributes:
                      cn: Judith Hill
                _attributes:
                  erservicename: GSA
    put:
      tags:
      - Service Management
      summary: Service Modify
      description: "Modifies information for the specified service.\r\n\r\nBy using\
        \ this rest API you can perform following different operations along with\
        \ modification\r\nof the service information.\r\n1) Switch the connection\
        \ mode of the existing service from Automatic to Manual and vice versa.\r\n\
        2) Modify information for the manual work order details.\r\n3) If you trying\
        \ to switch the existing service from Automatic to Manual and do not provide\
        \ the\r\ndetails for the manualWorkOrderRequest then request adds the default\
        \ data for manual work order.\r\n"
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyServiceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful.
    delete:
      tags:
      - Service Management
      summary: Service Delete
      description: Deletes the specified service.
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles:
    get:
      tags:
      - Search
      summary: System Role (ITIM Group) Search
      description: "Returns information about any system roles that match the specified\
        \ search criteria. \r\nThe \"name\" of the system role is returned in the\
        \ _links.self.title property. \r\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes to return in the \"_attributes\" property of each system role.\
        \ \r\nA requested attribute is not returned if the client does not have permission\
        \ to retrieve the attribute or if the value of the attribute is null. \r\n\
        If an attribute has multiple values, the value of the corresponding property\
        \ is an array of the attribute's values.\r\n"
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for each system
          role. The specified attributes are returned in the "_attributes" property
          of each system role. Specifying a value of "*" returns all attributes. Example
          - ?attributes=errolename
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that should be returned
          by the search. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned system roles. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Berrolename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Help Desk Assistant
                _attributes:
                  errolename: Help Desk Assistant
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA0OCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Manager
                _attributes:
                  errolename: Manager
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMyxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                _attributes:
                  errolename: System Administrator
    post:
      tags:
      - ITIM Group Management
      summary: System Role Creation
      description: Creates a new system role with the specified attributes
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSystemRoleRequestBeanSwagger'
      responses:
        "201":
          description: OK. The request was successful
          content:
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/systemroles/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: AdminRole1111
                  ersystemrolecategory:
                    href: /itim/rest/v1.2/views/1
                    title: "1"
                  erparent:
                    href: /itim/rest/v1.2/organizationcontainers/organizations/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: isvgim
                _attributes:
                  errolename: AdminRole1111
                  description: new updated description for the systemrole
                  ersystemrolecategory: "1"
                  uuid: cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                  parentUUID: cc7ec53b-3305-41bb-9c6f-ce7b67115d9b
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/retrieve:
    put:
      tags:
      - Password Management
      summary: Retrieve Password
      description: "Retrieves the password of an account if the enrole.workflow.notifypasswordproperty\
        \ is set to false. This API needs the transaction ID to retrieve password.To\
        \ return the account password to the user, the shared secret has been validated."
      parameters:
      - name: transactionid
        in: query
        description: Specifies the transaction ID that is required to retrieve the
          password retrieval info.
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrievePasswordSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  accounts:
                  - _embedded:
                      service:
                        _attributes:
                          description: ""
                          erservicename: ITIM Service
                    _links:
                      self:
                        href: /itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    _attributes:
                      erUid: person1
                _links:
                  self:
                    href: /itim/rest/password/retrieve?transactionid=7347766403446710787
                _attributes:
                  password: password
        "400":
          description: Bad request. Invalid Transaction ID
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - severity: E
                text: CTGIMZ058E The transaction identifier that is referred in the
                  URI is invalid or expired.
                id: CTGIMZ058
                key: com.ibm.isim.rest.server.INVALID_TRANSACTION_ID
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /views:
    get:
      tags:
      - View Management
      summary: Search View
      description: "Returns information about Views that match the specified search\
        \ pattern in filter if any.\r\nAll Views are returned in response in case\
        \ no filter provided.\r\n\r\n By default, all attributes are returned. Use\
        \ attributes query string paramter to return specific attributes for View.\r\
        \n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each view. The specified attributes are returned in the \"_attributes\"\
          \ section. Example: attributes=id,name"
        schema:
          type: string
      - name: filter
        in: query
        description: "Specifies the search pattern for searching specific views. Example:\
          \ filter=Manager"
        schema:
          type: string
      responses:
        "200":
          description: OK.
          content:
            application/json:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/1
                    title: End User View
                _attributes:
                  name: End User View
                  id: "1"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/2
                    title: Manager View
                _attributes:
                  name: Manager View
                  id: "2"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/4
                    title: Help Desk View
                _attributes:
                  name: Help Desk View
                  id: "4"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/5
                    title: Service Owner View
                _attributes:
                  name: Service Owner View
                  id: "5"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/6
                    title: Auditor View
                _attributes:
                  name: Auditor View
                  id: "6"
    post:
      tags:
      - View Management
      summary: Create View
      description: "This API is used to create View. Required attributes: name, Optional\
        \ attributes: description, tasks"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRequestBean'
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResponseBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/quicksearches:
    get:
      tags:
      - Search
      summary: Request Quick Searches
      description: "Quick search categories help you to narrow the scope of your search\
        \ so that you can locate the request that you want to view.\r\nReturns limited\
        \ results based on search query."
      parameters:
      - name: limit
        in: query
        description: "Specifies the maximum number of items per category to return.\
          \ If unspecified, the limit is system defined. A value of 0 means unlimited,\
          \ which is constrained by a system limit. Example - ?limit=5"
        schema:
          type: string
      responses:
        "200":
          description: "OK. The request was successful \r\n\r\n[Please click here\
            \ to view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/requests/quicksearches?limit=5
                _attributes:
                  requestees:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: Chuck Riegle
                  statuses:
                  - text: Pending
                    value: PENDING
                    key: RequestAuditData.Status.PENDING
                  accesses:
                  - _links:
                      self:
                        href: /itim/rest/access/376511317273827596
                        title: Business Partner Connect
                  - _links:
                      self:
                        href: /itim/rest/access/376511866909527916
                        title: North Region File Share
                  actions:
                  - text: Manage Access
                    value: ACCESS_BATCH_REQUEST
                    key: RequestAuditData.Action.ACCESS_BATCH_REQUEST
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /itim/cm/v1.0/system/tenant/{id}:
    delete:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Remove all campaign metadata of a specific tenant.
      description: "The api to remove all campaign metadata of a specific tenant v1.0\
        \ (v1.0/system/tenant/{id}) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: DELETE /v2.0/system/tenant/{id}<br/>Internal\
        \ usage."
      operationId: deleteTenant
      parameters:
      - name: id
        in: path
        description: Tenant ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant where request for deletion of all campaign metadata
          is submitted.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "204":
          description: Tenant Cleaned Up
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific campaign instance.
      description: "The api to get a specific campaign instance v1.0 (v1.0/admin/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}<br/>Get a specific campaign instance.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminGetCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Modify specific campaign instance.
      description: "The api to modify a specific campaign instance v1.0 (v1.0/admin/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/instances/{id}<br/>Modify a specific campaign instance. If\
        \ called by application owner, the API can modify only instances that the\
        \ owner created or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: replacev1
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign instance payload details:<br><br>- <strong>id</strong>:\
          \ Campaign instance ID.<br>- <strong>event</strong>: The action to apply\
          \ to the campaign instance.<br><br><br>Allowable values for <strong>event</strong>\
          \ are: delete, pause, restart, runnow.<br><strong>delete</strong>: Transitions\
          \ the campaign instance to a cancelled state, indicating it is no longer\
          \ active.<br><strong>pause</strong>: Temporarily halts a running campaign\
          \ instance, putting it in a paused state.<br><strong>restart</strong>: Resumes\
          \ a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignInstanceInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific assignment.
      description: "The api to get a specific assignment v1.0 (v1.0/self/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/{id}<br/>Get a specific assignment for a campaign\
        \ reviewer OR supervisor.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: selfGetAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given assignment.
      description: "The api to modify a specific assignment v1.0 (v1.0/self/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/assignments/{id}<br/>API for a reviewer to modify a specific\
        \ assignment.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: selfReplace
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>reviewer</strong>: Details about\
          \ the campaign reviewer. Required when redirecting an assignment to another\
          \ user.<br>- <strong>operation</strong>: The operation to be executed.<br><br><br>Allowable\
          \ values for <strong>operation</strong> are: approved, rejected, redirected,\
          \ escalated.<br><strong>approved</strong>: Approve an assignment.<br><strong>rejected</strong>:\
          \ Reject an assignment.<br><strong>redirected</strong>: Redirect an assignment.<br><strong>escalated</strong>:\
          \ Escalate an assignment.<br><br>- <strong>justification</strong>: A justification\
          \ for the action taken on the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{id}/preview:
    post:
      tags:
      - Certification Campaign instances v2.0
      summary: Creates a preview campaign configuration for the specified tenant.
      description: "The API is used to create a preview campaign configuration for\
        \ the specific tenant.<br/>The administrator managing a specific tenant can\
        \ create a preview campaign configurations for that tenant.<br/>The owners\
        \ of the application can only create a preview campaign configuration for\
        \ their owned applications.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: generatePreviewCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve instances corresponding to a specific campaign
        configuration.
      description: "The api to get instances to a specific campaign configuration\
        \ v1.0 (v1.0/admin/campaigns/{id}/instances) is deprecated. The end of life\
        \ is 31-Dec-2025. Use the following alternative API: GET /v2.0/campaigns/{id}/instances<br/>Get\
        \ campaign instances corresponding to a given campaign configuration. If called\
        \ by application owner, the API can only get instances that the owner created\
        \ or which contain at least one Application owned by the owner.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves statistics of specific assignments within a given instance
        from the specific tenant.
      description: "The API is used to retrieve aggregated statistics of assignments\
        \ in a given campaign instance for a reviewer or supervisor. Filters can be\
        \ applied against the assignments.</br>The owners of the application can retrieve\
        \ aggregated statistics of the campaign instance that is created by them or\
        \ includes at least one application owned by them.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: assignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseAssignmentStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v1.0/self/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve instances corresponding to a specific campaign
        configuration.
      description: "The api to get instances of a specific campaign v1.0 (v1.0/self/campaigns/{id}/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/{id}/instances<br/>Get campaign instances corresponding\
        \ to a given campaign configuration for a reviewer or supervisor. At least\
        \ one record must be associated with the reviewer or supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve specific campaign instance.
      description: "The api to get specific campaign instance v1.0 (v1.0/self/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}<br/>Get a specific campaign instance with\
        \ at least one record associated with a reviewer or supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfGetCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/self/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments.
      description: "The api to get statistics of specific assignments v1.0 (v1.0/self/assignments/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/stats<br/>Get aggregated statistics about assignments\
        \ in a specific instance for a reviewer OR supervisor. Filters could be applied\
        \ to refine the entities, to use, for generating statistics.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfAssignmentsStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/swagger.{type}:
    get:
      parameters:
      - name: type
        in: path
        required: true
        schema:
          pattern: json|yaml
          type: string
      responses:
        "200":
          description: OK
  /itim/cm/v1.0/admin/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific campaign instances.
      description: "The api to get statistics of specific campaign instances v1.0\
        \ (v1.0/admin/instances/stats) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: GET /v2.0/instances/stats<br/>Get aggregated\
        \ statistics about campaign instances depending on the specified filter. If\
        \ called by an application owner, the API returns statistics of the instances\
        \ that the owner created or that contain at least one application that the\
        \ owner owns.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: adminInstancesStats
      parameters:
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/clean/staleinstances:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        clean the stale instances in certification manager schema.
      operationId: rundeckJobtoCleanStaleInstances
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/campaigns/{id}:
    get:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific campaign configuration.
      description: "The api to get a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/{id}<br/>Get a specific campaign configuration\
        \ and manage it. If called by an application owner, the API can retrieve only\
        \ configurations that the owner created or that contain at least one  application\
        \ that the owner owns.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminGetCampaignById
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfigurationOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Edit specific campaign configuration.
      description: "The api to modify a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/campaigns/{id}<br/>Modify a specific campaign configuration.\
        \ If called by an application owner, the API can modify only campaigns that\
        \ the owner created or that the associated applications are all owned by the\
        \ owner.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: replace
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration payload details:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low ).<br>- <strong>name</strong>: Name of the campaign.<br>-\
          \ <strong>description</strong>: Description of the campaign.<br>- <strong>reviewer</strong>:\
          \ Information about the campaign reviewer.<br>- <strong>applications</strong>:\
          \ List of applications the campaign certifies.<br>Note: This is a required\
          \ field, however, in case of User entitlement campaigns, either the 'Applications'\
          \ or 'Entitlement' or both must be specified. <br>- <strong>allowlist</strong>:\
          \ List of users or groups allowed for the certification. You cannot specify\
          \ the block list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts.<br>- <strong>creationDate</strong>: Creation date of the campaign\
          \ configuration.<br>- <strong>duration</strong>: The duration (in milliseconds)\
          \ for which each campaign instance remains open.<br>- <strong>frequency</strong>:\
          \ Frequency of campaign instance.<br>- <strong>runEvery</strong>: Frequency\
          \ unit for campaign instance (days or months).<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br>- <strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br>- <strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br>- <strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>:A flag indicating that the\
          \ campaign is continuous.<br>- <strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>id</strong>: Campaign configuration\
          \ ID.<br>- <strong>rev</strong>: Campaign configuration revision.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfigurationInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfigurationOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
    delete:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Delete specific campaign configuration.
      description: "The api to delete a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: DELETE /v2.0/campaigns/{id}<br/>Delete a specific campaign configuration.\
        \ If called by an application owner, the API can delete only  campaigns that\
        \ the owner created or that the associated applications are all owned by the\
        \ owner.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: deletev1
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "204":
          description: Campaign Configuration is deleted
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific assignment.
      description: "The api to get a specific assignment v1.0 (v1.0/admin/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/{id}<br/>Get a specific assignment. If called\
        \ by application owner, the API can retrieve assignments only for the campaigns\
        \ he created or that contain at least one Application he owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminGetAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given assignment.
      description: "The api to modify a specific assignment v1.0 (v1.0/admin/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/assignments/{id}<br/>Modify a specific assignment. If called\
        \ by an application owner, the API can modify assignments only for campaigns\
        \ that the owner created or that contain at least one application that the\
        \ owner owns.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: adminReplace
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>reviewer</strong>: Details about\
          \ the campaign reviewer. Required when redirecting an assignment to another\
          \ user.<br>- <strong>operation</strong>: The operation to be executed.<br><br><br>Allowable\
          \ values for <strong>operation</strong> are: approved, rejected, redirected,\
          \ escalated.<br><strong>approved</strong>: Approve an assignment.<br><strong>rejected</strong>:\
          \ Reject an assignment.<br><strong>redirected</strong>: Redirect an assignment.<br><strong>escalated</strong>:\
          \ Escalate an assignment.<br><br>- <strong>justification</strong>: A justification\
          \ for the action taken on the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the assignment statistics of the campaign instance from the
        specific tenant.
      description: "The API is used to retrieve aggregated statistics of assignments\
        \ in a given campaign instance. Filters could be applied to refine the entities\
        \ to use for generating statistics.</br>The owners of the application can\
        \ retrieve aggregated statistics of the campaign instance that is created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: assignmentsStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseAssignmentStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves a list of campaign configurations from the specific tenant.
      description: "The API is used to retrieve list of campaign configurations from\
        \ the specific tenant.<br/> The administrator managing a specific tenant can\
        \ see the list of all campaign configurations created for that tenant.<br/>\
        \ The owners of the application can access the list of campaign configurations\
        \ that are created by them or includes at least one application owned by them.<br/>Unspecified\
        \ filter parameters are treated as having the default values.<br/>Every provided\
        \ parameter value is considered as an extra filter for the search criteria.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: campaignConfigurationFind
      parameters:
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign configuration: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: draft
        in: query
        description: "The filter for getting campaign configuration in draft mode:\
          \ yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "A generic filter which filters response containing the passed\
          \ string in any of the following attribute: name (Campaign configuration\
          \ name)."
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign configuration: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign configuration priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign configuration that is used to\
          \ sort results. The possible values are: owner, launchdate, name, type,\
          \ priority, createdOn.<br><br><br>When you provide,<br><strong>owner</strong>:The\
          \ owner's fullName is used for sorting.<br><strong>launchdate</strong>:The\
          \ campaign configuration launchDate timestamp is used for sorting.<br><strong>name</strong>:\
          \ The campaign configuration name is used for sorting.<br><strong>type</strong>:The\
          \ campaign configuration type is used for sorting.<br><strong>priority</strong>:The\
          \ campaign configuration priority is used for sorting.<br><strong>createdOn</strong>:\
          \ The campaign configuration creationDate timestamp is used for sorting."
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: type
        in: query
        description: "This is a deprecated campaign configuration type filter. Use\
          \ 'types' query parameter instead. If both the 'type' and 'types' query\
          \ parameter are used, then the 'types' selected value is considered."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
        deprecated: true
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignConfig'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign configurations v2.0
      summary: Creates a campaign configuration for the specific tenant.
      description: "The API is used to create a campaign configuration for the specific\
        \ tenant.<br/>The administrator managing a specific tenant can create campaign\
        \ configurations for that tenant.<br/>The application owners can create a\
        \ campaign configuration only for their owned applications.<br/>The optional\
        \ reviewer, if specified, can be any existing userId present for that tenant.<br/>\
        \ Allowlist or blocklist must specify only groups in case of groupassignment\
        \ campaign.<br/>Entitlements required: manageAccessCertification [Manage Access\
        \ Certification]."
      operationId: createCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          $ref: '#/components/schemas/CampaignConfiguration'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant for which campaign configuration creation request
          is submitted.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration create request payload details:<br><br>-\
          \ <strong>owner</strong>: Information about the campaign owner. <br>This\
          \ is a required field.<br>- <strong>type</strong>: Type of campaign (For\
          \ example, userassignment, groupassignment, account, groupmembership). Default\
          \ type is userassignment.<br>- <strong>priority</strong>: Priority of the\
          \ campaign (For example, high, medium, low ). Default priority is medium.<br>-\
          \ <strong>name</strong>: Name of the campaign. <br>This is a required field\
          \ with maximum length of 256 characters.<br>- <strong>description</strong>:\
          \ Description of the campaign.<br>- <strong>reviewer</strong>: Information\
          \ about the campaign reviewer.<br>- <strong>applications</strong>: List\
          \ of applications that the campaign certifies.<br>Note: This is a required\
          \ field for Group entitlement and Account campaign, however, in case of\
          \ User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. This is not required for Group Membership.<br>-\
          \ <strong>userFilter</strong>: It is set to filter the list of included\
          \ or excluded users or groups for certification. <br><br><br>In case of\
          \ user entitlement campaign, you can either specify userConditionSet or\
          \ userInclusionList or userExclusionList in userFilter.<br><br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts. <br>The launchDate must be in the future, including the time,\
          \ relative to the current date and time. <br>This field is required when\
          \ runNow is false.<br>- <strong>creationDate</strong>: Creation date of\
          \ the campaign configuration. Default value is the current Date.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open. <br>Duration should not be added when \"continuous\" is true. <br>Duration\
          \ should be greater than 30 seconds if \"continuous\" is false. <br>Duration\
          \ must be less than the frequency if campaign scheduled (\"runNow\" is false).<br>-\
          \ <strong>frequency</strong>: Frequency of campaign instance. <br>Frequency\
          \ should not be added when the \"runNow\" flag is set to true. <br>This\
          \ field is required when \"runNow\" flag is set to false.<br>It should contain\
          \ a valid cron expression<br>Valid cron expression: must follow cron syntax\
          \ (e.g., \"*/5\", \"0 0 * * *\"). The valid range for each field within\
          \ the frequency pattern is as follows:<br>&emsp; - Minute: 0-59<br>&emsp;\
          \ - Hour: 0-23<br>&emsp; - Day of Month: 1-31<br>&emsp; - Month: 1-12 (or\
          \ JAN-DEC)<br>&emsp; - Day of Week: 0-6 (or SUN-SAT)<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately. Default value for runNow is true.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes. <br>Allowable values for <strong>overdueAction</strong>\
          \ are: rejectAll, approveAll, doNothing. <br>Default overdueAction is doNothing.<br>-\
          \ <strong>mitigationAction</strong>: Action after a campaign closes to avoid\
          \ open records. <br>Allowable value for <strong>type</strong> in <strong>mitigationAction</strong>\
          \ are: none, reminder. <br>reminderInterval should be shorter than durantion.<br>Default\
          \ value is { type = none, reminderInterval=0 }.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments in the absence of a suitable reviewer.<br>-\
          \ <string>preview</strong>: A flag indicating that the campaign is in preview\
          \ mode and not open to reviewers. Default value for preview is false.<br>-\
          \ <strong>continuous</strong>: A flag indicating that the campaign is continuous.\
          \ Default value for continuous is 'false'.<br>- <strong>continuousCampaignMetaData</strong>:\
          \ Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;Default\
          \ overdueAction is 'doNothing'<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff). <br>signOff should be auto when \"continuous\"\
          \ is true.<br>Default signOff policy is eoc.<br><br><br>Allowable values\
          \ for <strong>signOff</strong> are: auto, manual, eoc or no_signoff.<br><strong>auto</strong>:\
          \ This setting would mean immediate sign-off. Actions taken by the approver\
          \ in terms of approval or rejection are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ This setting would mean a manual sign-off. The certifier can decide whether\
          \ to enforce the action immediately OR at the end of the campaign).<br><strong>eoc</strong>:\
          \ The setting would mean sign-off towards the end of the campaign. Actions\
          \ taken by the approver in terms of approval or rejection are persisted\
          \ till the Due date of the campaign and then rolled out together).<br><strong>no_signoff</strong>:\
          \ Actions are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign. <br>The field is required\
          \ when allowSupervisorEscalation is true.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>- <strong>reviewerType</strong>:\
          \ The Reviewer identifer for the campaign.<br>Following are the values corresponding\
          \ to the campaign types:<br>1.userassignment - usermanager, specific, self,\
          \ applicationowner<br>2.groupassignment - applicationowner, specific<br>3.account\
          \ - usermanager, specific, self, applicationowner<br>4.groupmembership -\
          \ usermanager, specific<br>In case you are specifying the reviewer explicitly,\
          \ then provide the value as <strong>specific</strong> in the reviewerType\
          \ field.<br>In case you are creating a self certification campaign, then\
          \ provide the value as <strong>self</strong> in the reviewerType field.\
          \ reviewerType value as self is applicable only for userassignment and account\
          \ type of campaigns.<br><br>Allowable values for <strong>reviewerType</strong>\
          \ are: usermanager, applicationowner, specific, self.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: true
      responses:
        "201":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign configurations v2.0
      summary: Perform operations on a list of campaign configurations that belong
        to a specified tenant.
      description: "The API is used to perform operations on a list of campaign configurations\
        \ that belong to a specific tenant.<br/>The administrator managing a specified\
        \ tenant can perform operations on a list of all campaign configurations created\
        \ for that tenant.<br/>The owners of the application can update a list of\
        \ campaign configurations that are created by them or includes at least one\
        \ application owned by them.<br/>Entitlements required: tenantadmin [Tenant\
        \ Administrator]."
      operationId: bulkReplacev2
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            description: Representation of a generic payload of a Bulk REST API.
            required:
            - op
            - path
            type: object
            properties:
              op:
                enum:
                - replace
                - remove
                - delete
                type: string
              path:
                type: string
              value:
                $ref: '#/components/schemas/JsonNode'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign configurations on which to execute specified\
          \ operations:<br>Request payload details:<br><br><strong>op</strong>: Operation\
          \ to be performed on the given campaign configuration.<br>Allowable values\
          \ for <strong>op</strong> are: replace, remove, delete, cancel.<br><strong>replace</strong>:\
          \ Update the campaign configuration.<br><strong>remove</strong>: Mark the\
          \ campaign configuration to removal from the database.<br><strong>delete</strong>:\
          \ Delete the campaign configuration immediately from the database.<br><strong>cancel</strong>:\
          \ Cancel running and all future instances of this campaign.<br><br><strong>path</strong>:\
          \ Campaign configuration ID.<br><br><strong>value</strong>: Campaign configuration\
          \ details. The field is required when executing the 'replace' operation.<br><strong>owner</strong>:\
          \ Information about the campaign owner.<br><strong>type</strong>: Type of\
          \ campaign (For example, userassignment, groupassignment, account, groupmembership).<br><strong>priority</strong>:\
          \ Priority of the campaign (For example, high, medium, low ).<br><strong>name</strong>:\
          \ Name of the campaign.<br><strong>description</strong>: Description of\
          \ the campaign.<br><strong>reviewer</strong>: Information about the campaign\
          \ reviewer.<br>- <strong>applications</strong>: List of applications that\
          \ the campaign certifies.<br>Note: This is a required field for Group entitlement\
          \ and Account campaign, however, in case of User entitlement campaigns,\
          \ either the 'Applications' or 'Entitlement' or both must be specified.\
          \ This is not required for Group Membership. <br>- <strong>userFilter</strong>:\
          \ It is set to filter the list of included or excluded users or groups for\
          \ certification. <br><br><br>In case of user entitlement campaign, you can\
          \ either specify userConditionSet or userInclusionList or userExclusionList\
          \ in userFilter.<br><br>- <strong>entitlementFilter</strong>: It is set\
          \ to filter the list of included or excluded entitlements for certification.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br><strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br><strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br><strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br><strong>frequency</strong>: Frequency of campaign instance.<br><strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br><strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br><strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br><strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br><strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br><strong>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br><strong>continuous</strong>:A flag indicating that the campaign\
          \ is continuous. Default value for continuous is 'false'.<br><strong>continuousCampaignMetaData</strong>:\
          \ Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br><strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br><strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br><strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkOperationCampaign'
        required: true
      responses:
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestResponse'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the list of all assignments associated with the specified
        campaign instance from the specific tenant.
      description: "The API is used to retrieve the list of all assignments associated\
        \ with the specified campaign instance from the specific tenant.</br>The owners\
        \ of the application can retrieve the list of all assignments associated with\
        \ the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: campaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name .<br> groupmembership: provide group name. <br> account: Provide\
          \ account userName.<br><br>Provide multiple values in new lines or separated\
          \ by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName, entitlement.name"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the group Ids.<br>For following campaign types:\
          \ <br>userassignment: The results are filtered based on the discretionary\
          \ groups .<br> groupassignment/groupmembership: The results are filtered\
          \ based on the groups that are attached to the campaign. <br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ entitlementname, accountstatus, reviewer, lastaction, type, creationdate,\
          \ groupsid.<br><br><br>When you provide,<br><strong>application</strong>:\
          \ The application name is used for sorting.<br><strong>assignee</strong>:\
          \ The assignee fullName is used for sorting.<br><strong>accountname</strong>:\
          \ The account userName is used for sorting.<br><strong>entitlementname</strong>:\
          \ The entitlement name is used for sorting.<br><strong>accountstatus</strong>:\
          \ The account finerStatus is used for sorting.<br><strong>reviewer</strong>:\
          \ The reviewer name is used for sorting.<br><strong>lastaction</strong>:\
          \ The last_action is used for sorting.<br><strong>type</strong>: The entitlement\
          \ type is used for sorting.<br><strong>creationdate</strong>: The campaign\
          \ assignment creationDate timestamp is used for sorting.<br><strong>groupsid</strong>:\
          \ The campaign assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the list of a assignments associated with the specified campaign
        instance from the specific tenant.
      description: "The API is used to retrieve the list of a assignments associated\
        \ with the specified campaign instance from the specific tenant.</br>The owners\
        \ of the application can retrieve the list of a assignments associated with\
        \ the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: campaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter'
        required: false
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v2.0/reviewer/types/{campaigntype}:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves the details of the Reviewer Types available for the specific
        Campaign Type.
      description: "The API is used to retrieve the campaign Reviewer Types based\
        \ on the Campaign Type.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getReviewerTypesByCampaignType
      parameters:
      - name: campaigntype
        in: path
        description: "The valid unique identifier of type campaign. Allowed values\
          \ are 'userassignment', 'groupassignment', 'account' and 'groupmembership'."
        required: true
        schema:
          type: string
      - name: continuous
        in: query
        description: 'The filter for retrieving the details of the Reviewer Types
          available for the continuous campaign configuration:'
        schema:
          default: "no"
          enum:
          - "yes"
          - "no"
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign instances.
      description: "The api to get campaign instances v1.0 (v1.0/admin/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances<br/>Get a list of campaign instances. If called\
        \ by an application owner, the API can get only instances associated to configurations\
        \ he created or containing at least one Application he owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "To filter based on the overall state of the campaign instance.\
          \ This filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: supervisorsId
        in: query
        description: "The filter for the campaign supervisor.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Modify campaign instances.
      description: "The api to Modify campaign instances v1.0 (v1.0/admin/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instances<br/>Modify a set of campaign instances. If called\
        \ by application owner, the API can modify only instances that the owner created\
        \ or that the associated applications are all owned by the owner.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: bulkReplacev1
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceInput'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign instances to modify:<br>Campaign instance payload\
          \ details:<br><br>- <strong>id</strong>: Campaign instance ID.<br>- <strong>event</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>event</strong> are: delete, pause, restart, runnow, end, harddelete.<br><strong>delete</strong>:\
          \ Transitions the campaign instance to a cancelled state, indicating it\
          \ is no longer active.<br><strong>pause</strong>: Temporarily halts a running\
          \ campaign instance, putting it in a paused state.<br><strong>restart</strong>:\
          \ Resumes a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance.<br><strong>end</strong>:\
          \ Transitions a running campaign to a completion state, before the designated\
          \ completion date. This is mainly to enforce the campaign closure based\
          \ actions immediately.<br><strong>harddelete</strong>: Delete the campaign\
          \ instance immediately from the database.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignInstanceInput'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaign/{id}/assignments:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Add new assignments to a continuous campaign.
      description: "The api to add new assignments v1.0 (v1.0/admin/campaign/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>API for adding new assignments\
        \ in a continuous campaign. If called by application owner, API can add only\
        \ assignments for campaigns he created or pertaining to applications he owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access  Work Flows]."
      operationId: adminBulkAdditionByConfig
      parameters:
      - name: id
        in: path
        description: Campaign configuration Id.
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of new assignments to be added to a continuous campaign\
          \ instance:<br>Add campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>applicationId</strong>: Application\
          \ identifier<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAssignment'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: "Deprecated - Retrieve all assignments, in a given campaign instance."
      description: "The api to get a specific assignment v1.0 (v1.0/self/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance for a reviewer OR supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name.<br> account: Provide account userName.<br><br>Provide multiple values\
          \ in new lines or separated by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the discretionary groups.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting.<br><strong>groupsid</strong>: The campaign\
          \ assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance.
      description: "The api to get all assignments for a campaign instance v1.0 (v1.0/self/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance for a reviewer OR supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter1'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign statistics.
      description: "The api to get campaign statistics v1.0 (v1.0/admin/campaigns/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/stats<br/>Get campaign statistics. If called by\
        \ an application owner, the API returns the details for campaigns that the\
        \ owner created or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application."
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/update/campaignconfigschema:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        add reviewerType field and it's values in json for certification manager configuration
        schema.
      operationId: rundeckJobtoUpdateCampaignConfigSchema
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/campaign/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the statistics for the specified type of resource from the
        specific tenant.
      description: "The API is used to retrieve the statistics for the specific type\
        \ of resource from the specific tenant.</br>The owners of the application\
        \ can retrieve the statistics of the resource that is created by them or includes\
        \ at least one application owned by them.Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: campaignStatsv2
      parameters:
      - name: resourceType
        in: query
        description: Filter by the resource type.
        schema:
          default: all
          enum:
          - all
          - configuration
          - instance
          type: string
      - name: state
        in: query
        description: Filter for campaign state.
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - draft
          type: array
          items:
            type: string
      - name: types
        in: query
        description: "The filter for the campaign resource type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/instances/{id}/preview:
    post:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Create a preview campaign.
      description: "The api to create a preview campaign v1.0 (v1.0/admin/instances/{id}/preview)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/preview<br/>Create a preview campaign from\
        \ the specified campaign instance.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminGeneratePreviewCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instance/{id}/assignments:
    patch:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates the list of assignments on a specified campaign instance that
        belong to a specified tenant.
      description: "The API is used to update the list of assignments on a specified\
        \ campaign instance that belong to a specified tenant.</br>The owners of the\
        \ application can update the list of assignments on a campaign that is created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Work Flows]."
      operationId: bulkReplacev2
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for <strong>operation</strong>\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentUpdateAction'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instance/{id}/assignments:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Add new assignments to a continuous campaign instance.
      description: "The api to add new assignments v1.0 (v1.0/admin/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>API for adding new assignments\
        \ in a specific instance of a continuous campaign. If called by an application\
        \ owner, the API can add assignments only for campaigns that the owner created\
        \ or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Work Flows]."
      operationId: adminBulkAddition
      parameters:
      - name: id
        in: path
        description: Campaign instance Id
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of new assignments to be added to a continuous campaign\
          \ instance:<br>Add campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>applicationId</strong>: Application\
          \ identifier<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAssignment'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given set of assignments.
      description: "The api to modify a given set of assignments v1.0 (v1.0/admin/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instance/{id}/assignments<br/>API to make bulk update of\
        \ the specified assignments. If called by an application owner, the API can\
        \ modify only assignments for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessWorkflow [Manage Access Work Flows]."
      operationId: adminBulkReplace
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for operation\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instance/{id}/assignments/refresh:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Refresh assignments in a continuous campaign.
      description: "The api to refresh assignments v1.0 (v1.0/admin/instance/{id}/assignments/refresh)\
        \ is deprecated. The end of life is 31-Dec-2025.<br/>API for refreshing assignments\
        \ in a continuous campaign.<br/>Entitlements required: manageAccessWorkflow\
        \ [Manage Access  Work Flows]."
      operationId: refreshAssignments
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/update/reactivateDeleted:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Reactivate deleted campaigns for which scheduled or running instances
        are present.
      description: This API will be invoked through rundeck environment.This API will
        add reviewerType field and it's values in json for certification manager configuration
        schema.
      operationId: rundeckJobtoEnableDeletedBadCampaign
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RundeckOperationResponse'
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the details of the assignment from the specific tenant.
      description: "The API is used to retrieve the assignment details from the specific\
        \ tenant.<br/>The owners of the application can retrieve the details of the\
        \ assignment of the campaign that is created by them or includes at least\
        \ one application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates a specified assignment from the specific tenant.
      description: "The API is used to update a specific assignment from the specific\
        \ tenant.<br/>The owners of the application can update a specific assignment\
        \ of the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: replacev2
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>reviewer</strong>:\
          \ Details about the campaign reviewer. Required when redirecting an assignment\
          \ to another user.<br>- <strong>operation</strong>: The operation to be\
          \ executed.<br><br><br>Allowable values for <strong>operation</strong> are:\
          \ approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentActionReplaceInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/clean/staleinstances:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Update the certification manager schema.
      description: "The api to clean stale instances in the certification manager\
        \ schema v1.0 (v1.0/clean/staleinstances) is deprecated. The end of life is\
        \ 31-Dec-2025. Use the following alternative API: PUT /v2.0/clean/staleinstances<br/>This\
        \ API will be invoked through rundeck environment.This API will clean the\
        \ stale instances in certification manager schema."
      operationId: rundeckJobtoCleanStaleInstancesv1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: Tenant
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will receive the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/self/instance/{id}/assignments:
    patch:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given set of assignments.
      description: "The api to modify a given set of assignments v1.0 (v1.0/self/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instance/{id}/assignments<br/>API for a reviewer to make\
        \ bulk update of the specified assignments.<br/>Entitlements required: manageAccessWorkflow\
        \ [Manage Access Work Flows]."
      operationId: selfBulkReplace
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for operation\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns:
    get:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Retrieve the campaign configurations.
      description: "The api to get a campaign configurations v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns<br/>Get campaign configurations and manage them.\
        \ The administrator can see all the campaign configurations for the specified\
        \ tenant. Application owner can see only the campaigns he created OR those\
        \ containing at least one Application he owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignConfigurationFind
      parameters:
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign configurations: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign configurations that\
          \ contain the passed string in one of the following attributes: name (Campaign\
          \ configuration name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign configurations: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign configuration priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign configuration that is used to\
          \ sort results. The possible values are: owner, launchdate, name, type,\
          \ priority.<br><br><br>When you provide,<br><strong>owner</strong>:The owner's\
          \ fullName is used for sorting.<br><strong>launchdate</strong>:The launchDate\
          \ timestamp is used for sorting.<br><strong>name</strong>: The campaign\
          \ configuration name is used for sorting.<br><strong>type</strong>:The campaign\
          \ configuration type is used for sorting.<br><strong>priority</strong>:The\
          \ campaign configuration priority is used for sorting.<br><strong>createdOn</strong>:\
          \ The campaign configuration creationDate timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: type
        in: query
        description: "The filter for the campaign configuration type: userassignment,\
          \ groupassignment, or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListResponseCampaignConfig'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Create a campaign configuration.
      description: "The api to create a campaign configuration v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/campaigns<br/>Create a campaign configuration. The optional\
        \ reviewer, if specified, can be any existing userId. For account campaign,\
        \ blocklist contains default \"unmatched\" account statuses. If you want to\
        \ retrieve unmatched accounts as well, you must explicitly add them into the\
        \ allowlist.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: adminCreateCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          $ref: '#/components/schemas/CampaignConfigurationInput'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant for which campaign configuration creation request
          is submitted.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration payload details:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low ).<br>- <strong>name</strong>: Name of the campaign.<br>-\
          \ <strong>description</strong>: Description of the campaign.<br>- <strong>reviewer</strong>:\
          \ Information about the campaign reviewer.<br>- <strong>applications</strong>:\
          \ List of applications the campaign certifies.<br>Note: This is a required\
          \ field, however, in case of User entitlement campaigns, either the 'Applications'\
          \ or 'Entitlement' or both must be specified. <br>- <strong>allowlist</strong>:\
          \ List of users or groups allowed for the certification. You cannot specify\
          \ the block list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts.<br>- <strong>creationDate</strong>: Creation date of the campaign\
          \ configuration.<br>- <strong>duration</strong>: The duration (in milliseconds)\
          \ for which each campaign instance remains open.<br>- <strong>frequency</strong>:\
          \ A UNIX or Linux Cron-compatible string that defines the start of subsequent\
          \ instances. It must be a valid cron expression.<br>Valid cron expression:\
          \ must follow cron syntax (e.g., \"*/5\", \"0 0 * * *\"). The valid range\
          \ for each field within the frequency pattern is as follows:<br>&emsp; -\
          \ Minute: 0-59<br>&emsp; - Hour: 0-23<br>&emsp; - Day of Month: 1-31<br>&emsp;\
          \ - Month: 1-12 (or JAN-DEC)<br>&emsp; - Day of Week: 0-6 (or SUN-SAT)<br>-\
          \ <strong>runEvery</strong>: Frequency unit for campaign instance (days\
          \ or months).<br>- <strong>runNow</strong>: Flag to start the campaign immediately.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes.<br>- <strong>mitigationAction</strong>: Action\
          \ after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>:A flag indicating that the\
          \ campaign is continuous.<br>- <strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are: auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfigurationInput'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Edit campaign configurations.
      description: "The api to modify a set of campaign configurations v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/campaigns<br/>Modify a set of campaign configurations.\
        \ If called by an application owner, the API can modify campaigns that the\
        \ owner created or whose associated applications are all owned by him.<br/>Entitlements\
        \ required: tenantadmin [Tenant Administrator]."
      operationId: bulkReplace
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            description: Representation of a generic payload of a Bulk REST API.
            required:
            - op
            - path
            type: object
            properties:
              op:
                enum:
                - replace
                - remove
                - delete
                type: string
              path:
                type: string
              value:
                $ref: '#/components/schemas/JsonNode'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign configurations to modify:<br>Campaign configuration\
          \ payload details:<br><br>- <strong>op</strong>: Operation to be performed\
          \ on the given campaign configuration.<br>Allowable values for <strong>op</strong>\
          \ are: replace, remove, harddelete, cancel.<br><br><br><strong>replace</strong>:\
          \ Modify the campaign configuration.<br><strong>remove</strong>: Mark the\
          \ campaign configuration for removal from the database.<br><strong>harddelete</strong>:\
          \ Delete the campaign configuration immediately from the database.<br><strong>cancel</strong>:\
          \ Cancel running and all future instances of this campaign.<br><br><br>-\
          \ <strong>path</strong>: Campaign configuration ID.<br>- <strong>value</strong>:\
          \ Campaign configuration details.<br><br><br><strong>owner</strong>: Information\
          \ about the campaign owner.<br><strong>type</strong>: Type of campaign (For\
          \ example, userassignment, groupassignment, account).<br><strong>priority</strong>:\
          \ Priority of the campaign (For example, high, medium, low ).<br><strong>name</strong>:\
          \ Name of the campaign.<br><strong>description</strong>: Description of\
          \ the campaign.<br><strong>reviewer</strong>: Information about the campaign\
          \ reviewer.<br>- <strong>applications</strong>: List of applications the\
          \ campaign certifies.<br>Note: This is a required field, however, in case\
          \ of User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. <br>- <strong>allowlist</strong>: List of users\
          \ or groups allowed for the certification. You cannot specify the block\
          \ list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br><strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br><strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br><strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br><strong>frequency</strong>: Frequency of campaign instance.<br><strong>runEvery</strong>:\
          \ Frequency unit for campaign instance (days or months).<br><strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br><strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br><strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br><strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br><strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br><string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br><strong>continuous</strong>:A flag indicating that the campaign\
          \ is continuous.<br><strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br><strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br><strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br><strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br><strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkOperationCampaign'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments within a given
        instance.
      description: "The api to get statistics of specific assignments within a given\
        \ instance v1.0 (v1.0/admin/instances/{instanceId}/assignments/resources)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{instanceId}/assignments/resources<br/>Get statistics\
        \ about assignment resources, for a specific campaign instance, depending\
        \ on the specified filter. If called by application owner, the API returns\
        \ statistics for the instance, he created or at least has one application\
        \ he owns.<br/>Entitlements required: manageAccessCertification [Manage Access\
        \ Certification]."
      operationId: adminAssignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instances:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the list of a campaign instances from the specific tenant.
      description: "The API is used to retrieve the list of a campaign instances from\
        \ the specific tenant.<br/>The owners of the application can access the list\
        \ of campaign instances that are created by them or includes at least one\
        \ application owned by them.<br/>Unspecified filter parameters are treated\
        \ as having the default values.<br/>Every provided parameter value is considered\
        \ as an extra filter for the search criteria.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: campaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance. This\
          \ filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: skipStatistics
        in: query
        description: "Filter for including aggregated data (that is, statistics, progress)\
          \ to the instance objects: dataonly, yes, or no."
        schema:
          default: "no"
          enum:
          - dataonly
          - "yes"
          - "no"
          type: string
      - name: sortDesc
        in: query
        schema:
          default: true
          type: boolean
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: supervisorsId
        in: query
        description: "The filter for the campaign supervisor.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "This is a deprecated campaign instance type filter. Use 'types'\
          \ query parameter instead. If both the 'type' and 'types' query parameter\
          \ are used, then the 'types' selected value is considered."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
        deprecated: true
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign instances v2.0
      summary: Perform operations on a collection of campaign instances that belong
        to a specific tenant.
      description: "The API is used to perform operations on a collection of campaign\
        \ instances that belong to a specific tenant.<br/>The owners of the application\
        \ can perform operations on the list of campaign instances that are created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: patchbulkReplace
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceAction'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign instances to modify:<br>Campaign instance payload\
          \ details:<br><br>- <strong>id</strong>: Campaign instance ID.<br>- <strong>eventType</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>eventType</strong> are: cancel, pause, restart, runnow, end,\
          \ delete.<br><strong>cancel</strong>: Transitions the campaign instance\
          \ to a cancelled state, indicating it is no longer active.<br><strong>pause</strong>:\
          \ Temporarily halts a running campaign instance, putting it in a paused\
          \ state.<br><strong>restart</strong>: Resumes a paused campaign instance,\
          \ continuing its execution.<br><strong>runnow</strong>: Triggers immediate\
          \ execution of a scheduled campaign instance.<br><strong>end</strong>: Transitions\
          \ a running campaign to a completion state, before the designated completion\
          \ date. It is mainly to enforce the campaign closure based actions immediately.<br><strong>delete</strong>:\
          \ Delete the campaign instance immediately from the database.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignInstanceAction'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/{id}/launch:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Launch the campaign using the provided configuration for the specified
        campaign that belong to a specified tenant.
      description: "The API is used to launch the campaign using the provided configuration\
        \ for the specified campaign that belong to a specified tenant. <br/>The administrator\
        \ managing a specified tenant can launch a draft campaign configuration created\
        \ for that tenant.<br/> The owners of the application can launch a draft campaign\
        \ configuration that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: launchCampaign
      parameters:
      - name: id
        in: path
        description: "The valid unique identifier of the campaign in draft mode. For\
          \ example, 7743f25b-6818-457e-b8b8-9e543dc6d10d"
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "Payload details for the campaign launch:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account, groupmembership).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low).<br>- <strong>name</strong>: Name of the campaign.<br>- <strong>description</strong>:\
          \ Description of the campaign.<br>- <strong>reviewer</strong>: Information\
          \ about the campaign reviewer.<br>- <strong>applications</strong>: List\
          \ of applications that the campaign certifies.<br>Note: This is a required\
          \ field for Group entitlement and Account campaign, however, in case of\
          \ User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. This is not required for Group Membership.<br>-\
          \ <strong>userFilter</strong>: List of users or groups for inclusion/exclusion\
          \ or filter for users allowed for the certification.<br><br><br>In case\
          \ of user entitlement campaign, you can either specify userConditionSet\
          \ or userInclusionList or userExclusionList in userFilter.<br><br>- <strong>entitlementFilter</strong>:\
          \ List of entitlements for inclusion/exclusion or filter for entitlements\
          \ allowed for the certification.<br>Note: For user assignment campaigns,\
          \ either 'Applications' or 'Entitlement Filter' must be specified, or both.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br><br>- <strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br>- <strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br>- <strong>frequency</strong>: Frequency of campaign instances\
          \ (Let's give an example UNIX or Linux Cron-compatible string).<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br>- <strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br>- <strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br>- <strong>mitigationAction</strong>:\
          \ Action to be taken after a campaign closes to avoid open records.<br>-\
          \ <strong>defaultReviewer</strong>: Default reviewer for assignments in\
          \ absence of a suitable reviewer.<br>- <strong>continuous</strong>:A flag\
          \ indicating that the campaign is continuous. Default value for continuous\
          \ is 'false'.<br>- <strong>continuousCampaignMetaData</strong>: Details\
          \ of continuous campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;&nbsp;&nbsp;'reminderInterval' is the number\
          \ of days after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>overdueAction</strong>:\
          \ Default action on unreviewed entitlements after a specific period has\
          \ elapsed.<br>&nbsp;&nbsp;&nbsp;&nbsp;Allowable values are rejectAll, approveAll\
          \ or doNothing.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;&nbsp;&nbsp;This field is only applicable\
          \ for the <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is 'true'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>events</strong>: A\
          \ list of events thats needs to be monitored through the campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\"\
          : \"rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:Campaign\
          \ sign-off policy refers to the pre-determined approach  that governs when\
          \ and how campaign actions are officially approved or denied (auto, manual,\
          \ eoc, no_signoff).<br>Example: auto (The setting would mean immediate sign-off.\
          \ Actions taken by the approver in terms of approval or rejection are applied\
          \ on the assignment immediately).<br>Example: manual (The setting would\
          \ mean a manual sign-off. The certifier can decide whether to enforce the\
          \ action immediately OR at the end of the campaign).<br>Example: eoc (The\
          \ setting would mean sign-off towards the end of the campaign. Actions taken\
          \ by the approver in terms of approval or rejection are persisted till the\
          \ Due date of the campaign and then rolled out together)<br>Example: no_signoff\
          \ (Actions are not executed and only used for reporting)<br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>rev</strong>: Campaign revision.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: false
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: A conflict occurred during the launch operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorMessage'
      x-publicAPI: "false"
  /itim/cm/v2.0/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the details of the campaign instance from the specific tenant.
      description: "The API is used to retrieve the campaign instance details from\
        \ the specific tenant.<br/>The owners of the application can retrieve the\
        \ campaign instances details that are created by them or includes at least\
        \ one application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign instances v2.0
      summary: Perform an operation on a specified campaign instance that belong to
        a specified tenant.
      description: "This API is used to perform an operation on a specified campaign\
        \ instance that belongs to a specified tenant.<br/>The owners of the application\
        \ can perform operation on a specified campaign instance that is created by\
        \ them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: replaceput
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign instance payload details:<br><br>- <strong>eventType</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>eventType</strong> are: cancel, pause, restart, runnow.<br><strong>cancel</strong>:\
          \ Transitions the campaign instance to a cancelled state, indicating it\
          \ is no longer active.<br><strong>pause</strong>: Temporarily halts a running\
          \ campaign instance, putting it in a paused state.<br><strong>restart</strong>:\
          \ Resumes a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignInstanceReplaceInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/update/entitlementSchema:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        convert entitlementAllowlist/entitlementBlocklist fields values in json from
        null to empty array or create entry in json if fields are not found for entire
        certification manager schema.
      operationId: rundeckJobtoUpdateEntitlementSchema
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/utility/migratableTenants:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Check tenants which are migratable from this environment to other.
      description: This API is a utility API.This API will be used to check if a tenant
        or bunch of tenants are migratable or not.
      operationId: utilityForCheckingMigratableTenants
      parameters:
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
          Multiple tenants can be passed as comma-seperated list.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: Operation is successful. Will return the required data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RundeckOperationResponse'
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/{id}:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves the details of the campaign configuration from the specific
        tenant.
      description: "The API is used to retrieve the campaign configuration details\
        \ from the specific tenant.<br/>The owners of the application can retrieve\
        \ campaign configuration that is created by them or includes at least one\
        \ application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getCampaignById
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Updates the campaign configuration for a specified campaign configuration
        from the specific tenant.
      description: "The API is used to update the campaign configuration for a specified\
        \ campaign configuration from the specific tenant.<br/> The administrator\
        \ managing a specified tenant can update a campaign configuration created\
        \ for that tenant.<br/> The owners of the application can update a campaign\
        \ configuration that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: putreplace
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration update request payload details:<br><br>-\
          \ <strong>owner</strong>: Information about the campaign owner.<br>- <strong>type</strong>:\
          \ Type of campaign (For example, userassignment, groupassignment, account,\
          \ groupmembership).<br>- <strong>priority</strong>: Priority of the campaign\
          \ (For example, high, medium, low ).<br>- <strong>name</strong>: Name of\
          \ the campaign.<br>- <strong>description</strong>: Description of the campaign.<br>-\
          \ <strong>reviewer</strong>: Information about the campaign reviewer.<br>-\
          \ <strong>applications</strong>: List of applications that the campaign\
          \ certifies.<br>Note: This is a required field for Group entitlement and\
          \ Account campaign, however, in case of User entitlement campaigns, either\
          \ the 'Applications' or 'Entitlement' or both must be specified. This is\
          \ not required for Group Membership. <br>- <strong>userFilter</strong>:\
          \ It is set to filter the list of included or excluded users or groups for\
          \ certification. <br><br><br>In case of user entitlement campaign, you can\
          \ either specify userConditionSet or userInclusionList or userExclusionList\
          \ in userFilter.<br><br>- <strong>entitlementFilter</strong>: It is set\
          \ to filter the list of included or excluded entitlements for certification.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br>- <strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br>- <strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br>- <strong>frequency</strong>: Frequency of campaign instance.<br>-\
          \ <strong>runNow</strong>: Flag to start the campaign immediately.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes.<br>- <strong>mitigationAction</strong>: Action\
          \ after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>: A flag indicating that the\
          \ campaign is continuous. Default value for continuous is 'false'.<br>-\
          \ <strong>continuousCampaignMetaData</strong>: Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;Default\
          \ overdueAction is 'doNothing'<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    delete:
      tags:
      - Certification Campaign configurations v2.0
      summary: Deletes a campaign configuration from the specific tenant.
      description: "The API is used to delete a campaign configuration from the specific\
        \ tenant.<br/>The administrator managing a specified tenant can delete a campaign\
        \ configuration created for that tenant.<br/> The owners of the application\
        \ can delete a campaign configuration that is created by them or includes\
        \ at least one application owned by them.<br/>Entitlements required: tenantadmin\
        \ [Tenant Administrator]."
      operationId: delete
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "204":
          description: The request was successful.
      x-publicAPI: "false"
  /itim/cm/v2.0/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the campaign instance statistics from the specific tenant.
      description: "The API is used to retrieve the campaign instance statistics from\
        \ the specific tenant.</br>Unspecified filter parameters are treated as having\
        \ the default values.</br>Every provided parameter value is considered as\
        \ an extra filter for the search criteria.</br>If called by an application\
        \ owner, the API returns statistics of the instances that the owner created\
        \ or contains at least one application that the owner owns.<br/>If called\
        \ by user manager, the API returns statistics of instances, for which there\
        \ is at least one item to review.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: instancesStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns have been assigned to the calling\
          \ user: assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance
      description: "The api to get a specific assignment v1.0 (v1.0/admin/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance. If called by an application owner, the API\
        \ can get assignments only for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name.<br> account: Provide account userName.<br><br>Provide multiple values\
          \ in new lines or separated by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the discretionary groups.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting.<br><strong>groupsid</strong>: The campaign\
          \ assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance.
      description: "The api to get all assignments for a campaign instance v1.0 (v1.0/admin/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance. If called by an application owner, the API\
        \ can get assignments only for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignAssignmentFindByInstanceIDv1
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter1'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/tenant/limits:
    get:
      tags:
      - Serviceability v2.0
      summary: Retrieve the maximum limits set for the specific tenant.
      description: "The API is used to retrieve the maximum tenant limits set for\
        \ the specific tenant.</br>The administrator managing a specified tenant can\
        \ retrieve the limits set for the specific tenant.</br>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: tenantLimits
      parameters:
      - name: resourceType
        in: query
        description: "The resource type to filter tenant limits: all, monitoredUserAttributes."
        schema:
          default: all
          enum:
          - monitoredUserAttributes
          - all
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant for which the limits are retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Your request cannot be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request cannot be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/self/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific campaign instances.
      description: "The api to get statistics of specific campaign instances v1.0\
        \ (v1.0/self/instances/stats) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: GET /v2.0/instances/stats<br/>Get aggregated\
        \ statistics about campaign instances depending on the specified filter. If\
        \ called by a user manager, the API returns statistics of instances, for which\
        \ the manager has at least one item to review.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: selfInstancesStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns have been assigned to the calling\
          \ user: assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments within a given
        instance.
      description: "The api to get statistics of specific assignments within a given\
        \ instance v1.0 (v1.0/self/instances/{instanceId}/assignments/resources) is\
        \ deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{instanceId}/assignments/resources<br/>Get aggregated\
        \ statistics about assignments in a specific campaign instance for a reviewer\
        \ OR supervisor. Filters could be applied against the assignments. <br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfAssignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/update/entitlementSchema:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Update the certification manager schema.
      description: "The api to update the certification manager schema v1.0 (v1.0/update/schema)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/update/entitlementSchema<br/>This API will be invoked through\
        \ rundeck environment.This API will convert entitlementAllowlist/entitlementBlocklist\
        \ fields values in json from null to empty array or create entry in json if\
        \ fields are not found for entire certification manager schema."
      operationId: rundeckJobtoUpdateEntitlementSchemav1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: Operation is successful. Will receive the required data.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments.
      description: "The api to get statistics of specific assignments v1.0 (v1.0/admin/assignments/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/stats<br/>Get aggregated statistics about assignments\
        \ in a specific campaign instance. Filters could be applied to refine the\
        \ entities to use for generating statistics. If called by application owner,\
        \ the API returns statistics across all instances he created or containing\
        \ at least one application he owns.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminAssignmentsStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/launch:
    patch:
      tags:
      - Certification Campaign configurations v2.0
      summary: Launch the campaign configurations from the draft campaign configurations
        that belong to a specified tenant.
      description: "The API is used to launch the campaign configurations from the\
        \ draft campaign configurations that belong to a specified tenant. <br/>The\
        \ administrator managing a specific tenant can launch list of draft campaign\
        \ configurations created for that tenant.<br/> The owners of the application\
        \ can launch list of draft campaign configurations that are created by them\
        \ or includes at least one application owned by them.<br/>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: launchCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfigurationLaunchInput'
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "List of an existing draft campaign configurations to be launched:<br><br>-\
          \ <strong>campaignId</strong>: Campaign configuration ID.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignConfigurationLaunchInput'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The request was successful.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "409":
          description: A conflict occurred during the launch operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/clone:
    post:
      tags:
      - Certification Campaign configurations v2.0
      summary: Clone the campaign configurations from the source campaign configurations
        that belong to a specified tenant.
      description: "The API is used to clone the campaign configurations from the\
        \ source campaign configurations that belong to a specified tenant.<br/> The\
        \ administrator managing a specified tenant can clone a list of source campaign\
        \ configurations created for that tenant.<br/> The owners of the application\
        \ can clone a list of source campaign configurations that are created by them\
        \ or includes at least one application owned by them.<br/>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: cloneCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfigurationCloneInput'
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "List of an existing campaign configurations to be cloned:<br><br>-\
          \ <strong>sourceCampaignId</strong>: Campaign configuration ID.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignConfigurationCloneInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Server error
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
      x-publicAPI: "false"
  /itim/cm/v2.0/application/{id}/assignments:
    put:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates a list of assignment resources that belong to a specified tenant
        and match the application filter criteria.
      description: "Entitlements required: internalManageCerts [Internal Manage Certification]<br>The\
        \ REST API can be called only from internal microservices.<br>Creates an asynchronous\
        \ job in the job table to process the request from the other microcervice\
        \ for updating the application metadata."
      operationId: updateAssignmentsByApplication
      parameters:
      - name: id
        in: path
        description: The valid unique identifier of the application.
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "Request payload details:<br><br>Allowable op values : remove,\
          \ or replace<br><br>Allowable path values : application.owner.<br><br>The\
          \ \"value\" attribute is required for the \"replace\" operation.<br><br>\"\
          remove\" operation supported only for the application owner delete event.\
          \ { \"Operations\": [ { \"op\": \"remove\", \"path\": \"application.owner\"\
          \ } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateByApplication'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: The REST API can be called only from internal microservices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "false"
  /itim/cm/swagger:
    get:
      responses:
        "200":
          description: OK
  /itim/cm/v1.0/self/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign instances.
      description: "The api to get campaign instances v1.0 (v1.0/self/instances) is\
        \ deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances<br/>Get campaign instances with at least one record\
        \ associated with a reviewer or supervisor.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: selfCampaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "To filter based on the overall state of the campaign instance.\
          \ This filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: skipStatistics
        in: query
        description: "Filter for including aggregated data (that is, statistics, progress)\
          \ to the instance objects: dataonly, yes, or no."
        schema:
          default: "no"
          enum:
          - dataonly
          - "yes"
          - "no"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/update/schema:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Update the certification manager schema.
      description: "The api to update the certification manager schema v1.0 (v1.0/update/schema)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/update/entitlementSchema<br/>This API will be invoked through\
        \ rundeck environment.This API will convert tenant hostnames to tenant UUID\
        \ for entire certification manager schema."
      operationId: rundeckJobtoUpdateSchemav1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: Operation is successful.
      x-publicAPI: "false"
  /itim/cm/v2.0/system/tenant/{id}:
    delete:
      tags:
      - Certification Campaign configurations v2.0
      summary: Remove all campaign metadata of a specific tenant.
      description: Internal usage.
      operationId: deleteTenant
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant where request for deletion of all campaign metadata
          is submitted.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Server error
        "204":
          description: Tenant Cleaned Up
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the list of a campaign instances associated with the specified
        campaign configuration from the specific tenant.
      description: "The API is used to retrieves the list of a campaign instances\
        \ associated with the specified campaign configuration from the specific tenant.<br/>The\
        \ owners of the application can access the list of campaign instances that\
        \ are created by them or includes at least one application owned by them.<br/>Unspecified\
        \ filter parameters are treated as having the default values.<br/>Every provided\
        \ parameter value is considered as an extra filter for the search criteria.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: campaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the campaign configuration statistics from the specific tenant.
      description: "The API is used to retrieve the campaign configuration statistics\
        \ from the specific tenant.</br>The owners of the application can retrieve\
        \ the statistics of the campaign configurations that are created by them or\
        \ includes at least one application owned by them.</br>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: campaignStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application."
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: types
        in: query
        description: "The filter for the campaign configuration type: userassignment,\
          \ groupassignment, account, groupmembership.<br><br>Multiple values can\
          \ be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/arc/swagger:
    get:
      responses:
        "200":
          description: OK
  /itim/arc/v1.0/activities:
    post:
      tags:
      - Business Activity APIs
      summary: Create a Business Activity or Bulk Delete Business Activities
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity4'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users:
    get:
      tags:
      - ARC User APIs
      summary: Get Users for a provided entity
      parameters:
      - name: entityId
        in: query
        schema:
          type: string
      - name: entityType
        in: query
        description: Define the entity Type for which you want to get Users
        required: true
        schema:
          enum:
          - Business Activity
          - Mitigation
          - Risk
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/swagger.{type}:
    get:
      parameters:
      - name: type
        in: path
        required: true
        schema:
          pattern: json|yaml
          type: string
      responses:
        "200":
          description: OK
  /itim/arc/v1.0/users/{id}/risks/analysis:
    post:
      tags:
      - ARC User APIs
      summary: Executes the User Analysis for the provided User.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerUserRiskAnalysis'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/search:
    post:
      tags:
      - Risk APIs
      summary: Search for Risks based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: level
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Business Activity APIs
      summary: Delete the Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
    patch:
      tags:
      - Business Activity APIs
      summary: Update the Business Activity details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity5'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/entity/search:
    post:
      summary: Search for Entities based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: type
        in: query
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/search:
    post:
      tags:
      - Business Activity APIs
      summary: Search for Business Activities based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders:
    post:
      tags:
      - Activity Folder APIs
      summary: Create Activity Folder or Bulk Delete Activity Folders
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/{id}/children:
    get:
      tags:
      - Activity Folder APIs
      summary: Get the Activities in Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Activity Folder APIs
      summary: Updates the relation between Activity Folder and other Activities or
        Folders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/search:
    post:
      tags:
      - Mitigation APIs
      summary: Search for Mitigations based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/{id}/risks/preview:
    post:
      tags:
      - ARC User APIs
      summary: Check impact of adding Permissions to the User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: groupBy
        in: query
        description: Select grouping type
        schema:
          default: Permission
          enum:
          - Permission
          - Risk
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerUserRiskPreview'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks:
    post:
      tags:
      - Risk APIs
      summary: Create Risk or Bulk Delete Risks
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk3'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}/risks:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of Risks linked to a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}:
    get:
      tags:
      - Risk APIs
      summary: Get the Risk details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Risk APIs
      summary: Delete the Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
    patch:
      tags:
      - Risk APIs
      summary: Update the Risk details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations:
    post:
      tags:
      - Mitigation APIs
      summary: Create Mitigation or Bulk Delete Mitigations
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/{userId}/risks/{riskId}/mitigations:
    post:
      tags:
      - ARC User APIs
      summary: Apply Mitigation to the Risk of a User
      parameters:
      - name: riskId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
        "207":
          description: Multi-Status
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/{id}:
    get:
      tags:
      - Activity Folder APIs
      summary: Get the details of Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Activity Folder APIs
      summary: Delete the Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: removeChildren
        in: query
        schema:
          default: "false"
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Deleted
          content:
            application/json: {}
    patch:
      tags:
      - Activity Folder APIs
      summary: Update the Activity Folder details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/search:
    post:
      tags:
      - Activity Folder APIs
      summary: Search for Activity Folders based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/risks/preview/bulk:
    post:
      tags:
      - ARC User APIs
      summary: Return the Analysis of User and added Access
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/V1SwaggerUserRiskPreviewBulk'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/{id}:
    get:
      tags:
      - Mitigation APIs
      summary: Get the Mitigation details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Mitigation APIs
      summary: Delete the Mitigation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Deleted
          content:
            application/json: {}
    patch:
      tags:
      - Mitigation APIs
      summary: Update the Mitigation details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/stats:
    get:
      tags:
      - ARC Statistics APIs
      summary: Get the statistics of an entity
      parameters:
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: resourceType
        in: query
        description: Define the resource type to apply
        required: true
        schema:
          enum:
          - Business Activity
          - Mitigation
          - Risk
          - All
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}/mitigations:
    get:
      tags:
      - Risk APIs
      summary: Get the details of Mitigations linked to a Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Risk APIs
      summary: Risk and Mitigation relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/{id}/risks:
    get:
      tags:
      - Mitigation APIs
      summary: Get the details of Risks linked to a Mitigation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}/activities:
    get:
      tags:
      - Risk APIs
      summary: Get the details of Activities linked to a Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Risk APIs
      summary: Risk and Activity relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/bulk:
    post:
      tags:
      - Bulk APIs
      summary: Perform bulk operations
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerBulkApi'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "207":
          description: Partial Execution
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}/permissions:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of Permissions linked to a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Business Activity APIs
      summary: Business Activity and Permission relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity3'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Invalid Json
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
components:
  schemas:
    BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke:
      type: object
      properties:
        revoke:
          $ref: '#/components/schemas/UserEntitlementRevoke'
        grant:
          $ref: '#/components/schemas/UserEntitlementGrant'
    ModifyServiceRequestBeanSwagger:
      type: object
      properties:
        profileName:
          type: string
          example: manualService
        manualWorkOrderRequest:
          allOf:
          - $ref: '#/components/schemas/ManualWorkOrderRequestBean'
          - example:
              participant:
                type: ADMINISTRATOR
        _attributes:
          type: object
          example:
            erservicename: ManualService
            erconnectionmode: MANUAL
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    PersonModifyBeanSwagger:
      type: object
      properties:
        justification:
          type: string
          example: Department Change
        _attributes:
          type: object
          example:
            manager:
            - "erglobalid=328765385581670887,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
            title: Marketing Manager
    ViewResponseBean:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/v1.2/views/200218159
              title: Project Manager
        _attributes:
          type: object
          example:
            name: Project Manager
            description: creating Project Manager view
            id: "200218159"
            tasks:
              DV_SELF_SERVICE:
                subtasks:
                  CHANGE_PERSONAL_PROFILE: "no"
                  SELF_SERVICE-CHANGE_ACCOUNT_CATEGORY: "no"
                  CHANGE_PASSWORDS: "no"
                  SELF_SERVICE-VIEW_ACCESSES: "no"
                  VIEW_REQUESTS-VIEW_ALL_MY_REQUEST: "no"
                  MANAGE_MY_ACCOUNTS-REQUEST_ACCOUNT: "no"
                  SELF_SERVICE-CHANGE_ACCOUNT_PASSWORD: "no"
                  MANAGE_MY_ACCOUNTS-VIEW_ACCOUNT: "no"
                  VIEW_REQUESTS-VIEW_MY_ALL_REQUEST: "no"
                  VIEW_PERSONAL_PROFILE: "no"
                  SELF_SERVICE-REQUEST_ACCESS: "no"
                  MANAGE_MY_ACCOUNTS-REQUEST_ACCOUNT_ADVANCED: "no"
                  MANAGE_MY_ACCOUNTS-DELETE_ACCOUNT: "no"
                  DELEGATE_TODOS: "no"
                  SELF_SERVICE-DELETE_ACCESSES: "no"
                  MANAGE_MY_ACCOUNTS-CHANGE_ACCOUNT: "no"
                  VIEW_TODO_LIST: "no"
              DV_ADMIN_CONSOLE:
                subtasks:
                  DESIGN_WORKFLOWS:
                    subtasks:
                      DESIGN_WORKFLOWS-MANAGE_ACCESS_REQUEST_WORKFLOWS: "no"
                      DESIGN_WORKFLOWS-MANAGE_ACCOUNT_REQUEST_WORKFLOWS: "no"
                  MANAGE_TODO_LIST:
                    subtasks:
                      ADMIN_CONSOLE_VIEW_TODO_LIST: "no"
                      ADMIN_CONSOLE_DELEGATE_TODOS: "no"
                      VIEW_TODOS_BY_USER: "no"
                  MANAGE_ROLES: "no"
                  MANAGE_ORPHAN_ACCOUNTS:
                    subtasks:
                      MANAGE_ORPHAN_ACCOUNTS-DELETE_ORPHAN_ACCOUNT: "no"
                      MANAGE_ORPHAN_ACCOUNTS-SUSPEND_ORPHAN_ACCOUNT: "no"
                      MANAGE_ORPHAN_ACCOUNTS-ASSIGN_ORPHAN_ACCOUNT: "no"
                  CHANGE_OTHERS_PASSWORDS: "no"
                  MANAGE_ORGANIZATION_STRUCTURE: "no"
                  REPORTS:
                    subtasks:
                      REPORTS-USER-AND-ACCOUNTS: "no"
                      REPORTS-SERVICES: "no"
                      REPORTS-REQUESTS: "no"
                      REPORTS-AUDIT-AND-SECURITY: "no"
                      REPORTS-CUSTOM: "no"
                  MANAGE_SERVICES:
                    subtasks:
                      MANAGE_SERVICES-POLICY_ENFORCEMENT: "yes"
                      MANAGE_SERVICES-DELETE_ACCOUNT_FORM: "yes"
                      MANAGE_SERVICES-RECONCILE_NOW: "yes"
                      MANAGE_SERVICES-CREATE_SERVICE: "yes"
                      MANAGE_SERVICES-ACCOUNTS:
                        subtasks:
                          MANAGE_SERVICES-CHANGE_ACCOUNT: "yes"
                          MANAGE_SERVICES-SUSPEND_ACCOUNT: "yes"
                          MANAGE_SERVICES-DELETE_ACCOUNT: "yes"
                          MANAGE_SERVICES-ASSIGN_ACCOUNT: "yes"
                          MANAGE_SERVICES-RESTORE_ACCOUNT: "yes"
                          MANAGE_SERVICES-ORPHAN_ACCOUNT: "yes"
                          MANAGE_SERVICES_ACCOUNTS-CHANGE_PASSWORD: "yes"
                          MANAGE_SERVICES-REQUEST_ACCOUNT: "yes"
                      MANAGE_SERVICES-CUSTOMIZE_ACCOUNT_FORM: "yes"
                      MANAGE_SERVICES-MANAGE_ACCOUNT_DEFAULTS: "yes"
                      MANAGE_SERVICES-ENFORCE_POLICY: "yes"
                      MANAGE_SERVICES-EXPORT_ACCESS_DATA: "yes"
                      MANAGE_SERVICES-SETUP_RECON: "yes"
                      MANAGE_SERVICES-ACCOUNT_RECERTIFICATION_STATUS: "yes"
                      MANAGE_SERVICES-RETRY_PENDING: "yes"
                      MANAGE_SERVICES-MANAGE_GROUPS:
                        subtasks:
                          MANAGE_SERVICES-ACCESS_RECERTIFICATION_STATUS: "yes"
                          MANAGE_SERVICES-GROUP_MEMBERSHIP: "yes"
                          MANAGE_SERVICES-DEFINE_ACCESS: "yes"
                      MANAGE_SERVICES-CHANGE_SERVICE: "yes"
                      MANAGE_SERVICES-IMPORT_ACCESS_DATA: "yes"
                      MANAGE_SERVICES-DELETE_SERVICE: "yes"
                  MANAGE_POLICIES:
                    subtasks:
                      MANAGE_POLICIES-MANAGE_IDENTITY_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_ADOPTION_RULES: "no"
                      MANAGE_POLICIES-MANAGE_SOD_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_SERVICE_SELECTION_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_PASSWORD_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_PROVISIONING_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_RECERTIFICATION_POLICIES: "no"
                  SET_SYSTEM_SECURITY:
                    subtasks:
                      SET_SYSTEM_SECURITY-MANAGE_ACI: "no"
                  MANAGE_USERS:
                    subtasks:
                      MANAGE_PEOPLE-ACCOUNTS:
                        subtasks:
                          MANAGE_PEOPLE-CHANGE_ACCOUNT: "no"
                          MANAGE_PEOPLE-REQUEST_ACCOUNT: "yes"
                          MANAGE_PEOPLE-DELETE_ACCOUNT: "no"
                          MANAGE_PEOPLE-CHANGE_ACCOUNT_CATEGORY: "no"
                          MANAGE_PEOPLE-RESTORE_ACCOUNT: "no"
                          MANAGE_USERS_ACCOUNTS-CHANGE_PASSWORD: "no"
                          MANAGE_PEOPLE-SUSPEND_ACCOUNT: "no"
                      MANAGE_PEOPLE-RESTORE_PERSON: "no"
                      MANAGE_USERS-CHANGE_PASSWORDS: "no"
                      MANAGE_PEOPLE-DELETE_PERSON: "no"
                      MANAGE_PEOPLE-SUSPEND_PERSON: "no"
                      MANAGE_PEOPLE-CHANGE_PERSON: "yes"
                      MANAGE_USERS-TRANSFER_USER: "no"
                      MANAGE_PEOPLE-DELEGATE_ACTIVITIES_SYSTEMUSER: "no"
                      MANAGE_USERS-MANAGE_ACCESS:
                        subtasks:
                          MANAGE_USERS-REQUEST_ACCESS: "no"
                          MANAGE_USERS-DELETE_ACCESS: "yes"
                      MANAGE_PEOPLE-CREATE_PERSON: "yes"
                  VIEW_REQUESTS:
                    subtasks:
                      ADMIN_CONSOLE_VIEW_REQUESTS-VIEW_ALL_REQUEST: "no"
                      VIEW_REQUESTS-VIEW_ALL_OTHERS_REQUEST: "no"
                      VIEW_REQUESTS-VIEW_REQUEST_BY_SERVICE: "no"
                      VIEW_REQUESTS-VIEW_OTHERS_PENDING_REQUESTS: "no"
                      VIEW_REQUESTS-VIEW_ALL_PENDING_REQUESTS_BY_SERVICE: "no"
                  SET_SYSTEM_SECURITY-MANAGE_GROUPS: "no"
              DV_SERVICE_CENTER:
                subtasks:
                  SVCENTER_MANAGE_MY_PROFILE:
                    subtasks:
                      SVCENTER_VIEW_PROFILE_FOR_MYSELF: "yes"
                      SVCENTER_MODIFY_PROFILE_FOR_MYSELF: "yes"
                  SVCENTER_MANAGE_OTHERS_PROFILE:
                    subtasks:
                      SVCENTER_VIEW_PROFILE: "yes"
                      SVCENTER_MODIFY_PROFILE: "yes"
                  SVCENTER_CHANGE_PASSWORD_FOR_MYSELF: "yes"
                  SVCENTER_CHANGE_ACCESS_PASSWORD_FOR_MYSELF: "yes"
                  SVCENTER_MANAGE_OTHERS_ACCESS:
                    subtasks:
                      SVCENTER_MODIFY_ACCESS: "yes"
                      SVCENTER_VIEW_ACCESS: "yes"
                      SVCENTER_REQUEST_ACCESS: "yes"
                  SVCENTER_MANAGE_MY_ACTIVITY:
                    subtasks:
                      SVCENTER_DELEGATION_SCHEDULE: "yes"
                      SVCENTER_VIEW_TODO_LIST: "yes"
                  SVCENTER_CHANGE_ACCESS_PASSWORD: "yes"
                  SVCENTER_CHANGE_PASSWORD: "yes"
                  SVCENTER_VIEW_REQUEST_STATUS: "yes"
                  SVCENTER_MANAGE_MY_ACCESS:
                    subtasks:
                      SVCENTER_VIEW_ACCESS_FOR_MYSELF: "yes"
                      SVCENTER_REQUEST_ACCESS_FOR_MYSELF: "yes"
                      SVCENTER_MODIFY_ACCESS_FOR_MYSELF: "yes"
    Access:
      enum:
      - DENY
      - GRANT
      - INVALID
      - NONE
      type: string
    AccountUpdateBeanSwagger:
      type: object
      properties:
        requestee:
          allOf:
          - $ref: '#/components/schemas/HALLink'
          - example:
              href: /itim/rest/people/ZXJnbG9iYWxpZD03MjQyNDYxMTI1MTM0MTE0ODM5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - attribute: erPassword
              value: secret
            - property: itimPassword
              value: secret
    RoleBean:
      type: object
      properties:
        entityRef:
          type: string
    CreateAccessBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            badges:
            - style: blue
              designation: approle
            additionalInformation: Access created for the ApplicationRole
            accessName: ApplicationRole
            entityType: 3
            accessCategory: Application
            description: ApplicationRole Access
            isCommon: true
            entityRef: 410a7b56-37c8-4b1d-9ca7-e96680d8a7eb
            tags:
            - tag1
            - tag2
    ServiceRequestBeanSwagger:
      type: object
      properties:
        profileName:
          type: string
          example: manualService
        defaultProvisioningPolicyRequest:
          allOf:
          - $ref: '#/components/schemas/ProvisioningPolicyRequestBean'
          - example:
              enabled: "true"
              provisioningMode: Manual
        manualWorkOrderRequest:
          allOf:
          - $ref: '#/components/schemas/ManualWorkOrderRequestBean'
          - example:
              profileName: manualService
              defaultProvisioningPolicyRequest:
                enabled: "true"
                provisioningMode: Manual
              manualWorkOrderRequest:
                defaultNotification: "true"
                escalationPeriod: "10"
                escalationParticipant:
                  id: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNSxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                  type: GROUP
                participant:
                  id: ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  type: USER
              _attributes:
                erservicename: ManualService
                erconnectionmode: MANUAL
              orgID: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
        _attributes:
          type: object
          example:
            erservicename: ManualService
            erconnectionmode: MANUAL
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    RecertifyWorkItemSwagger:
      type: object
      properties:
        userComment:
          type: string
          example: ""
        userRecertificationData:
          type: object
          example:
            accountsToCertify:
            - ownershipType: Individual
              decision: true
              name: vm on linux service
              description: ""
              dependentRecertificationTodoTargets:
              - ownershipType: ""
                decision: false
                name: apache access
                description: Apache access to xyz application
                dependentRecertificationTodoTargets: []
                dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
              dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
            - ownershipType: Individual
              decision: false
              name: vm on aix service
              description: ""
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
            rolesToCertify:
            - ownershipType: ""
              decision: false
              name: Developers
              description: Developers in Costa Mesa location
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
            - ownershipType: ""
              decision: true
              name: Managers
              description: Managers in Costa Mesa location
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
        justification:
          type: string
          example: The user requires the role and accesses to do the job
    WorkItemUpdateBeanSwagger:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/WorkItemActionBean'
          - example:
              code: RS
        justification:
          type: string
          example: Provided requested information
        label:
          type: string
          example: RFIAccountAdd
        rfiAttributeValues:
          type: object
          example:
          - name: cn
            value:
            - Marco Lounton
          - name: erntlocalgroups
            value:
            - Backup Operators
            - ConfigMgr Remote Control Users
        additionalData:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalData'
          example:
          - value:
              mitigationIds:
              - 46474dda-c61f-4c28-aec8-45ec92efe682
            key: RISK_MITIGATION
    CreatePersonRequestBean:
      type: object
      properties:
        profileName:
          type: string
          example: Person
        scheduledTime:
          type: string
          example: 01/01/2017 12:30
        justification:
          type: string
        _attributes:
          type: object
          example:
            sn: Doe
            cn: john
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    SelfRegisterPersonRequestBean:
      type: object
      properties:
        profileName:
          type: string
          example: Person
        tenantID:
          type: string
          example: org
        justification:
          type: string
        _attributes:
          type: object
    WorkItemBatchUpdateBeanSwagger:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/workitems/2461578322863485336
        action:
          allOf:
          - $ref: '#/components/schemas/WorkItemActionBean'
          - example:
              code: AR
        justification:
          type: string
          example: Rejecting request due to policy violations
        label:
          type: string
          example: Manager Approval
    ChangePasswordSwaggerBean:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - property: oldPassword
              value: myoldpassword
            - attribute: erPassword
              value: mypassword
    ACIScope:
      enum:
      - INVALID
      - SINGLE
      - SUBTREE
      type: string
    PersonSuspendRestoreBeanSwagger:
      type: object
      properties:
        justification:
          type: string
          example: The person is on a long leave
    LabelBean:
      type: object
      properties:
        text:
          type: string
        inserts:
          type: array
          items:
            type: object
        key:
          type: string
    RetrievePasswordSwagger:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
    ValidatePasswordSwaggerBean:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - attribute: erPassword
              value: mypassword
    Permissions:
      type: object
      properties:
        class-rights:
          type: object
          example:
            modify: GRANT
            search: GRANT
        attribute-rights:
          type: object
          example:
            givenname:
              read: GRANT
              write: NONE
            cn:
              read: GRANT
              write: NONE
    Membership:
      type: object
      properties:
        values:
          type: array
          items:
            format: uuid
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - example: SYSTEM_ROLE
    AdditionalData:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/IAdditionalDataValue'
          - example: RISK_MITIGATION
        key:
          type: string
    EnforcePolicyRequestBeanSwagger:
      type: object
      properties:
        scheduledTime:
          type: string
          example: 01/01/2017 12:30
    DesignFormBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            formTemplate:
              tabbedForm:
                tab:
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      maxlength: "128"
                      name: data.sn
                      type: text
                    name: data.sn
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    - parameter: "128"
                      type: MAX_LENGTH
                    label: $sn
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.cn
                      type: text
                    name: data.cn
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    label: $cn
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.uid
                      type: text
                    name: data.uid
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    label: $uid
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      maxlength: "128"
                      name: data.givenname
                      type: text
                    name: data.givenname
                    constraint:
                    - parameter: "128"
                      type: MAX_LENGTH
                    label: $givenname
                    direction: inherit
                  - input:
                      size: "50"
                      maxlength: "20"
                      name: data.initials
                      type: text
                    name: data.initials
                    constraint:
                    - parameter: "20"
                      type: MAX_LENGTH
                    label: $initials
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.homepostaladdress
                      type: text
                    name: data.homepostaladdress
                    label: $homepostaladdress
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.sharedsecret
                      type: text
                    name: data.ersharedsecret
                    label: $ersharedsecret
                    direction: inherit
                  - name: data.erroles
                    searchMatch:
                      orgSubTreeSearch: "true"
                      multiple: "true"
                      _class: DefaultRole
                      comboItem:
                        size: "4"
                        name: data.erroles
                        label: $erroles
                      category: Role
                      type: select
                    label: $erroles
                    direction: inherit
                  - input:
                      size: ""
                      name: data.erlocale
                      type: text
                      value: ""
                    helpText: ""
                    hintText: ""
                    isHiddenOnModify: ""
                    name: data.erlocale
                    isReadOnlyOnModify: ""
                    label: $erlocale
                    required: ""
                    direction: inherit
                  index: "0"
                  title: $personal
                  selected: "true"
                  url: "javascript:switchTabs(document.forms['body'],0);"
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      name: data.roomnumber
                      type: text
                    name: data.roomnumber
                    label: $roomnumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.employeenumber
                      type: text
                    name: data.employeenumber
                    label: $employeenumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.title
                      type: text
                    name: data.title
                    label: $title
                    direction: inherit
                  - name: data.manager
                    searchControl:
                      orgSubTreeSearch: "true"
                      comboItem:
                        name: data.manager
                        label: $manager
                      category: Person
                      type: input
                    label: $manager
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.postaladdress
                      type: text
                    name: data.postaladdress
                    label: $postaladdress
                    direction: inherit
                  - name: data.secretary
                    searchControl:
                      orgSubTreeSearch: "true"
                      comboItem:
                        name: data.secretary
                        label: $secretary
                      category: Person
                      type: input
                    label: $secretary
                    direction: inherit
                  index: "1"
                  title: $corporate
                  selected: "false"
                  url: "javascript:switchTabs(document.forms['body'],1);"
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      name: data.mail
                      type: text
                    name: data.mail
                    constraint:
                    - parameter: "true"
                      type: EMAIL
                    label: $mail
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.telephonenumber
                      type: text
                    name: data.telephonenumber
                    label: $telephonenumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.mobile
                      type: text
                    name: data.mobile
                    label: $mobile
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.pager
                      type: text
                    name: data.pager
                    label: $pager
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.homephone
                      type: text
                    name: data.homephone
                    label: $homephone
                    direction: inherit
                  - name: data.eraliases
                    label: $eraliases
                    editableTextList:
                      comboItem:
                        size: "4"
                        name: data.eraliases
                        label: $eraliases
                    direction: inherit
                  index: "2"
                  title: $communications
                  selected: "false"
                  url: "javascript:switchTabs(document.forms['body'],2);"
            ercustomclass: inetOrgPerson
            erformname: inetOrgPerson
    ModifyIdentityPolicyBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            erenabled: "true"
    PermissionValue:
      type: object
      properties:
        read:
          $ref: '#/components/schemas/Access'
        write:
          $ref: '#/components/schemas/Access'
    UserRecertificationDetailsBean:
      type: object
      properties:
        accountsToCertify:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
          example:
          - ownershipType: Individual
            decision: true
            name: vm on linux service
            description: ""
            dependentRecertificationTodoTargets:
            - ownershipType: ""
              decision: false
              name: apache access
              description: Apache access to xyz application
              dependentRecertificationTodoTargets: []
              dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
            dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
          - ownershipType: Individual
            decision: false
            name: vm on aix service
            description: ""
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
        comment:
          type: string
          example: string
        justification:
          type: string
          example: string
        rolesToCertify:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
          example:
          - ownershipType: ""
            decision: false
            name: Developers
            description: Developers in Costa Mesa location
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
          - ownershipType: ""
            decision: true
            name: Managers
            description: Managers in Costa Mesa location
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
    WorkItemActionBean:
      type: object
      properties:
        code:
          type: string
        inProgressLabel:
          $ref: '#/components/schemas/LabelBean'
        label:
          $ref: '#/components/schemas/LabelBean'
    CreateIdentityPolicyRequestBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            eruserclass: Person
            erenabled: "true"
            erscope: "2"
            erkeywords: Person
            description: abc-desc
            erjavascript: <Javascript code here>
            erpolicytarget: "1;erglobalid=6995527626792419564,ou=services,erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
            erpolicyitemname: Identity-Policy
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwghMDAwMCxvdT1vcmcsZGM9RGl2eWE
    ChallengeResponseBean:
      type: object
      properties:
        response:
          type: string
        challenge:
          type: string
    AccessAssignCheckComplianceRequestBeanSwagger:
      type: object
      properties:
        newAccount:
          allOf:
          - $ref: '#/components/schemas/ExtendedHALBean'
          - example:
              _links:
                requestee:
                  href: /itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0MzA0Njg5MTAzLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                service:
                  href: /itim/rest/services/ZXJnbG9iYWxpZD03NjQxMTc2MjkxOTU5MDI1OTU0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
              _forms:
              - _inputs:
                - attribute: eruid
                  value: userid
                - attribute: erposixgecos
                  value:
                  - aValue
    RecertificationTodoTarget:
      type: object
      properties:
        ownershipType:
          type: string
        decision:
          type: boolean
        name:
          type: string
        description:
          type: string
        dependentRecertificationTodoTargets:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
        readOnly:
          type: boolean
        dN:
          type: string
    ACIResponseBean:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/v1.2/acis/e2ad43d0-dcfd-49ab-8f37-704a6c2fb877
              title: Some name update
            erparent:
              href: /itim/rest/v1.2/organizationcontainers/organizations/3de5e18a-c918-4af3-90f7-7e72ff1fba29
        _attributes:
          $ref: '#/components/schemas/ACIAttributes'
        orgId:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    EntityBean:
      type: object
      properties:
        _attributes:
          type: object
    ExtendedHALBean:
      type: object
      properties:
        _attributes:
          type: object
    ForgotPasswordSubmitResponseBeanSwagger:
      type: object
      properties:
        password:
          type: string
          example: itimPassword
        challengeResponses:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeResponseBean'
          example:
          - response: IBM
            challenge: What is the name of your first company?
          - response: Red
            challenge: What is your favorite color?
          - response: "4"
            challenge: How many siblings does your father have?
    ViewRequestBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            name: ProjectManager
            description: View for Project Manager
            tasks:
              DV_ADMIN_CONSOLE:
                subtasks:
                  MANAGE_SERVICES:
                    viewAllSubtasks: "yes"
                  MANAGE_USERS:
                    subtasks:
                      MANAGE_PEOPLE-ACCOUNTS:
                        subtasks:
                          MANAGE_PEOPLE-REQUEST_ACCOUNT: "yes"
                          MANAGE_PEOPLE-DELETE_ACCOUNT: "no"
                        viewAllSubtasks: "no"
                      MANAGE_PEOPLE-CHANGE_PERSON: "yes"
                      MANAGE_USERS-MANAGE_ACCESS:
                        subtasks:
                          RECERTIFY_USER: "yes"
                          MANAGE_USERS-REQUEST_ACCESS: "yes"
                          MANAGE_USERS-DELETE_ACCESS: "no"
                        viewAllSubtasks: "no"
                      MANAGE_PEOPLE-CREATE_PERSON: "yes"
                    viewAllSubtasks: "no"
                viewAllSubtasks: "no"
              DV_SERVICE_CENTER:
                viewAllSubtasks: "yes"
    BulkAssignementAttributeValueGrant:
      type: object
      properties:
        entitlement:
          type: string
          example: <entitlementcode>
        assignmentAttributes:
          type: object
          example:
            <entitlementcode>:
              attr4:
              - val4
              attr3:
              - val3
        users:
          type: array
          items:
            type: string
          example:
          - <user1-id>
          - <user2-id>
    DelegateRequestBean:
      type: object
      properties:
        delegate:
          allOf:
          - $ref: '#/components/schemas/EntityBean'
          - example:
              _links:
                self:
                  href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
        endDate:
          type: string
          example: "1432603800000"
        startDate:
          type: string
          example: "1432603800000"
    UserEntitlementGrant:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserToEntitlementGrant'
    Form:
      type: object
      properties:
        _inputs:
          type: array
          items:
            $ref: '#/components/schemas/FormInput'
    ACIRequestBean:
      required:
      - _attributes
      type: object
      properties:
        _attributes:
          $ref: '#/components/schemas/ACIAttributes'
        orgId:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    ChallengeRequestUserBean:
      type: object
      properties:
        userId:
          type: string
    UserToEntitlementGrant:
      type: object
      properties:
        rights:
          uniqueItems: true
          type: array
          items:
            type: string
          example: []
        assignmentAttributes:
          type: object
          example:
            ent2:
              attr1:
              - val1
              attr3:
              - val3
            ent1:
              attr2:
              - val2
              attr1:
              - val1
        user:
          type: string
          example: ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ
        group:
          type: string
          example: ""
    ManualWorkOrderRequestBean:
      type: object
      properties:
        defaultNotification:
          type: boolean
        escalationPeriod:
          format: int64
          type: integer
        escalationParticipant:
          $ref: '#/components/schemas/ParticipantBean'
        _attributes:
          type: object
        participant:
          $ref: '#/components/schemas/ParticipantBean'
    ParticipantBean:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        _attributes:
          type: object
    FormInput:
      type: object
      properties:
        attribute:
          type: string
          example: sharedSecret
        value:
          type: object
          example: sharedSecret
    AccessAssignmentSingleRequestBean:
      type: object
      properties:
        justification:
          type: string
          example: Deleting the access assignment due to change of role
    ModifyAccessBean:
      type: object
      properties:
        enableAccess:
          type: boolean
          example: false
        _attributes:
          type: object
          example:
            entityType: 3
    SearchAssignmentRequestBeanSwagger:
      type: object
      properties:
        rightsFilter:
          type: string
          example: name eq "Elite Plumbing" AND city eq "New York"
        entitlement:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          example: f2d2a97e-e4fa-42c4-8222-ebc7487053f3
    ModifyPasswordPolicyRequestBeanSwagger:
      type: object
      properties:
        policyTargets:
          type: array
          items:
            type: object
          example:
          - constant: SPECIFIC_SERVICE
            service: ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
        rules:
          type: object
          example:
            minLength: "1"
            maxLength: "10"
        _attributes:
          type: object
          example:
            erenabled: "false"
            erscope: "2"
    ModifySystemRoleRequestSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            description: Role with administrative privileges
            ersystemrolecategory: 1
    MessageBean:
      type: object
      properties:
        severity:
          type: string
        text:
          type: string
        id:
          type: string
        inserts:
          type: array
          items:
            type: object
        key:
          type: string
        supportingData:
          type: object
    ProvisioningPolicyRequestBean:
      type: object
      properties:
        _attributes:
          type: object
        enabled:
          type: boolean
        provisioningMode:
          type: string
    ACIAttributes:
      type: object
      properties:
        filter:
          type: string
          example: (&(!(erObjectType=1))(!(eruid=root))(!(eruid=administrator)))
        permissions:
          $ref: '#/components/schemas/Permissions'
        scope:
          allOf:
          - $ref: '#/components/schemas/ACIScope'
          - example: SUBTREE
        name:
          type: string
          example: IVIG account policy
        id:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        target:
          type: string
          example: erAccountItem
    CreateLifecycleRuleRequestBeanSwagger:
      type: object
      properties:
        typeInfo:
          type: string
          example: Account
        ruleType:
          type: string
          example: CATEGORY_TYPE
        schedules:
          type: array
          items:
            type: object
          example:
          - dayOfWeek: 0
            hour: 12
            month: 0
            dayOfMonth: -1
            minute: 0
        _attributes:
          type: object
          example:
            OperationName: suspend
            Filter: (cn=*)
            name: Suspend Dormant Account LCR
            description: LCR to suspend dormant accounts
    MultipartBodyBean:
      required:
      - file
      type: object
      properties:
        file:
          format: binary
          description: file data
          type: string
    PasswordSubmitResponseBeanSwagger:
      type: object
      properties:
        challengeResponses:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeResponseBean'
          example:
          - response: IBM
            challenge: What is the name of your first company?
          - response: Red
            challenge: What is your favorite color?
          - response: "4"
            challenge: How many siblings does your father have?
    CreatePasswordPolicyRequestBeanSwagger:
      type: object
      properties:
        policyTargets:
          type: array
          items:
            type: object
          example:
          - constant: SPECIFIC_SERVICE
            service: ZXJnbG9iYWxpZD02NTgxNDM4MDU4NjI3Njg3NjI1LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
          - constant: SERVICE_TYPE
            service: WinLocalProfile
        rules:
          type: object
          example:
            customRules:
              examples.passwordrules.RegularExpressionRule: "true"
            minAlphabeticCharacters: "3"
            minLength: "5"
            maxLength: "13"
        _attributes:
          type: object
          example:
            erenabled: "true"
            erscope: "1"
            erkeywords: Policy new
            description: test new
            erpolicyitemname: REST password-Policy new
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    Type:
      enum:
      - ACCESSOWNER
      - ADMINISTRATOR
      - ALL
      - INVALID
      - OWNER
      - ROLEOWNER
      - SELF
      - SERVICEOWNER
      - SERVICE_ACCESSOWNER
      - SPONSOR
      - SUPERVISOR
      - SYSTEM_ROLE
      type: string
    CreateSystemRoleRequestBeanSwagger:
      required:
      - erparent
      type: object
      properties:
        _attributes:
          type: object
          example:
            errolename: AdminRole
            description: Role with administrative privileges
            ersystemrolecategory: 1
            uuid: 123e4567-e89b-12d3-a456-426614174000
        erparent:
          description: UUID of the organization that the system role belongs to
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
    HALLink:
      type: object
      properties:
        hreflang:
          type: string
        templated:
          type: boolean
        profile:
          format: uri
          type: string
        name:
          type: string
        href:
          format: uri
          type: string
        title:
          type: string
        type:
          type: string
    RoleAccessRequestBean:
      type: object
      properties:
        enableAccess:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleBean'
        accessCategory:
          type: string
        commonAccess:
          type: boolean
    IAdditionalDataValue:
      type: object
    UserEntitlementRevoke:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserToEntitlementRevoke'
    ModifyLifecycleRuleRequestBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            name: Suspend Unused Account LCR
    UserToEntitlementRevoke:
      type: object
      properties:
        assignmentOrigin:
          type: string
          example: ""
        assignmentAttributes:
          type: object
          example:
            ent2:
              attr1:
              - val1
              attr3:
              - val3
            ent1:
              attr2:
              - val2
              attr1:
              - val1
        user:
          type: string
          example: ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ
        group:
          type: string
          example: ""
    PersonDeleteResponseBean:
      type: object
      properties:
        requestId:
          type: string
        status:
          format: int32
          type: integer
    ReminderAction:
      description: The action to be taken after a while to send periodic reminders
        to reviewers for unreviewed assignments
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReminderActionType'
        reminderInterval:
          format: int64
          type: integer
    Account:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/UserGroup'
        ownershipType:
          type: string
        deletionDate:
          format: date
          type: string
        name:
          type: string
          readOnly: true
        id:
          type: string
        finerStatus:
          type: string
        status:
          type: string
    CampaignConfigurationLaunchOutput:
      description: Representation of a campaign configuration launch result object
        for the resposne
      type: object
      properties:
        _campaignId:
          description: _campaignId
          type: string
    Entity:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        id:
          type: string
    BulkOperationCampaign:
      description: Representation of a bulk operation on campaign configurations.
      required:
      - op
      - path
      type: object
      properties:
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        value:
          $ref: '#/components/schemas/CampaignConfiguration'
    ListResponse:
      description: Object used to return a list of objects
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            type: object
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    BulkResult1:
      description: Representation of a generic response of a Bulk REST API
      required:
      - op
      - path
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        error:
          type: string
        value:
          type: object
    UserGroupV1:
      description: Represents a user group
      type: object
      properties:
        formatted:
          type: string
          readOnly: true
        givenName:
          type: string
          readOnly: true
        familyName:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
          readOnly: true
        realm:
          type: string
          readOnly: true
        userType:
          type: string
          readOnly: true
        id:
          type: string
        email:
          type: string
          readOnly: true
    TenantLimitsOutput:
      description: Representation of a limit in creating a new campaign for a tenant
      type: object
      properties:
        current_active_campaign_instances:
          format: int32
          description: Number of current active campaign instances
          type: integer
        current_total_campaign_assignments_in_db:
          format: int64
          description: Current total campaign assignments in db
          type: integer
        current_active_campaign_assignments:
          format: int64
          description: Number of current active campaign assignments
          type: integer
        max_active_campaign_assignments:
          format: int64
          description: Maximum number of active campaign assignments
          type: integer
        max_total_campaign_assignments_in_db:
          format: int64
          description: Total campaign assignments in db
          type: integer
        max_active_campaign_instances:
          format: int32
          description: Maximum number of active campaign instances
          type: integer
    JsonNode:
      type: array
    RundeckRequestUpdateInput:
      description: Object used to run rundeck jobs for updating requests.
      required:
      - userName
      - password
      type: object
      properties:
        password:
          description: Password
          type: string
        userName:
          description: User Name
          type: string
    UserGroup:
      description: Represents a user group
      type: object
      properties:
        formatted:
          type: string
          readOnly: true
        givenName:
          type: string
          readOnly: true
        familyName:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        realm:
          type: string
          readOnly: true
        id:
          type: string
        userType:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
    Assignment:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        assigner:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: User who assigned the entitlement.
        extRef:
          description: Entitlement external ref. Valid only if type is ENTITLEMENT
          type: string
        subType:
          description: The entitlement type (ROLE or PERMISSION)
          type: string
        rightsRef:
          description: Entitlement rights ref. Valid only if type is ENTITLEMENT
          type: string
        id:
          type: string
        assignee:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: The user to which the entitlement has been assigned.
        type:
          description: "The subject type: possible values are ENTITLEMENT."
          type: string
        creationDate:
          format: date
          description: Date when assignment has been created
          type: string
    ErrorMessageForBulkOp:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkOperationResult1'
    EventOutput:
      description: Object used to represent an event in the assignment
      required:
      - type
      - changedAttributes
      type: object
      properties:
        type:
          description: type
          type: string
        changedAttributes:
          description: changedAttributes
          type: array
          items:
            $ref: '#/components/schemas/AttributeChangesOutput'
    ReviewerOperation:
      enum:
      - all
      - approved
      - escalated
      - noMoreOnTarget
      - none
      - redirected
      - rejected
      - unmanage
      type: string
    SubjectAdditionalData1:
      type: object
      properties:
        accountName:
          description: Account name on the respective entitlement.
          type: string
        name:
          description: The entitlement name when the subject is an entitlement or
            the account name when subject is an account.
          type: string
        assigner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: User who assigned the entitlement.
        extRef:
          description: Entitlement external ref. Valid only if type is ENTITLEMENT
          type: string
        subType:
          description: "The entitlement type (ROLE or PERMISSION) when the subject\
            \ is an entitlement or the account status (MATCHED, UNMATCHED, NON-COMPLIANT,\
            \ COMPLIANT) when the subject is an account."
          type: string
        rightsRef:
          description: Entitlement rights ref. Valid only if type is ENTITLEMENT
          type: string
        extId:
          description: The subject identifier.
          type: string
        type:
          description: "The subject type: possible values are ENTITLEMENT or ACCOUNT."
          type: string
        creationDate:
          format: date
          description: Date when assignment has been created
          type: string
        accountOwnershipType:
          description: Account ownership type of the respective account.
          type: string
    ErrorMessageForBulk:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkResult1'
    CampaignConfigurationInput:
      description: Object used to create a new campaign configuration
      required:
      - owner
      - type
      - priority
      - name
      - applications
      - launchDate
      - duration
      type: object
      properties:
        preview:
          description: "A flag for a preview campaign, not opened to reviewers"
          type: boolean
        _rev:
          description: _rev
          type: string
        description:
          description: Campaign description
          type: string
        nextRunDate:
          description: Forecasted Run date for the next campaign instance.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy.
        launchDate:
          description: Date when the first instance of the campaign starts
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - epoch
          type: string
        automaticRefreshContinuousCampaign:
          description: "A flag, valid for continuous campaigns only, saying that campaign\
            \ should refresh the existing filter for building dataset"
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign type
            enum:
            - userassignment
            - groupassignment
            - account
        frequency:
          description: A UNIX or Linux Cron-compatible string that defines the start
            of subsequent instances
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The The duration (in milliseconds) for which each campaign
            instance remains open
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        id:
          description: Campaign configuration id
          type: string
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        blocklist:
          description: List of users or groups denied for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - description: List of entitlements for inclusion/exclusion or filter for
              entitlements allowed for the certification
        rev:
          description: Campaign configuration rev
          type: string
          readOnly: true
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/V1CampaignFrequency'
          - description: Frequency unit days or months
        runNow:
          description: A flag to start that the campaign immediately
          type: boolean
        blacklist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign priority
            enum:
            - high
            - medium
            - low
        creationDate:
          description: The creation date of the campaign configuration.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        name:
          description: Campaign name
          type: string
        reviewerOverwritten:
          type: boolean
        _id:
          description: _id
          type: string
        applications:
          description: List of applications the campaign the campaign certifies
          type: array
          items:
            $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    AssignmentAction:
      description: Object used to create or replace an assignment.
      required:
      - id
      type: object
      properties:
        id:
          description: Assignment Id
          type: string
        applicationId:
          description: Application identifier
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
    ListResponseCampaignStatsOutput:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignStatsOutput'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    OperationAndValue:
      description: Rest representation for Operation and Value.
      required:
      - op
      - v1
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: eq
        v1:
          description: Value
          type: string
          example: Security
    CampaignAssignment:
      description: Representation of a campaign assignment for REST APIs.
      type: object
      properties:
        The campaign subject additional data.:
          $ref: '#/components/schemas/SubjectAdditionalData'
        fulfilled:
          type: boolean
        Id of the parent campaign configuration.:
          type: string
        The date representing when the assignment was first imported inside certification manager.:
          format: date
          type: string
        Owning tenant id:
          type: string
        The reviewer of the assignment.:
          $ref: '#/components/schemas/UserGroup'
        The group through which the assignee is granted access to the entitlement (visibility).:
          $ref: '#/components/schemas/UserGroup'
        The date representing when the last operation was performed.:
          format: date
          type: string
        The owner of the assignment.:
          $ref: '#/components/schemas/UserGroup'
        Last operation, if any, executed by the reviewer during the campaign.:
          $ref: '#/components/schemas/ReviewerOperation'
        Id of the parent campaign instance.:
          type: string
        The application associated to the assignment.:
          $ref: '#/components/schemas/Application'
        If the value associated to the last operation was set internally and automatically by the microservice:
          type: boolean
        If true, the assignment is removed from target and hence disabled.:
          type: boolean
        entitlement:
          $ref: '#/components/schemas/Entitlement1'
        'The assignment id coming from the external system to certify (that is AuthZ). ':
          type: string
        lastOperationAutomatic:
          type: boolean
        Justification text for the last operation in case of rejections and redirections.:
          type: string
        doImmediateFulfillment:
          type: boolean
        The rights associated to the assignment.:
          type: array
          items:
            type: string
        A string containing the error raised by the backend in case of a bulk assignment update.:
          type: string
        Id:
          type: string
        If true the assignment operation has been fulfilled:
          type: boolean
        The list of delegators assigned the duties for a given campaign instance.:
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        account:
          $ref: '#/components/schemas/Account'
    AllowBlockListInputOutput:
      description: Object used to represent an allowlist and blocklist.
      type: object
      properties:
        formatted:
          description: "The full name of the user that includes  user name, middle\
            \ name, and suffix, that are formatted for display."
          type: string
          readOnly: true
        givenName:
          description: "The given name of the user, or first name in most Western\
            \ languages. For example, Barbara is the given name from the full name\
            \ Ms. Barbara J Jensen, PhD."
          type: string
          readOnly: true
        description:
          description: Description of group
          type: string
          readOnly: true
        type:
          type: string
        accountStatus:
          description: To filter the account status.
          enum:
          - compliant
          - unmatched
          - non_compliant
          type: string
        parentName:
          type: string
        familyName:
          description: "The family name of the user, or the last name in most Western\
            \ languages. For example, Jensen is the family name from the full name\
            \ Ms. Barbara J Jensen, PhD."
          type: string
          readOnly: true
        name:
          description: The userName or groupName of the user or group.
          type: string
          readOnly: true
        realm:
          description: The realm to which the user belongs. It is always "cloudIdentityRealm"
            for regular users. Maximum length is 240 characters.
          type: string
          readOnly: true
        aGroup:
          description: Specifies if the filter refers to a group. The values are true
            or false.
          type: boolean
        id:
          description: The user identifier of the user to be filtered.
          type: string
        userType:
          description: "The type of the user. For example, regular, federated."
          type: string
          readOnly: true
        email:
          description: The email address of the user.
          type: string
          readOnly: true
        accountOwnershipType:
          description: Account ownership type.
          type: string
    UserOrAccountAllowBlockList:
      description: Rest representation for an userList or user condition set filter.
      type: object
      properties:
        businessUnitExclusionList:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userConditionSet:
          description: "The conditionSet set to build the user filter. Example for\
            \ userConditionSet : [{\"work_locality\":[{\"op\":\"sw\",\"vl\":\"J\"\
            },{\"op\":\"ew\",\"vl\":\"a\"}],\"department\":[{\"op\":\"eq\",\"vl\"\
            :\"Security\"}]}]"
          type: array
          items:
            type: object
        businessUnitInclusionList:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userExclusionList:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userInclusionList:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
    Application:
      description: The list of Applications certified by the campaign.
      type: object
      properties:
        name:
          type: string
          readOnly: true
        icon:
          description: application icon
          type: string
          readOnly: true
        description:
          description: application description
          type: string
          readOnly: true
        id:
          type: string
        url:
          description: application url
          type: string
          readOnly: true
    CampaignStatsOutput:
      description: Representation of aggregated information for campaign objects -
        REST APIs.
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        numNoMoreOnTargetItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object.
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        delegators:
          description: List of delegators who were delegated the duties for a given
            campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        count:
          format: int32
          description: The total number of associated object occurrences returned.
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object.
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object.
          type: integer
        entity:
          description: "A string representing the aggregated object. Not null if filterType\
            \ is type, state, priority."
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
    ContinuousCampaignEvents:
      description: A list of events thats needs to be monitored through the campaign
      type: object
      properties:
        monitoredAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ContinuousCampaignMonitoredAttribute'
        type:
          type: string
    ListResponseCampaignInstanceOutput:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceOutput'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    AttributeChangesOutput:
      description: Object used to create or replace a list of changed attributes
      required:
      - id
      type: object
      properties:
        displayName:
          description: Display name of the attribute
          type: string
        id:
          description: Identifier of the attribute
          type: string
        value:
          description: value of the attribute
          type: string
    StateType:
      enum:
      - aborted
      - all
      - cancelled
      - closed
      - completed
      - created
      - deleted
      - failed
      - noinstance
      - overlapped
      - paused
      - removed
      - running
      - scheduled
      - starting
      - success
      type: string
    AssignmentFilter1:
      description: Assignment-like object that uses filters to search assignments.
      type: object
      properties:
        assignmentStatus:
          description: Assignment compliance status (Account campaign case).
          enum:
          - compliant
          - non_compliant
          - unmanaged
          - unmatched
          type: array
          items:
            type: string
        filter:
          description: Smart filter matched to assignee and application properties
            of each assignment.
          type: string
        groupsId:
          description: IDs of the groups having the assignments.
          type: array
          items:
            type: string
        lastActions:
          description: Last actions executed by each reviewer.
          enum:
          - all
          - none
          - approved
          - rejected
          - redirected
          - escalated
          - noMoreOnTarget
          type: array
          items:
            type: string
        appsId:
          description: IDs of the applications to which the assignments are related.
          type: array
          items:
            type: string
        assignmentNames:
          description: Assignment names
          type: array
          items:
            type: string
        assigneesId:
          description: IDs of the users
          type: array
          items:
            type: string
        reviewersId:
          description: IDs of the users having the assignments
          type: array
          items:
            type: string
        assignmentTypes:
          description: Assignment types
          enum:
          - all
          - permission
          - role
          - account
          type: array
          items:
            type: string
    V1CampaignFrequency:
      description: A UNIX or Linux Cron compatible string that defines the start of
        subsequent instances
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/FrequencyUnit'
        rate:
          format: int32
          type: integer
        cronString:
          type: string
    AssignmentInput:
      description: Object used to create or replace an assignment.
      required:
      - id
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If the campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, the operation is run immediately."
          type: boolean
        id:
          description: Assignment Id
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        applicationId:
          description: Application identifier
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
    ListResponseCampaignStats:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignStats'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ReminderAction1:
      description: The action to be taken after a while to send periodic reminders
        to reviewers for unreviewed assignments
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReminderActionType1'
        reminderInterval:
          format: int64
          type: integer
    CampaignPriority:
      enum:
      - all
      - high
      - low
      - medium
      type: string
    Operation and Value:
      description: Rest representation for Operation and Value.
      required:
      - op
      - vl
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: eq
        vl:
          description: Value
          type: string
          example: Security
    AttributeMap:
      description: Rest representation for an AttributeMap.
      required:
      - name
      type: object
      properties:
        name:
          description: name of the Attribute
          type: string
    EntitlementWithConditionSet:
      description: Rest representation for an entitlement or entitlement condition
        set filter.
      type: object
      properties:
        entitlementExclusionList:
          description: List of Entitlements to be excluded
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        entitlementInclusionList:
          description: List of Entitlements to be included
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
    V1CampaignConfiguration:
      description: Object to represent a Campaign Configuration.
      required:
      - owner
      - type
      - priority
      - name
      - applications
      type: object
      properties:
        preview:
          description: A flag indicating that the campaign is in preview mode and
            not open to reviewers.
          type: boolean
        userConditionSet:
          description: "The conditionSet set to build the user filter. Example for\
            \ userConditionSet : [{\"work_locality\":[{\"op\":\"sw\",\"vl\":\"J\"\
            },{\"op\":\"ew\",\"vl\":\"a\"}],\"department\":[{\"op\":\"eq\",\"vl\"\
            :\"Security\"}]}]"
          type: array
          items:
            type: object
        description:
          description: Campaign Description
          type: string
        nextRunDate:
          format: date
          description: Forecasted Run date for the next campaign instance.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy.
        launchDate:
          format: date
          description: The start date of the first instance of campaign.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          type: string
        automaticRefreshContinuousCampaign:
          description: "A flag, valid for continuous campaigns only, saying that campaign\
            \ should refresh the existing filter for building dataset"
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign Type
        frequency:
          description: A UNIX or Linux Cron compatible string that defines the start
            of subsequent instances.
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification.
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The duration (in milliseconds) for which each campaign instance
            remains open.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The creator of the campaign.
        blocklist:
          description: The list of Users or Groups denied certification.
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
            enum:
            - none
            - reminder
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The default reviewer identified for the assignments for which
              the system cannot find a suitable reviewer.
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - description: List of entitlements for inclusion/exclusion or filter for
              entitlements allowed for the certification
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/CampaignFrequency'
          - description: Frequency Unit days or months
        runNow:
          description: The flag indicating the campaign occurs one-time and needs
            to be started immediately.
          type: boolean
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The identified reviewer for the campaign.
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign Priority
            enum:
            - high
            - medium
            - low
            - all
        creationDate:
          format: date
          description: The creation date of the campaign configuration.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        name:
          description: Campaign Name
          type: string
        reviewerOverwritten:
          type: boolean
        applications:
          description: The list of Applications certified by the campaign.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    Event:
      type: object
      properties:
        type:
          type: string
        changedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeChanges'
    UpdateApplicationOperation:
      required:
      - op
      - path
      type: object
      properties:
        op:
          description: Operation to be performed
          enum:
          - remove
          - replace
          type: string
          example: replace
        path:
          description: "The string that contains an attribute path that describes\
            \ the target of the operation. The \"path\" attribute is required for\
            \ all operations. Examples of valid \"path\" specification formats include:\
            \ <br> <br>     \"path\":\"application.owner\" <br>"
          enum:
          - application.owner
          type: string
          example: application.owner
        value:
          description: "The attribute content used for the operation. The \"value\"\
            \ attribute is required for the \"replace\" operations. The \"value\"\
            \ attribute is allowed with \"remove\" operations only when the \"path\"\
            \ identifies  a single object (specified by a selection filter). <br>\
            \ <br> The following example shows a put operation replacing a multiple\
            \ values from \"application.owner\" : <br>  <table> <tr><td> {  \"Operations\"\
            :  [    {      \"op\":\"replace\",      \"path\":\"application.owner\"\
            ,      \"value\":[\"323000PBCU\",\"32600092KB\"],    }  ]}</td></tr></table>"
          type: string
          example: Service Now
    ErrorMessage:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
    CampaignInstanceAction:
      description: Object used to specify action on a campaign instance.
      required:
      - eventType
      type: object
      properties:
        id:
          description: Campaign instance id
          type: string
        eventType:
          description: Specifies the action to apply to the campaign instance.
          enum:
          - cancel
          - pause
          - restart
          - runnow
          type: string
    BulkOperationResult1:
      description: Representation of a response for bulk operation results in REST
        API calls.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        error:
          type: string
        value:
          type: object
    FrequencyUnit:
      enum:
      - DAYS
      - MINUTES
      - MONTHS
      type: string
    Pagination1:
      description: Object used to paginate a REST Api
      type: object
      properties:
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        sortDesc:
          description: Sort results descending.
          type: boolean
        page:
          format: int32
          description: Page number to be returned.
          type: integer
    CampaignFrequency:
      description: A UNIX or Linux Cron compatible string that defines the start of
        subsequent instances
      type: object
      properties:
        cronString:
          type: string
    CampaignInstanceReplaceInput:
      description: Object used to create a new campaign instance.
      required:
      - eventType
      type: object
      properties:
        eventType:
          description: Specifies the action to apply to the campaign.
          enum:
          - cancel
          - pause
          - restart
          - runnow
          type: string
    BulkErrorMessage:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/BulkErrorResponse1'
    AssignmentUpdateAction:
      description: Object used to replace an assignment.
      required:
      - id
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If the campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, the operation is run immediately."
          type: boolean
        id:
          description: Assignment Id
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
    BulkErrorResponse1:
      description: Representation of a generic error response in bulk.
      type: object
      properties:
        Unique identifier of the error message.:
          type: string
          readOnly: true
        Description of the error message.:
          type: string
          readOnly: true
    ListResponseDatasetRecord:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/DatasetRecord'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ListResponse1:
      description: Object used to return a list of objects
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            type: object
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    Pagination:
      description: Object used to paginate a REST Api
      type: object
      properties:
        The maximum number of elements to be returned.:
          format: int32
          type: integer
        Page number to be returned.:
          format: int32
          type: integer
        Sort results descending.:
          type: boolean
    OverdueAction:
      enum:
      - approveAll
      - doNothing
      - rejectAll
      type: string
    ReminderActionType1:
      enum:
      - none
      - reminder
      type: string
    CampaignInstanceInput:
      description: Object used to create a new campaign instance.
      required:
      - event
      type: object
      properties:
        id:
          description: Campaign instance Id
          type: string
        event:
          description: Specifies the action to apply to the campaign.
          enum:
          - delete
          - pause
          - restart
          - runnow
          - end
          - harddelete
          type: string
    ApplicationV1:
      type: object
      properties:
        _rev:
          type: string
          readOnly: true
        name:
          type: string
        icon:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        id:
          type: string
        url:
          type: string
          readOnly: true
    BulkResultType:
      enum:
      - failure
      - success
      type: string
    CampaignConfigurationLaunchInput:
      description: The Campaign Configuration in a draft that is used to launch.
      type: object
      properties:
        campaignId:
          description: Campaign id
          type: string
    CampaignType:
      enum:
      - account
      - all
      - groupassignment
      - groupmembership
      - userassignment
      type: string
    CampaignInstanceOutput:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        timeLastStart:
          format: date
          description: The date representing the start of the instance.
          type: string
        delegators:
          description: List of delegators who were delegated the duties for a given
            campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        configuration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
        _rev:
          description: _rev
          type: string
        timeRemaining:
          format: int64
          description: "The date representing when the instance gets completed, if\
            \ any."
          type: integer
        reviewersCompletedCount:
          format: int32
          description: The total number of reviewers that have completed the review.
          type: integer
        timeClosed:
          format: date
          description: "The date representing when the instance was closed, if any."
          type: string
        assignmentsProcessedCount:
          format: int32
          description: The overall number of assignments processed for the campaign
            instance.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        state:
          description: A string representing the state of the campaign instance.
          type: string
        id:
          description: Campaign instance id
          type: string
        assignmentSources:
          description: The campaign instance assignment sources.
          type: array
          items:
            type: string
        timeLastPause:
          format: date
          description: "The date representing when the instance was paused, if any."
          type: string
        tenantUUID:
          description: Tenant UUID
          type: string
        reviewersTotalCount:
          format: int32
          description: The total number of reviewers.
          type: integer
        rev:
          description: Campaign instance review
          type: string
        delegatees:
          description: List of delegatees to whom duties for a given campaign instance
            were delegated.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        campaignConfiguration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - description: The parent configuration.
        priority:
          description: The priority from the parent configuration.
          type: string
        assignmentsTotalCount:
          format: int32
          description: The overall number of assignments to be reviewed in the campaign
            instance.
          type: integer
        campaignConfigurationId:
          description: The ID of the parent configuration.
          type: string
        tenantId:
          description: Tenant Id
          type: string
        name:
          description: The unique campaign instance name.
          type: string
        progress:
          format: int32
          description: The percentage of overall progress made in the campaign instance.
          type: integer
        _id:
          description: _id
          type: string
        supervisors:
          description: "The list of supervisors identified for the campaign. If a\
            \ group is selected as supervisor, this list contains the group members."
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    AssignmentActionReplaceInput:
      description: Object used to create or replace an assignment.
      required:
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, then the operation is executed immediately."
          type: boolean
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
    SubjectAdditionalData:
      description: The campaign subject additional data.
      type: object
      properties:
        accountName:
          description: Account name on the respective entitlement.
          type: string
        rights:
          description: Rights reference. It is valid only if type is ENTITLEMENT.
          type: string
        name:
          description: The entitlement name when the subject is an entitlement or
            the account name when subject is an account.
          type: string
        assigner:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - description: User who assigned the entitlement.
        extRef:
          description: External reference. It is valid only if type is ENTITLEMENT.
          type: string
        subType:
          description: "The entitlement type (ROLE or PERMISSION) when the subject\
            \ is an entitlement or the account status (MATCHED, UNMATCHED, NON-COMPLIANT,\
            \ COMPLIANT) when the subject is an account."
          type: string
        extId:
          description: The subject identifier.
          type: string
        type:
          description: "The subject type: possible values are ENTITLEMENT or ACCOUNT."
          type: string
        creationDate:
          format: date
          description: Date when assignment was created.
          type: string
        accountOwnershipType:
          description: Account ownership type of the respective account.
          type: string
    MitigationActionType:
      enum:
      - none
      - reminder
      type: string
    ContinuousCampaignMonitoredAttribute:
      description: A attribute thats needs to be monitored through the campaign
      type: object
      properties:
        displayName:
          description: Display name of the attribute
          type: string
          readOnly: true
        name:
          description: A schemaAttribute.name of the attribute.
          type: string
        id:
          description: A unique id of the attribute.
          type: string
    UpdateByApplication:
      description: JSON object used to update all the assignment resources filtered
        by the application
      required:
      - Operations
      type: object
      properties:
        Operations:
          description: "An array of operation objects to be performed.  Operation\
            \ objects must have exactly one \"op\" member, whose value indicates the\
            \ operation to perform. Its value must be one of \"remove\", or \"replace\"\
            . Values are errors."
          type: array
          items:
            $ref: '#/components/schemas/UpdateApplicationOperation'
    CampaignConfigurationCloneInput:
      description: The object can be used to clone an existing campaign configuration.
      type: object
      properties:
        sourceCampaignId:
          description: Source campaign id.
          type: string
    ContinuousCampaignMetaData:
      description: Details of continuous campaign
      type: object
      properties:
        generateInitialDataSet:
          type: boolean
        overdueThreshold:
          format: int32
          type: integer
        reminderAction:
          $ref: '#/components/schemas/ReminderAction1'
        overdueAction:
          $ref: '#/components/schemas/OverdueAction'
        events:
          description: A list of events thats needs to be monitored through the campaign.
          type: array
          items:
            $ref: '#/components/schemas/ContinuousCampaignEvents'
        automaticRefresh:
          type: boolean
    CreateAssignment:
      description: Object used to create an assignment
      required:
      - id
      type: object
      properties:
        id:
          description: Assignment Id
          type: string
        applicationId:
          description: Application identifier
          type: string
    BulkErrorResponse:
      description: Representation of a generic error response in bulk.
      type: object
      properties:
        Unique identifier of the error message.:
          type: string
          readOnly: true
        Description of the error message.:
          type: string
          readOnly: true
    ReminderActionType:
      enum:
      - none
      - reminder
      type: string
    AssignmentFilter:
      description: Assignment-like object that uses filters to search assignments.
      type: object
      properties:
        assignmentStatus:
          description: Assignment compliance status (Account campaign case).
          enum:
          - compliant
          - non_compliant
          - unmanaged
          - unmatched
          type: array
          items:
            type: string
        filter:
          description: Smart filter matched to assignee and application properties
            of each assignment.
          type: string
        groupsId:
          description: IDs of the groups having the assignments.
          type: array
          items:
            type: string
        lastActions:
          description: Last actions executed by each reviewer.
          enum:
          - all
          - none
          - approved
          - rejected
          - redirected
          - escalated
          - noMoreOnTarget
          type: array
          items:
            type: string
        appsId:
          description: IDs of the applications to which the assignments are related.
          type: array
          items:
            type: string
        assignmentNames:
          description: Assignment names
          type: array
          items:
            type: string
        assigneesId:
          description: The user ID whose accesses are being reviewed.
          type: array
          items:
            type: string
        reviewersId:
          description: ID of the user who is going to review OR provide certification.
          type: array
          items:
            type: string
        assignmentTypes:
          description: Assignment types
          enum:
          - all
          - permission
          - role
          - account
          type: array
          items:
            type: string
    AttributeChanges:
      description: Rest representation for an AttributeChanges.
      required:
      - id
      type: object
      properties:
        id:
          description: Identifier of the attribute
          type: string
        oldValue:
          description: old value of the attribute
          type: array
          items:
            type: string
        dispalyName:
          description: Display name of the attribute
          type: string
          readOnly: true
        value:
          description: value of the attribute
          type: string
    CampaignStats1:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        count:
          format: int32
          description: The total number of associated object occurrences returned
          type: integer
        filterType:
          description: The filterType
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        entity:
          description: " A string representing the aggregated object. Not null if\
            \ filterType is type, state, priority"
          type: string
    User:
      type: object
      properties:
        formatted:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        name:
          type: string
          readOnly: true
        realm:
          type: string
        id:
          type: string
        userType:
          type: string
        email:
          type: string
    ListResponseAssignmentStats:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/AssignmentStats'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ListResponseCampaignConfig:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfiguration'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    AssignmentOutput:
      description: Representation of a campaign assignment for REST APIs.
      type: object
      properties:
        lastReminderDate:
          format: date
          description: Date when last email reminder was sent to the reviewer
          type: string
        isLastOperationAutomatic:
          description: Specifies whether the value associated to the last operation
            was set internally and automatically by the microservice
          type: boolean
        tenantUUID:
          description: Owning tenant UUID
          type: string
        isFulfilled:
          description: "If true, the assignment operation was fulfilled"
          type: boolean
        delegators:
          $ref: '#/components/schemas/UserGroupV1'
        noMoreOnTargetSystem:
          description: "If true, the assignment was greyed-out"
          type: boolean
        delegator:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        discretionaryGroup:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        lastActionDate:
          format: date
          description: Date when last operation was performed
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        creationDate:
          format: date
          description: Date when the assignment was first imported inside certification
            manager
          type: string
        error:
          description: A string that contains the back-end error that occurred during
            a bulk assignment update
          type: string
        assignmentId:
          description: The id of the assignment from the external system to certification
            (i.e. AuthZ).
          type: string
        instanceId:
          description: ID of the parent campaign instance.
          type: string
        reminderCount:
          format: int32
          description: Number of email reminders sent to the reviewer for a specific
            assignment
          type: integer
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        configId:
          description: ID of the parent campaign configuration.
          type: string
        rights:
          description: The rights associated to the assignment.
          type: array
          items:
            type: string
        lastOperation:
          allOf:
          - $ref: '#/components/schemas/ReviewerOperation1'
          - description: "Last operation, if any, executed by the reviewer during\
              \ the campaign."
        tenantId:
          description: Owning tenant ID
          type: string
        id:
          description: Id
          type: string
        additionalData:
          allOf:
          - $ref: '#/components/schemas/SubjectAdditionalData1'
          - description: The campaign subject additional data.
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        justification:
          description: Justification text for the last operation in case of rejections
            and redirections.
          type: string
    CampaignStats:
      description: Representation of aggregated information for campaign objects -
        REST APIs.
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object.
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        count:
          format: int32
          description: The total number of associated object occurrences returned.
          type: integer
        numRemovedFromTargetItems:
          format: int32
          description: The number of absent records in the target associated to the
            user represented in the object.
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object.
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object.
          type: integer
        entity:
          description: "A string representing the aggregated object. Not null if filterType\
            \ is type, state, priority."
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
    MitigationAction:
      description: The action to be taken after a while to avoid open records when
        a campaign closes
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MitigationActionType'
        reminderInterval:
          format: int64
          type: integer
    BulkResult:
      description: Representation of a generic response of a Bulk REST API
      required:
      - op
      - path
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        error:
          type: string
        value:
          type: object
    ReviewerOperation1:
      enum:
      - all
      - approved
      - escalated
      - noMoreOnTarget
      - none
      - redirected
      - rejected
      - unmanage
      type: string
    CampaignConfigurationCloneOutput:
      description: Representation of a campaign configuration cloned object for the
        resposne
      type: object
      properties:
        _clonedId:
          description: _clonedId
          type: string
        _sourceId:
          description: _sourceId
          type: string
    BulkOperationResult:
      description: Representation of a response for bulk operation results in REST
        API calls.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        error:
          type: string
        value:
          type: object
    ListResponseCampaignInstance:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstance'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    CampaignSignOffType:
      enum:
      - auto
      - eoc
      - manual
      - no_signoff
      type: string
    RestResponse:
      type: object
      properties:
        count:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        resources:
          type: array
          items:
            type: object
        page:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
    BulkOperation:
      description: Representation of a generic payload of a Bulk REST API.
      required:
      - op
      - path
      type: object
      properties:
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        value:
          type: object
    DatasetRecord:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        lastReminderDate:
          format: date
          type: string
        isFulfilled:
          description: If true the assignment operation has been fulfilled
          type: boolean
        isLastActionAutomatic:
          description: If the value associated to the last operation was set internally
            and automatically by the microservice
          type: boolean
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        noMoreOnTargetSystem:
          description: "If true, the assignment is removed from target and hence disabled."
          type: boolean
        discretionaryGroup:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        fulfilled:
          type: boolean
        lastActionDate:
          format: date
          description: The date representing when the last operation was performed.
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        creationDate:
          format: date
          description: The date representing when the assignment was first imported
            inside certification manager.
          type: string
        error:
          description: A string containing the error raised by the backend in case
            of a bulk assignment update.
          type: string
        assignmentId:
          description: 'The assignment id coming from the external system to certify
            (that is AuthZ). '
          type: string
        lastActionAutomatic:
          type: boolean
        instanceId:
          description: Id of the parent campaign instance.
          type: string
        reminderCount:
          format: int32
          type: integer
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        configId:
          description: Id of the parent campaign configuration.
          type: string
        rights:
          description: The rights associated to the assignment.
          type: array
          items:
            type: string
        lastOperation:
          allOf:
          - $ref: '#/components/schemas/ReviewerOperation'
          - description: "Last operation, if any, executed by the reviewer during\
              \ the campaign."
        id:
          description: Id
          type: string
        additionalData:
          allOf:
          - $ref: '#/components/schemas/SubjectAdditionalData'
          - $ref: '#/components/schemas/SubjectAdditionalData'
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification text for the last operation in case of rejections
            and redirections.
          type: string
        events:
          description: A list of events thats needs to be monitored through the campaign.
          type: array
          items:
            $ref: '#/components/schemas/Event'
    CampaignInstance:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        timeLastStart:
          format: date
          description: The date representing the start of the instance.
          type: string
        reviewerAssignmentCountMap:
          type: object
        reviewersTotalCount:
          format: int32
          description: The total number of reviewers.
          type: integer
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        delegatees:
          description: The list of delegatees who are delegated to perform duties
            for a given campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        campaignConfiguration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfiguration'
          - $ref: '#/components/schemas/CampaignConfiguration'
        timeRemaining:
          format: int64
          description: "The date representing when the instance gets completed, if\
            \ any."
          type: integer
        timeLastModified:
          format: date
          description: "The date representing when the instance was last modified,\
            \ if any."
          type: string
        priority:
          description: The priority from the parent configuration.
          type: string
        assignmentsTotalCount:
          format: int32
          description: The overall number of assignments to be reviewed in the campaign
            instance.
          type: integer
        campaignConfigurationId:
          description: The id of the parent configuration.
          type: string
        reviewersCompletedCount:
          format: int32
          description: The total number of reviewers that have completed the review.
          type: integer
        timeClosed:
          format: date
          description: "The date representing when the instance was closed, if any."
          type: string
        assignmentsProcessedCount:
          format: int32
          description: The overall number of assignments processed for the campaign
            instance.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        name:
          description: The unique campaign instance name.
          type: string
        progress:
          format: int32
          description: The percentage of overall progress made in the campaign instance.
          type: integer
        id:
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/StateType'
          - description: A string representing the state of the campaign instance.
        assignmentSources:
          description: The campaign instance assignment sources.
          type: array
          items:
            type: string
        timeLastPause:
          format: date
          description: "The date representing when the instance was paused, if any."
          type: string
        supervisors:
          description: "The list of supervisors identified for the campaign. If a\
            \ group is selected as supervisor, the list contains the group members."
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
    Entitlement1:
      type: object
      properties:
        hasRights:
          type: boolean
        accountName:
          type: string
        rights:
          type: string
        name:
          type: string
          readOnly: true
        assigner:
          $ref: '#/components/schemas/UserGroup'
        extRef:
          type: string
        assignmentDate:
          format: date
          type: string
        id:
          type: string
        applicationId:
          type: string
    AssignmentStats:
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        count:
          format: int32
          description: The total number of associated object occurrences returned
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object
          type: integer
        entity:
          description: " A string representing the aggregated object. Not null if\
            \ filterType is type, state, priority"
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
    ErrorMessage1:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
    CampaignConfiguration:
      $ref: '#/components/schemas/CampaignConfiguration'
    CampaignConfigurationOutput:
      description: Representation of a campaign configuration for REST APIs
      required:
      - owner
      - type
      - priority
      - name
      - applications
      - launchDate
      - duration
      type: object
      properties:
        preview:
          description: "A flag for a preview campaign, not opened to reviewers"
          type: boolean
        tenantCreationLimits:
          allOf:
          - $ref: '#/components/schemas/TenantLimitsOutput'
          - description: A JSON object that indicates the limits for this tenant
        description:
          description: Campaign description
          type: string
        nextRunDate:
          description: "Estimated next run date for this configuration, if any"
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy
        launchDate:
          description: Date when the first instance of the campaign starts
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - epoch
          type: string
        automaticRefreshContinuousCampaign:
          description: A flag for a campaign to refresh the existing filter for building
            dataset. It is valid for continuous campaigns only.
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign type
            enum:
            - userassignment
            - groupassignment
            - account
        frequency:
          description: A UNIX or Linux Cron-compatible string that defines the start
            of subsequent instances
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The duration (in milliseconds) for which each campaign instance
            remains open
          type: integer
        isDeleted:
          description: The campaign configuration was deleted
          type: boolean
        continuous:
          description: A flag for a continuous campaign
          type: boolean
        draft:
          description: A flag for a draft campaign
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        id:
          description: Campaign configuration ID
          type: string
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        blocklist:
          description: List of users or groups denied for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        tenantUUID:
          type: string
        rev:
          description: Campaign configuration review
          type: string
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
        associatedPreviewCampaign:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/CampaignFrequency'
          - description: Frequency unit days or months
        runNow:
          description: A flag to start the campaign immediately
          type: boolean
        blacklist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign priority
            enum:
            - high
            - medium
            - low
        creationDate:
          description: Creation date of the campaign configuration
          type: string
        tenantId:
          type: string
        name:
          description: Campaign name
          type: string
        reviewerOverwritten:
          type: boolean
        applications:
          $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    Entitlement:
      description: Rest representation for an entitlement.
      required:
      - entitlementId
      type: object
      properties:
        entitlementId:
          description: Unique id of an entitlement
          type: string
    RundeckOperationResponse:
      type: object
      properties:
        count:
          format: int32
          type: integer
        description:
          type: string
    Activity3:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        remove:
          type: array
          items:
            type: string
    Activity4:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
        folderId:
          type: string
    Activity5:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
    V1SwaggerBulkApi:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operations'
    V1SwaggerUserRiskAnalysis:
      type: object
      properties:
        risks:
          type: array
          items:
            $ref: '#/components/schemas/Risk4'
        processId:
          format: int64
          type: integer
    Activity6:
      type: object
      properties:
        condition:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Activity6'
        name:
          type: string
    Activity1:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        remove:
          type: array
          items:
            type: string
    Activity2:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Activity:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        folderId:
          type: string
    Risk:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Activity6'
        remove:
          type: array
          items:
            type: string
    Mitigation:
      type: object
      properties:
        extraDescription:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        ownerId:
          type: string
    Mitigation1:
      type: object
      properties:
        extraDescription:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        ownerId:
          type: string
    Risk3:
      type: object
      properties:
        likelihood:
          type: string
        level:
          type: string
        trend:
          type: string
        acceptRational:
          type: string
        impact:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ownerId:
          type: string
        tolerance:
          type: string
    Mitigation2:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        processId:
          format: int64
          type: integer
        remove:
          type: array
          items:
            type: string
    Risk4:
      type: object
      properties:
        mitigationIds:
          type: array
          items:
            type: string
        riskId:
          type: string
    V1SwaggerUserRiskPreview:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
    Risk1:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        remove:
          type: array
          items:
            type: string
    Risk2:
      type: object
      properties:
        likelihood:
          type: string
        level:
          type: string
        trend:
          type: string
        acceptRational:
          type: string
        impact:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ownerId:
          type: string
        tolerance:
          type: string
    V1SwaggerUserRiskPreviewBulk:
      type: object
      properties:
        userId:
          type: string
        permissionIds:
          type: array
          items:
            type: string
    Permission:
      type: object
      properties:
        condition:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        name:
          type: string
    Operations:
      type: object
      properties:
        path:
          type: string
        bulkId:
          type: string
        method:
          type: string
        data:
          type: object

---
openapi: 3.0.3
info:
  title: Merged documentation
  version: "1.0"
servers:
- url: https://192.168.252.3:30943
tags:
- name: ACI Management
- name: Access Administration Batch Submit
- name: Access Management
- name: Activity Management
- name: Delegation Management
- name: Entitlement Assignments
- name: Entitlement Management
- name: Form Designer APIs v1.2
- name: ITIM Group Management
- name: Identity Policy Management
- name: LifecycleRule Management
- name: Organizational Management API
- name: Password Management
- name: Password Policy Management
- name: Person Management
- name: Search
- name: Service Management
- name: System User Management
- name: View Management
- name: Certification Campaign assignments v1.0 - Deprecated
- name: Certification Campaign assignments v2.0
- name: Certification Campaign configurations v1.0 - Deprecated
- name: Certification Campaign configurations v2.0
- name: Certification Campaign instances v1.0 - Deprecated
- name: Certification Campaign instances v2.0
- name: Certification Campaign statistics v1.0 - Deprecated
- name: Certification Campaign statistics v2.0
- name: Serviceability v2.0
- name: UI Capabilities v1.0
- name: ARC Statistics APIs
- name: ARC User APIs
- name: Activity Folder APIs
- name: Bulk APIs
- name: Business Activity APIs
- name: Mitigation APIs
- name: Risk APIs
paths:
  /acis/{id}:
    get:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIResponseBean'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    put:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIRequestBean'
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "204":
          description: The changes were accepted.
    delete:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "204":
          description: The request was accepted
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /lifecyclerule/{lifecycleRuleIdentifier}:
    get:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Lookup
      description: Returns information about the specified Lifecycle Rule.
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        description: Unique Identifier for a lifecycleRule.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the LifecycleRule.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=filter,decription"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxudWxsfG51bGw
                    title: Deletion Lifecycle Rule
                _attributes:
                  name: Deletion Lifecycle Rule
                  operation: delete
    put:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Modify
      description: "Modifies information for specified lifecycle Rule. This API modifies\
        \ attributes of lifecycle rule as well as update schedules. If you add new\
        \ schedule and do not wish to remove previously set schedules , then provide\
        \ new schedule along with previous schedules in request body. \r\n\r\n_attributes\
        \ : JSON representation of the lifecycle attributes to be modified. Following\
        \ attributes can be specified. \r\n\r\nname : Can be specified to modify the\
        \ name of the lifecycle rule. \r\n\r\ndescription : Can be specified to modify\
        \ the description of the lifecycle Rule. \r\n\r\nOperationName : Can be specified\
        \ to modify the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter\
        \ : Can be specified to modify the lifecycle rule filter. \r\n\r\nschedules\
        \ : JSON representation of array of lifecycle schedules to be set. It is an\
        \ optional attribute. In each schedule you can specify hour, minute, month,\
        \ day of the week, days of the week, day of the month, quarterly, and semi-annually.\
        \ Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour\
        \ of the schedule. Allowed values are 0-23. To specify hourly schedule set\
        \ hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59.\
        \ \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This\
        \ attribute is exclusive with dayOfWeek. To set the dayOfMonth value other\
        \ than -1(daily), the month value must be set either to specific month or\
        \ -1(monthly). Allowed values are 1-28, if the schedule is set to monthly,\
        \ otherwise the allowed value varies according to the month value. \r\n\r\n\
        month : month of the schedule (-1 if every month). Allowed values are 1-12\
        \ (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the\
        \ schedule (-1 if every day). This attribute is deprecated for weekly schedule.\
        \ This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 =\
        \ Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly\
        \ schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple\
        \ values are specified in pipe-separated format (1|2 = Sunday and Monday).\
        \ Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0\
        \ to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive\
        \ with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter\
        \ is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual\
        \ : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual\
        \ is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n"
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        description: Unique identifier for a LifecycleRule.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyLifecycleRuleRequestBeanSwagger'
      responses:
        "202":
          description: OK
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has an invalid data structure
                  for field " Schedule".
                id: CTGIMZ052
                inserts:
                - ' Schedule'
                key: com.ibm.isim.rest.data.INVALID_DATA_FOR
    delete:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Remove
      description: Remove the specified LifecycleRule.
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has an invalid data structure
                  for field "invalid Identifier".
                id: CTGIMZ052
                inserts:
                - invalid Identifier
                key: com.ibm.isim.rest.data.INVALID_DATA_FOR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{category}/{orgContainerId}:
    get:
      tags:
      - Search
      summary: Organization Container Lookup
      description: Returns information about the specified organizational container.
      parameters:
      - name: category
        in: path
        description: "Specifies the type of organizational container to look up. Valid\
          \ values are - \"admindomains\", \"bporganizations\", \"organizationunits\"\
          , \"locations\", and \"organizations\". The values are case=insensitive."
        required: true
        schema:
          enum:
          - admindomains
          - bporganizations
          - organizationunits
          - locations
          - organizations
          type: string
      - name: orgContainerId
        in: path
        description: Unique Identifier for an organizational container.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: Specifies comma-separated attributes to return for the organizational
          container. The specified attributes are returned in the "_attributes" section
          of the response. Specifying a value of "*" returns all of the attributes.
          By default all the attributes are returned. Example - ?attributes=l
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of an organizational container (eg. ersupervisor). The specified
          attributes are returned in the "_embedded" section of the response. Specifying
          a value of '*' after reference attribute returns all the properties of the
          reference attribute. Example - ?embedded=ersupervisor.cn.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02OTczMDEyMjg3MDkyNTUzMTIwLG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                _embedded:
                  ersupervisor:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2lLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Alan Smith
                    _attributes:
                      cn: Alan Smith
                _attributes:
                  l: Raleigh
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /views/{id}:
    get:
      tags:
      - View Management
      summary: Get View
      description: "Returns details of the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 'OK. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResponseBean'
    put:
      tags:
      - View Management
      summary: Update View
      description: "Update the details of the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRequestBean'
      responses:
        "204":
          description: No Content
    delete:
      tags:
      - View Management
      summary: Delete View
      description: "Delete the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /formtemplates:
    get:
      tags:
      - Form Designer APIs v1.2
      summary: Get Formtemplates
      description: |-
        This API retrieves a list of form templates.

        Note: The form templates are sorted based on erformname.
      parameters:
      - name: ercustomclass
        in: query
        description: "Filters the formTemplates by specified ercustomclass. Note:\
          \ The client is responsible for performing URL encoding if necessary. Example\
          \ - ?ercustomclass=%2Bcn (%2B is UTF-8 encoding for + sign) "
        required: false
        schema:
          type: string
      - name: erformname
        in: query
        description: "Filters the formTemplates by specified erformname. Note: The\
          \ client is responsible for performing URL encoding if necessary. Example\
          \ - ?erformname=%2Bcn (%2B is UTF-8 encoding for + sign) "
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=10
        required: false
        schema:
          type: string
      - name: profileName
        in: query
        description: "Filters the formTemplates by specified profile name. Note: The\
          \ client is responsible for performing URL encoding if necessary. Example\
          \ - ?profileName=%2Bcn (%2B is UTF-8 encoding for + sign)"
        required: false
        schema:
          type: string
          example: Person
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-30 "
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/xml:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
            application/json:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
        "400":
          description: Bad Request
          content:
            application/xml: {}
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/xml: {}
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/xml: {}
            application/json: {}
        "404":
          description: Not Found
          content:
            application/xml: {}
            application/json: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems:
    put:
      tags:
      - Activity Management
      summary: Batch work items modify
      description: Modifies a batch of work items by either approving or rejecting
        the activity request.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: methodOverride
        in: header
        description: 'Specifies the HTTP method override. The value of this parameter
          is - "submit-in-batch". '
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkItemBatchUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entitlements/assignments/search:
    post:
      tags:
      - Entitlement Assignments
      summary: Enttilement Assignments Search
      description: Returns all role assignment attributes that match the specified
        search criteria.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
        required: false
        schema:
          type: integer
        example: 1000
      - name: page
        in: query
        description: Specifies the page to retrieve. Specify 1 for the first page.
        required: false
        schema:
          type: integer
        example: 1
      - name: user
        in: query
        description: Specifies the user for the search. It is the encoded value that
          is returned by the people search API
        required: false
        schema:
          type: string
        example: ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWNvbQ==
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' \"\
          \r\n\t\t\t\t\t+ \"option performs the search without referencing any cache.\
          \ The 'delete-cache' option deletes the cache. \"\r\n\t\t\t\t\t+ \"In this\
          \ case, empty search results are returned"
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAssignmentRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/json:
              example:
                count: 1
                limit: 1000
                resources:
                - code:
                    href: /itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA
                  assignmentAttributes:
                  - values:
                    - 12/16/2022
                    name: enddate
                  - values:
                    - in-person
                    name: method
                  - values:
                    - 08/15/2022
                    name: startdate
                  - values:
                    - chris.miller
                    name: instructors
                  entitlement:
                    href: /itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                    title: Java Programming
                  user:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                    title: John Doe
                  properties:
                    rightsRef: ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  entitlementName: Java Programming
                page: 1
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems/userrecert/{workitemId}:
    put:
      tags:
      - Activity Management
      summary: Work Item Modify for User Re-certification
      description: Modifies a work item by executing an action provided for the activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecertifyWorkItemSwagger'
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/quicksearches:
    get:
      tags:
      - Activity Management
      summary: Activities Quick Search
      description: Returns information about quick searches for activities that are
        sorted by due date.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/activities/quicksearches
                _attributes:
                  requesters:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: James Pearch
                    _attributes:
                      filter: requester;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsbb3JnLGRjPWNvbQ
                  requestees:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Alan Smith
                    _attributes:
                      filter: requestee;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG913U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  subjects:
                  - _links:
                      self:
                        href: /itim/rest/access/2460300160735116790
                        title: GSA
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300160735116790
                  - _links:
                      self:
                        href: /itim/rest/access/2460300385874741343
                        title: East Region Fileshare
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300385874741343
                  - _links:
                      self:
                        href: /itim/rest/access/2460300685064242489
                        title: Intranet
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300685064242489
                  - _links:
                      self:
                        href: /itim/rest/access/2460300534814505620
                        title: Payroll
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300534814505620
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/{personId}:
    get:
      tags:
      - Person Management
      summary: Person Lookup
      description: Returns information about the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique Identifier for a user.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the user.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for reference\
          \ attributes of a user (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section of the response. Specifying a value of '*'\
          \ after reference attribute returns all the properties of the reference\
          \ attribute. Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      - name: forms
        in: query
        description: "Specifies the boolean. If true, then the form is returned for\
          \ the user."
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  manager:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Alan Smith
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  uid: asmith
                  ercustomdisplay: Smith
                  ersupervisor: "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  mail: asmith@ibm.com
                  manager: "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  givenname: Alan
                  erpersonstatus: ACTIVE
                  name: Alan Smith
                  sn: Smith
                  cn: Alan Smith
                  personType: Person
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    put:
      tags:
      - Person Management
      summary: Person Modify
      description: Modifies information for the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique identifier for a user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'suspend' to suspend a person. Example - X-HTTP-Method-Override=suspend\
          \ \n\r\nUse 'restore' to restore a suspended person. Example - X-HTTP-Method-Override=restore\
          \ \n\r\nThe default if this header is not specified is to send a PUT request"
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/PersonSuspendRestoreBeanSwagger'
              - $ref: '#/components/schemas/PersonModifyBeanSwagger'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    delete:
      tags:
      - Person Management
      summary: Person Delete
      description: Deletes the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique identifier for a user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              schema:
                $ref: '#/components/schemas/PersonDeleteResponseBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /apisecurity/v1.0/runtime/entitlements:
    get:
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /passwordpolicy:
    get:
      tags:
      - Password Policy Management
      summary: Search Password Policy
      description: "Returns information about password policies matching the specified\
        \ search criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"erpolicyitemname\"\
        \ of the password policy is returned in the _links.self.title property. \r\
        \n\r\nBy default, no attributes are returned. The client must specify the\
        \ \"attributes\" query parameter to request the attributes to be returned\
        \ in the \"_attributes\" property of each service.\r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ password policy. The specified attributes are returned in the \"_attributes\"\
          \ property of each password policy. Specifying a value of \"*\" returns\
          \ all attributes. Example - ?attributes=rules,erpolicytarget,erenabled"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned service. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Bdescription\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without refererencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDEwMSxvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Default password policy for ITIM service
                _attributes:
                  erenabled: "true"
                  erscope: "2"
                  description: Disallow empty password for ITIM service
              - _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD01MTMxOTMxNDM2MDk5NjA2OTEzLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy
                _attributes:
                  erenabled: "true"
                  erscope: "2"
                  description: abc-desc
    post:
      tags:
      - Password Policy Management
      summary: Password Policy Create
      description: "Creates a new Password Policy with the given attributes. \r\n\r\
        \norgID : The ID of the Organization container in which this Password Policy\
        \ is to be created. This parameter is required. \r\n\r\nrules : JSON representation\
        \ of the Password Policy rules to be set. Below are the attributes than can\
        \ be used. \r\n\r\nminLength(Minimum length) : Minimum length of the password\
        \ to be generated. Numeric values allowed. By default, -1 is set indicating\
        \ that the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length\
        \ of the password to be generated. Numeric values allowed. By default, -1\
        \ is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum\
        \ repeated characters) : Maximum allowed number of sequential characters within\
        \ the password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length)\
        \ : Length of the password history used to check for repeating passwords.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length\
        \ of the password history used to check for repeating passwords spelled backwards.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID\
        \ in password. It is case sensitive. Allowed values are true and false. By\
        \ default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with\
        \ case insensitivity) : Allow or disallow userID in password regardless of\
        \ upper and lower cases. Allowed values are true and false. By default, true\
        \ is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user\
        \ name in password. It is case sensitive. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user\
        \ name with case insensitivity) : Allow or disallow user name in password\
        \ regardless of upper and lower cases. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary)\
        \ : Allow or disallow the use of passwords defined in password dictionary.\
        \ Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters\
        \ not allowed) : Characters which are not to be used within the password.\
        \ \r\n\r\nrequiredChars(Required characters) : Characters one of which which\
        \ must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters)\
        \ : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts\
        \ with characters) : Characters one of which must be the first character set\
        \ of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique\
        \ characters) : Minimum required number of distinct characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic\
        \ characters) : Minimum required number of alphabetic characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters)\
        \ : Minimum required number of numeric characters within the password. Numeric\
        \ values allowed. By default, -1 is set indicating that the rule is disabled.\
        \ \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password\
        \ complexity rule. Allowed value are true and false. By default, false is\
        \ set. \r\n\r\ncustomRules : JSON representation of custom password rules\
        \ to be enforced for the policy. The key contains the full qualified name\
        \ of the rule class as specified in passwordrules.properties. For example,\
        \ if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule,\
        \ then the key here will be examples.passwordrules.RegularExpressionRule.\
        \ The value parameter can contain boolean value or any other value as per\
        \ the property value of the rule in passwordrules.properties. For example,\
        \ if the value is set to false in the passwordrules.properties, then the user\
        \ can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\"\
        : \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy\
        \ targets to be set for the password policy. Allowed values for constant are\
        \ ALL_SERVICE(the policy will be applicable for all services in the system.\
        \ In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the\
        \ policy will be applicable for a specific service which is specified by the\
        \ service URI) and SERVICE_TYPE(the policy will be applicable for a specific\
        \ service type which is specified by the service profile name e.g WinLocalProfile).\
        \ Please note, for SERVICE_TYPE, only service profiles other than ITIM service,\
        \ hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE\
        \ must belong to the same org container for which the policy is being created.\
        \ \r\n\r\n_attributes : JSON representation of the Password Policy attributes\
        \ to be set. Below are the attributes than can be used. \r\n\r\nerpolicyitemname\
        \ : Name of the password policy. It is a mandatory parameter. \r\n\r\nerscope\
        \ : Scope of the password policy. Allowed value are 2(this business unit and\
        \ sub units) and 1(this business unit only). It is a mandatory parameter.\
        \ \r\n\r\nerenabled : Specifies whether the password policy will be enabled\
        \ or disabled as soon as the policy is created. Allowed values are true and\
        \ false. It is a mandatory parameter. \r\n\r\ndescription : Description of\
        \ the password policy. It is an optional parameter. \r\n\r\nerlabel : Specifies\
        \ a caption for the password policy. It is an optional parameter. \r\n\r\n\
        erkeywords : Specifies keywords for the password policy. It is an optional\
        \ parameter. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePasswordPolicyRequestBeanSwagger'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD02MzI4NTE2NjQyMTU3MTQzOTIwLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy new
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Organization
                _attributes:
                  erenabled: "true"
                  erglobalid: "6328516642157143920"
                  erscope: "1"
                  erkeywords: Policy new
                  description: test new
                  rules:
                    allowUserIDCaseInsensitive: true
                    minDistinctCharacters: -1
                    reversedHistoryLength: -1
                    minLength: 5
                    repeatedHistoryLength: -1
                    allowInDictionary: true
                    maxValidityPeriod: -1
                    passwordComplexity: false
                    allowUserName: true
                    customRules:
                      examples.passwordrules.RegularExpressionRule: "true"
                    maxSequentialCharacters: -1
                    allowUserNameCaseInsensitive: true
                    minAlphabeticCharacters: 3
                    allowUserID: true
                    invalidChars: ""
                    requiredChars: ""
                    restrictedToChars: ""
                    minValidityPeriod: -1
                    minDigitCharacters: -1
                    maxLength: 13
                    startsWithChars: ""
                  erpolicytarget:
                  - SPECIFIC_TYPE; WinLocalProfile
                  - SPECIFIC_SERVICE; ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                  objectclass:
                  - top
                  - erPasswordPolicy
                  - erManagedItem
                  - erPolicyBase
                  - erPolicyItemBase
                  erpolicyitemname: REST password-Policy new
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/cancel/{requestId}:
    post:
      tags:
      - Search
      summary: Request to Cancel
      description: Request to cancel that is in pending status.
      parameters:
      - name: requestId
        in: path
        description: Unique Identifier for a request.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /tasks/me/{category}:
    get:
      tags:
      - Search
      summary: Task Search
      description: Returns a list of tasks that can be performed by the currently
        logged in user.
      parameters:
      - name: category
        in: path
        description: "Identifies the application that is currently being accessed\
          \ by user. Valid values are console, selfservice, and servicecenter."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _id: SVCENTER_CHANGE_PASSWORD
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_CHANGE_PASSWORD_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_DELEGATION_SCHEDULE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_ACTIVITY
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_OTHERS_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_OTHERS_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_PROFILE_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_REQUEST_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_REQUEST_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_PROFILE_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_REQUEST_STATUS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_TODO_LIST
                _attributes:
                  isCustom: false
                  category: servicecenter
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /passwordpolicy/{passwordPolicyId}:
    get:
      tags:
      - Password Policy Management
      summary: Password Policy Lookup
      description: Returns information about the specified password policy.
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique Identifier for the password policy.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the password\
          \ policy. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" will return all of the attributes.\
          \ By default all the attributes are returned. Example - ?attributes=erpolicytarget,description,rules"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD00MDQ2MDQwOTE4NDI0MDQ3MTAxLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy new
                _attributes:
                  description: Trial password policy
                  rules:
                    allowUserIDCaseInsensitive: true
                    minDistinctCharacters: -1
                    reversedHistoryLength: -1
                    minLength: 5
                    repeatedHistoryLength: -1
                    allowInDictionary: true
                    maxValidityPeriod: -1
                    passwordComplexity: false
                    allowUserName: false
                    customRules:
                      examples.passwordrules.RegularExpressionRule: qqq
                    maxSequentialCharacters: -1
                    allowUserNameCaseInsensitive: true
                    minAlphabeticCharacters: 3
                    allowUserID: true
                    invalidChars: ""
                    requiredChars: ""
                    restrictedToChars: ""
                    minValidityPeriod: -1
                    minDigitCharacters: -1
                    maxLength: 13
                    startsWithChars: ""
    put:
      tags:
      - Password Policy Management
      summary: Password Policy Modify
      description: "Modifies a Password Policy with the given attributes. Please note,\
        \ at least one of rules, policyTargets or _attributes will need to be specified.\
        \ \r\n\r\nrules : JSON representation of the Password Policy rules to be set.\
        \ Below are the attributes than can be used. This is an optional parameter.\
        \ \r\n\r\nNote : In order to disable an existing rule, the rule name will\
        \ need to be specified with it's default value e.g \"minLength\" : \"-1\"\
        \ \r\n\r\nminLength(Minimum length) : Minimum length of the password to be\
        \ generated. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length\
        \ of the password to be generated. Numeric values allowed. By default, -1\
        \ is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum\
        \ Repeated Characters) : Maximum allowed number of sequential characters within\
        \ the password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length)\
        \ : Length of the password history used to check for repeating passwords.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length\
        \ of the password history used to check for repeating passwords spelled backwards.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID\
        \ in password. It is case sensitive. Allowed values are true and false. By\
        \ default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with\
        \ case insensitivity) : Allow or disallow userID in password regardless of\
        \ upper and lower cases. Allowed values are true and false. By default, true\
        \ is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user\
        \ name in password. It is case sensitive. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user\
        \ name with case insensitivity) : Allow or disallow user name in password\
        \ regardless of upper and lower cases. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary)\
        \ : Allow or disallow the use of passwords defined in password dictionary.\
        \ Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters\
        \ not allowed) : Characters which are not to be used within the password.\
        \ \r\n\r\nrequiredChars(Required characters) : Characters one of which which\
        \ must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters)\
        \ : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts\
        \ with characters) : Characters one of which must be the first character set\
        \ of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique\
        \ characters) : Minimum required number of distinct characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic\
        \ characters) : Minimum required number of alphabetic characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters)\
        \ : Minimum required number of numeric characters within the password. Numeric\
        \ values allowed. By default, -1 is set indicating that the rule is disabled.\
        \ \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password\
        \ complexity rule. Allowed value are true and false. By default, false is\
        \ set. \r\n\r\ncustomRules : JSON representation of custom password rules\
        \ to be enforced for the policy. The key contains the full qualified name\
        \ of the rule class as specified in passwordrules.properties. For example,\
        \ if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule,\
        \ then the key here will be examples.passwordrules.RegularExpressionRule.\
        \ The value parameter can contain boolean value or any other value as per\
        \ the property value of the rule in passwordrules.properties. For example,\
        \ if the value is set to false in the passwordrules.properties, then the user\
        \ can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\"\
        : \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy\
        \ targets to be set for the password policy. This is an optional parameter.\
        \ Assigning new values will remove all existing policy targets. In order to\
        \ retain previous targets, those targets need to be specified. Allowed values\
        \ for constant are ALL_SERVICE(the policy will be applicable for all services\
        \ in the system. In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the\
        \ policy will be applicable for a specific service which is specified by the\
        \ service URI) and SERVICE_TYPE(the policy will be applicable for a specific\
        \ service type which is specified by the service profile name e.g WinLocalProfile).\
        \ Please note, for SERVICE_TYPE, only service profiles other than ITIM service,\
        \ hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE\
        \ must belong to the same org container for which the policy is being created.\
        \ \r\n\r\n_attributes : JSON representation of the Password Policy attributes\
        \ to be set. This is an optional parameter. Below are the attributes than\
        \ can be used. \r\n\r\nerpolicyitemname : Name of the password policy. If\
        \ this parameter is specified, then a value must be entered. \r\n\r\nerscope\
        \ : Scope of the password policy. Allowed value are 2(this business unit and\
        \ sub units) and 1(this business unit only). If this parameter is specified,\
        \ then a value must be entered. \r\n\r\nerenabled : Specifies whether the\
        \ password policy will be enabled or disabled as soon as the policy is created.\
        \ Allowed values are true and false. If this parameter is specified, then\
        \ a value must be entered. \r\n\r\ndescription : Description of the password\
        \ policy. It is an optional parameter. \r\n\r\nerlabel : Specifies a caption\
        \ for the password policy. It is an optional parameter. \r\n\r\nerkeywords\
        \ : Specifies keywords for the password policy. It is an optional parameter.\
        \ \r\n"
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique identifier for the password policy to be modified.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPasswordPolicyRequestBeanSwagger'
      responses:
        "202":
          description: OK. The request was successful
    delete:
      tags:
      - Password Policy Management
      summary: Password Policy Delete
      description: Removes the specified password policy.
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique identifier for the password policy to be deleted.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}:
    get:
      tags:
      - System User Management
      summary: System User lookup
      description: Returns information about the specified Identity Governance system
        account.
      parameters:
      - name: systemUserId
        in: path
        description: A unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return the system\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. If the excludeAttributeFromResponse property in the rest.properties\
          \ is set to some attribute value, that attribute is excluded from the response\
          \ though it is specified in the attribute list. Specifying a value \"*\"\
          \ returns all of attributes except those that are specified in the excludeAttributeFromResponse\
          \ property. By default, all attributes other than those that are specified\
          \ in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid,eraccountstatus"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return a reference\
          \ attribute of the system user. For example, owner. The specified attributes\
          \ are returned in the \"_embedded\" section of the response. Specifying\
          \ a value \"*\" after a reference attribute returns all properties of the\
          \ reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNTM1NzA0Mjg2MzMyMTI1MTk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: asmith
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                  tasks:
                  - href: /itim/rest/tasks/me/servicecenter
                    title: servicecenter
                  - href: /itim/rest/tasks/me/selfservice
                    title: selfservice
                _attributes:
                  owner: "erglobalid=25357042863321251,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountcompliance: "1"
                  eruid: asmith
                  eraccountownershiptype: Individual
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/assignments:
    get:
      tags:
      - Search
      summary: Access Assignment Search
      description: "Returns all Access Assignments for the specified requestee. \n\
        If Header parameter Access-Categories-List is specified , the complete list\
        \ of access categories associated with the user assignments are returned."
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ access item. Specifying * returns all attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation,roleAssignmentAttributeValues"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) for sorting the \"\r\n\t\t\t\t\t+ \"returned list\
          \ of accesses. ?sort=%2BaccessName, ?sort=%2BaccessCategory, Example - ?sort=%2Ddescription\"\
          \r\n\t\t\t\t\t+ \"(%2B and %2D is UTF-8 encoding for + and - sign respectively)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the\
          \ client that specify the same search criteria are satisfied via the cache.\
          \ The 'no-cache' \"\r\n\t\t\t\t\t+ \"option specifies performs the search\
          \ without referencing any cache. The 'delete-cache' option deletes the \"\
          \r\n\t\t\t\t\t+ \"cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Permission-List
        in: header
        description: "Specifies whether the API returns the list of actions that can\
          \ be performed on the returned assignments. By default, the permissions\
          \ list is not returned. Example - Permission-List=get-permissions "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  account:
                    _links:
                      self:
                        href: /itim/rest/accounts/ZXJnbG9iYWxpZD00NjkzMTIzMjc1NjA3ODQ3MjU2LG91PTAsb3U9YWNjb3VudHMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: asmith7
                    _attributes:
                      eraccountcompliance: "1"
                      eruid: asmith7
                      eraccountstatus: "0"
                _links:
                  access:
                    href: /itim/rest/access/4693112079467885909
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: ausintranet(asmith7)
                _attributes:
                  badges: []
                  accessName: ausintranet
                  entityType: 2
                  description: Austin intranet
                  status: FULFILLED
                  tags: []
              - _links:
                  access:
                    href: /itim/rest/access/4693112079467885909
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Manager
                _attributes:
                  badges: []
                  roleAssignmentAttributes:
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: StartDate
                      assignmentAttributeLabel: StartDate
                      assignmentAttributeValue:
                        values:
                        - 12/21/2020
                        name: startdate
                      definedRoleName: Manager
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: EndDate
                      assignmentAttributeLabel: EndDate
                      assignmentAttributeValue:
                        values:
                        - 10/21/2020
                        name: enddate
                      definedRoleName: Manager
                  accessName: Manager
                  entityType: 3
                  description: Allows end user a manager role.
                  accessCategory: Application
                  status: FULFILLED
                  tags: []
                  isEditRoleAssignmnetAttributeAllowedForPerson: true
                  isViewRoleAssignmnetAttributeAllowedForPerson: true
    post:
      tags:
      - Access Administration Batch Submit
      summary: Access Assignment Batch Requests
      description: "\r\n[Access Assignment Batch Addition](/itim/swaggerdoc/Access_Assignment_Batch_Addition.html)\
        \ - Add access assignments in a batch. \n\r\n[Access Assignment Batch Deletion](/itim/swaggerdoc/Access_Assignment_Batch_Deletion.html)\
        \ - Delete access assignments in a batch. \n\r\n[Access Assignment Batch Modify](/itim/swaggerdoc/Access_Assignment_Batch_Modify.html)\
        \ - Modify access assignments in a batch. \n\r\n[Access Assignment Batch Validation](/itim/swaggerdoc/Access_Assignment_Batch_Validation.html)\
        \ - Validate access assignments in a batch. \n\r\n[Access Assignment Batch\
        \ Check Compliance](/itim/swaggerdoc/Access_Assignment_Batch_Check_Compliance.html)\
        \ - Check the compliance of access assignments in a batch. \r\n\r\nClick link\
        \ to see more details for each request\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pasns the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'check-compliance' to check a batch of access assignments\
          \ for compliance. Example - X-HTTP-Method-Override=check-compliance \n\r\
          \nUse 'validate-full' to validate access assignments in a batch. Example\
          \ - X-HTTP-Method-Override=validate-full \n\r\nUse 'submit-in-batch' to\
          \ submit access assignments for addition, deletion and modification in a\
          \ batch. Example - X-HTTP-Method-Override=submit-in-batch"
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAssignCheckComplianceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
        "202":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/me:
    get:
      tags:
      - System User Management
      summary: Current System User Lookup
      description: Returns information about a user who is logged in to the Identity
        Governance system account.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return the current\
          \ Identity Governance account. The specified attributes are returned in\
          \ the \"_attributes\" section of the response. If the excludeAttributeFromResponse\
          \ property in the rest.properties is set to some attribute value, that attribute\
          \ is excluded from the response though it is specified in the attribute\
          \ list. Specifying a value \"*\" returns all of attributes except those\
          \ that are specified in the excludeAttributeFromResponse property. By default,\
          \ all attributes other than those that are specified in excludeAttributeFromResponse\
          \ property are returned. Example - ?attributes=eruid,eraccountstatus"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return a reference\
          \ attribute of the system user. For example, owner. The specified attributes\
          \ are returned in the \"_embedded\" section of the response. Specifying\
          \ a value \"*\" after a reference attribute returns all properties of the\
          \ reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          headers:
            CSRFToken:
              description: "To prevent cross-site request forgery (CSRF) attacks,\
                \ a user must pass the valid CSRF token in the request header. When\
                \ a new PUT, POST, or DELETE request is created, the request header\
                \ must contain CSRF token that is received to the authorized user."
              style: simple
              schema:
                type: string
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: ITIM Manager
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                  tasks:
                  - href: /itim/rest/tasks/me/console
                    title: console
                  - href: /itim/rest/tasks/me/servicecenter
                    title: servicecenter
                  - href: /itim/rest/tasks/me/selfservice
                    title: selfservice
                _attributes:
                  owner: "erglobalid=00000000000000000007,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=00000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountcompliance: "1"
                  erobjecttype: "1"
                  eruid: ITIM Manager
                  erroles: "erglobalid=00000000000000000003,ou=sysRoles,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles/{systemRoleId}:
    get:
      tags:
      - Search
      summary: System Role (ITIM Group) Lookup
      description: Returns information about the specified system role (ITIM Group).
      parameters:
      - name: systemRoleId
        in: path
        description: Unique Identifier for system role (ITIM Group).
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma- separated attributes to return for the system\
          \ role. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default all the attributes are returned. Example - ?attributes=errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for the reference
          attributes of system role (eg. erparent). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erparent.*
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA2MixvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Auditor
                _embedded:
                  erparent:
                    _links:
                      self:
                        href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: JKEnterprise
                    _attributes:
                      erorgstatus: "0"
                      description: J K Enterprise
                      o: JKEnterprise
                _attributes:
                  errolename: Auditor
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/constraints:
    get:
      tags:
      - System User Management
      summary: System User Contraints Lookup
      description: "Returns the constraints for the specified system user \r\n\nThe\
        \ \"passwordRules\" property is an array listing of each rule for the password.\
        \ \r\n\nIf there are no password rules, an empty array is returned."
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated constraints toe return for the
          specified link. The specified constraints are returned in the "_embedded"
          property of the constraint object. Example - ?embedded=passwordConstraints
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  passwordConstraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints/password
                    title: Password Constraints
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints
                    title: Constraints
                  systemuser:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: criegle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/{accessId}:
    get:
      tags:
      - Access Management
      summary: Access Lookup
      description: Returns information about the specified access.
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for an access\
          \ item. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. Example.\
          \ ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconAccessRoleAccess.gif
                  self:
                    href: /itim/rest/access/6892757478197795306
                    title: FTP Server
                  owners:
                    href: /itim/rest/access/6892757478197795306/owners
                _attributes:
                  badges:
                  - style: red
                    designation: Critical
                  - style: green
                    designation: JK Enterprise
                  accessName: FTP Server
                  entityType: 1
                  entityProfile: PosixLinuxProfile
                  accessCategory: Application
                  isCommon: true
                  description: FTP Server
    put:
      tags:
      - Access Management
      summary: Modify Access
      description: "\r\nModifies access information for the entity \r\n\r\n Required\
        \ attributes\r\nenableAccess - Value should be true if access needs to be\
        \ enabled otherwise false if access needs to be disabled \r\n\r\nentityType\
        \ - Value should be 3 as currently this API only supports creating access\
        \ for the role \r\n\r\nProvide list attributes(if any) that needs to be updated\
        \ e.g. badges, tags, additionalInformation, accessName, accessCategory, description,\
        \ isCommon, icon\r\n"
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAccessBean'
      responses:
        "204":
          description: No Content
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entitlements/assignments/{assignmentId}:
    get:
      tags:
      - Entitlement Assignments
      summary: Assignment Lookup
      description: Returns assignment details of a specified assignment ID.
      parameters:
      - name: assignmentId
        in: path
        description: Specifies the assignment ID for a lookup. It is the encoded value
          that is returned by the /assignments/search API
        required: true
        schema:
          type: string
        example: MTk5OTczMzYyNDk0Mjk2NDcxNw
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/json:
              example:
                code:
                  href: /itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA
                assignmentAttributes:
                - values:
                  - 12/16/2022
                  name: enddate
                - values:
                  - in-person
                  name: method
                - values:
                  - 08/15/2022
                  name: startdate
                - values:
                  - chris.miller
                  name: instructors
                entitlement:
                  href: /itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  title: Java Programming
                user:
                  href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  title: John Doe
                properties:
                  rightsRef: ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                entitlementName: Java Programming
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /serviceprofiles:
    get:
      summary: Get All
      description: Get details of all installed service types
      parameters:
      - name: limit
        in: query
        description: enter a limit for search
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: "Returns serviceProfiles whose names contain the string specified\
          \ in the filter. Example: name=WinLocalProfile"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-30 "
        schema:
          type: string
      responses:
        "200":
          description: Fetched all details
        "404":
          description: Not Found. A general failure occurred while searching through
            the repository.
    post:
      summary: Add ServiceProfile
      description: Upload a Service profile jar
      parameters:
      - name: uuid
        in: query
        description: The product uuid to be used while adding serviceProfile
        required: false
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: choose ServiceProfile jar
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartBodyBean'
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/me:
    get:
      tags:
      - Person Management
      summary: Current Person Lookup
      description: Returns the information about the currently logged in user.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the current\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. Example\
          \ - ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for a reference\
          \ attribute of a user (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section of the response. Specifying a value of '*'\
          \ after reference attribute returns all properties of the reference attribute.\
          \ Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JjPWNvbQ
                    title: Alan Smith
                _embedded:
                  manager:
                    _links:
                      self:
                        href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Chuck Riegle
                    _attributes:
                      name: Chuck Riegle
                _attributes:
                  uid: asmith
                  telephonenumber: 919-224-1234
                  givenname: Alan
                  erpersonstatus: ACTIVE
                  name: Alan Smith
                  mobile: 919-123-4567
                  cn: Alan Smith
                  sn: Smith
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/bulk:
    post:
      tags:
      - Access Management
      summary: performAccessBulkOperation
      description: "\r\n\r\nEnable/ Disable access for Role Entities \r\n\r\n Required\
        \ attributes: \r\n\r\nenableAccess - Value should be true or false depending\
        \ on whether access is to be enabled or disabled \r\n\r\nentityRef - Value\
        \ should be uuid of the role for which access needs to be created. \r\n\r\n\
        accessCategory - Is considered only when enableAccess is true\r\n\r\nIn case\
        \ of providing accessSubtype value for accessCategory hierarchy of accessType\
        \ should be provided \r\n\r\ne.g. If Application has subtype ApplicationSubtype\
        \ and ApplicationSubtype has subtype ApplicationSubtypeChild\r\n\r\nthen to\
        \ add ApplicationSubtypeChild as accessCategory value should be provided as\
        \ Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\nNote: commonAccess\
        \ attribute considered only when enableAccess is true and is only applicable\
        \ for static roles not for dynamic roles. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAccessRequestBean'
      responses:
        "200":
          description: Success
        "207":
          description: "There was a problem with one or more entities in the list,\
            \ error details will be available in the response"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - result: "true"
                operation: update access of the role
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /roles/orgroles:
    get:
      tags:
      - Search
      summary: Organizational Role Search
      description: "Returns information about the organizational role that matches\
        \ the specified search criteria. \nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes to be returned in the \"_attributes\" property of each static\
        \ role. \nA requested attribute is not returned if the client does not have\
        \ permission to retrieve the attribute or if the value of the attribute is\
        \ null. \nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \n"
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for each static
          role. The specified attributes are returned in the "_attributes" property
          of each static role. Specifying a value of "*" returns all attributes. Example-
          ?attributes=errolename
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned static role. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example- ?sort=%2Berrolename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: type
        in: query
        description: Specifies the type of role to search for. Example. ?type=static
        schema:
          default: static
          enum:
          - static
          - dynamic
          - all
      - name: Cache-Control
        in: header
        description: "Specifies the caching options. By default, search results are\
          \ cached for each client so that subsequent requests by the client that\
          \ specify the same search criteria are satisfied via the cache. The 'no-cache'\
          \ option performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example- Cache-Control=no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example- items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: terminator Role
                _attributes:
                  errolename: terminator Role
              - _links:
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: supervisor Role
                _attributes:
                  errolename: supervisor Role
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /serviceprofiles/{uuid}:
    get:
      summary: Get by uuid
      description: Get details of a service profile
      parameters:
      - name: uuid
        in: path
        description: enter a uuid for search
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      summary: Update ServiceProfile
      description: "Upload a Service profile jar Note: The customer is responsible\
        \ for providing the correct UUID and the appropriate profile JAR file to be\
        \ updated"
      parameters:
      - name: uuid
        in: path
        description: The product uuid to be used while adding serviceProfile
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: choose ServiceProfile jar
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartBodyBean'
      responses:
        "200":
          description: OK
    delete:
      summary: delete a service profile
      description: Deletes a service profile when a valid uuid is provided.
      parameters:
      - name: uuid
        in: path
        description: The product uuid to delete for
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
        "204":
          description: No Content. Deleted the service Profile.
        "404":
          description: Not Found. A general failure occurred while searching through
            the repository.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/{personId}/accounts:
    get:
      tags:
      - Person Management
      summary: Person Account search
      description: Returns the accounts of a specified user.
      parameters:
      - name: personId
        in: path
        description: The person ID to retrieve accounts for.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the account.\
          \ The specified attributes are returned in the \"_attributes\" section.\
          \ Specifying a value of \"*\" returns all attributes. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of the accounts (eg. erservice). The specified attributes are
          returned in the "_embedded" section of the response. Specifying a value
          of '*' after reference attribute returns all the properties of the reference
          attribute. Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which the returned people are sorted. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  erservice:
                    _links:
                      statusDetails:
                        href: /itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20/statusdetails
                        title: statusDetails
                      self:
                        href: /itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                        title: ITIM Service
                    _attributes:
                      erservicename: ITIM Service
                _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: asmith
                _attributes:
                  eruid: asmith
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/configuration:
    get:
      tags:
      - Password Management
      summary: Password Configuration
      description: Return the Password configuration for Identity Governance.
      parameters:
      - name: attributes
        in: query
        description: Specifies if the password synch property is returned. Example
          - ?attributes=isSynchPassword
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/password/configuration
                    title: Challenge response configuration resource
                _attributes:
                  responseMinLength: -1
                  isSSOEnabled: false
                  challengeNumberRequired: 1
                  challengeResponseEnabled: true
                  responseMatchQuestion: false
                  responseDisallowUserID: false
                  isChallengeUserDefined: true
                  responseUniqueAnswer: false
                  isSynchPassword: true
                  isChallengeResponseEnforced: false
                  responseNumberConfigured: 1
                  applicationURL: /itim/self/Login/ChallengeResponse.do
                  responseMaxRepeatChar: -1
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/count:
    get:
      tags:
      - Activity Management
      summary: Pending Count of Activities For Current User
      description: Returns the count of pending requests for a user.
      parameters:
      - name: status
        in: query
        description: "Specifies the status of activities whose count is to be returned.\
          \ Currently, only the status PENDING is supported."
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                count: 30
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/assignments/{assignmentId}:
    delete:
      tags:
      - Access Management
      summary: Access Assignment Delete
      description: Deletes the specified access assignment.
      parameters:
      - name: assignmentId
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAssignmentSingleRequestBean'
      responses:
        "202":
          description: "Accepted. The request was accepted for processing, but the\
            \ processing is not complete."
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  result:
                    href: /itim/rest/requests/7655357092010861510
                requestID: "7655357092010861510"
                results:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    assingment:
                      href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVv
                  status: SUCCESS
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    accesses: []
                  status: SUCCESS
                overallStatus: SUBMITTED
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                results:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    assingment:
                      href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAs
                  messages:
                  - text: com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID
                    key: com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID
                  status: ERROR
                overallStatus: ERROR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse:
    get:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup For Current User
      description: Returns the list of forgotten password questions configured for
        the currently logged in user.
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
                challengeResponses:
                - response: SHA-256:Y2hrdGMzOXBiOTN1:PdLrmAtsfC0u0zluEZ0u6lV0Ev0FmnY2cyuGmYKw/aw=
                  challenge: What is the name of your first company?
                - response: SHA-256:bnhqaXIwaDMxNWl6:TjBvQJnvo4BD3JGPTsGRtwvtIIBjsg/Zmthrdxf4mmM=
                  challenge: What is your favorite color?
                - response: SHA-256:a2I0dm9rOTI5MTI1:oCepu5gwY8YzcLhGJLnGck7XGhsNyJ8nIKIg5onXVEI=
                  challenge: How many siblings do you have?
    put:
      tags:
      - Password Management
      summary: Forgotten Password Challenge Response Question Update
      description: "Specifies that the currently logged in user can update the forgotten\
        \ password questions and answers. Users can modify the response for an existing\
        \ challenge or create a new challenge response. \r\nNote : The 'password'\
        \ attribute of the request payload must contain the Identity Manager System\
        \ account password of the current user."
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger'
      responses:
        "200":
          description: Challenge response questions are submitted successfully.
          content:
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
        "400":
          description: "Bad Request. This might happen if challenges are empty, a\
            \ response is not provided for a challenge, the password is invalid, and\
            \ et cetera."
          content:
            application/json:
              example:
                severity: E
                text: CTGIMH066E The value entered for Identity Governance Password
                  field is not correct. Enter the correct password.
                id: CTGIMH066
                key: com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD
    post:
      tags:
      - Password Management
      summary: Forgotten Password Challenge Response Question Submit
      description: Specifies that the currently logged in user can create forgotten
        passwordquestions and answers. The 'password' attribute of the request payload
        mustcontain the Identity Governance System account password of the current
        user.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger'
      responses:
        "201":
          description: Challenge response questions are submitted successfully.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
        "400":
          description: "Bad Request. This might happen if challenges are empty, a\
            \ response is not provided for a challenge, password is invalid, and et\
            \ cetera."
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMH066E The value entered for Identity Governance Password
                  field is not correct. Enter the correct password.
                id: CTGIMH066
                key: com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/bpperson:
    get:
      tags:
      - Person Management
      summary: People Search for Business Partner Person
      description: "Returns information for the specified user that belongs to a Business\
        \ Partner Person category. \r\n\r\nThe \"name\" of the user is returned in\
        \ the _links.self.title property. \r\n\r\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes that are returned in the \"_attributes\" property of each user.\
        \ \r\n\r\nA requested attribute is not returned if the client does not have\
        \ permission to retrieve the attribute or if the value of the attribute is\
        \ null. \r\n\r\nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ iser. The specified attributes are returned in the \"_attributes\" property\
          \ of each person. Specifying a value of \"*\" returns all attributes. Example\
          \ - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma separated attributes to return for a reference
          attribute of a user (eg. manager). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=manager.cn
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that should be returned
          by the search. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned result. Note: The client is responsible\
          \ for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is\
          \ UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options . By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Mark Stevens
                _attributes:
                  sn: Stevens
                  cn: Mark Stevens
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: James Parch
                _attributes:
                  sn: Parch
                  cn: James Parch
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entities:
    get:
      tags:
      - Search
      summary: Widget Filter Search
      description: "Returns the search results that are based on the filter configured\
        \ for a widget . This API is used with the form template REST API. Identity\
        \ Governance forms consist of some widgets that contain an LDAP search filter\
        \ that is configured by System Administrator. \r\n\nThis configured search\
        \ filter is returned by \"form tempalate\" REST API in an encrypted format.\
        \ The LDAP search API decrypts this filter and returns the search result.\
        \ \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the attribute that must be returned as part of search.\
          \ Only one attribute can be specified. If you specify a comma-separated\
          \ list of attributes, then no attributes are returned. Example - ?attributes=cn"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to be returned. Note : The range\
          \ uses a zero-based index. Example - items=0-99 "
        schema:
          type: string
      - name: com.ibm.isim.rest.accesstoken
        in: header
        description: This mandatory header parameter contains the encrypted filter
          on which search is executed. This token is generated by the "form template"
          REST API.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _id: ZXJnbG9iYWxpZD0yNDk5MjUzNTY5NjU4OTcxMTg1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Alan Smith
              - _id: ZXJnbG9iYWxpZD0yNDk5MjUzNTc0NjU3MTkyNzM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Chuck Riegle
              - _id: ZXJnbG9iYWxpZD0yNDk5MjU0NjU2NjczNDE2OTMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Dan Gosling
              - _id: ZXJnbG9iYWxpZD0yNDk5MjU0OTg3MjMzOTU0NjEyLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Danny Guthrie
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /identitypolicy:
    get:
      tags:
      - Search
      summary: Search All Identity Policies
      description: Returns list of all the Identity Policies.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ identity policy. By default, no attributes are returned. The client must\
          \ specify the \"attributes\" query parameter to request the attributes to\
          \ be returned in the \"_attributes\" property of each identity policy. A\
          \ requested attribute is returned if the client does not have permission\
          \ to retrieve the attribute or if the value of the attribute is null. Specifying\
          \ a value of \"*\" will return all of the attributes. Example. ?attributes=l"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Berpolicyitemname\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ
                    title: Default identity policy for ITIM (Person)
                _attributes:
                  eruserclass: Person
                  erenabled: "true"
                  erglobalid: "00000000000000000006"
                  erkeywords: Person
                  erscope: "2"
                  description: Default identity policy for all services and for Person
                    class.
                  erlabel: ITIM's default identity policy (Person)
                  erjavascript: "function createIdentity() { \n var EXISTING_CASE=0;\
                    \ \n var UPPER_CASE=1; \n var LOWER_CASE=2; \n var tf = false;\
                    \ \n var identity = \"\"; \n var baseidentity = \"\"; \n var counter\
                    \ = 0; \n var locale = subject.getProperty(\"erlocale\"); \n var\
                    \ fAttrKey = \"uid\"; \n var sAttrKey = \"\"; \n var idx1 = 0;\
                    \ \n var idx2 = 0; \n var fCase = 2; \n var sCase = 2; \n if ((locale\
                    \ != null) && (locale.length > 0)) { \n locale = locale[0]; \n\
                    \ }\n if (locale == null || locale.length == 0)\n locale = \"\"\
                    ; \n var firstAttribute = \"\"; \n var secondAttribute = \"\"\
                    ; \n if (((fAttrKey != null) && (fAttrKey.length > 0)) || ((sAttrkey\
                    \ != null) && (sAttrkey.length > 0))) {\n if ((fAttrKey != null)\
                    \ && (fAttrKey.length > 0)) { \n firstAttribute = subject.getProperty(fAttrKey);\
                    \ \n if (((firstAttribute != null) && (firstAttribute.length >\
                    \ 0))) \n firstAttribute = firstAttribute[0]; \n if (firstAttribute\
                    \ == null || firstAttribute.length == 0) \n firstAttribute = \"\
                    \"; \n else { \n firstAttribute=IdentityPolicy.resolveAttribute(fAttrKey,firstAttribute);\
                    \ \n if ((idx1>firstAttribute.length) || (idx1==0)) \n idx1=firstAttribute.length;\
                    \ \n firstAttribute = firstAttribute.substring(0,idx1); \n } \n\
                    \ if (fCase == UPPER_CASE) \n firstAttribute = firstAttribute.toUpperCase(locale);\
                    \ \n else if (fCase == LOWER_CASE) \n firstAttribute = firstAttribute.toLowerCase(locale);\
                    \ \n } \n if ((sAttrKey != null) && (sAttrKey.length > 0)) { \n\
                    \ secondAttribute = subject.getProperty(sAttrKey); \n if (((secondAttribute\
                    \ != null) && (secondAttribute.length > 0))) \n secondAttribute\
                    \ = secondAttribute[0]; \n if (secondAttribute == null || secondAttribute.length\
                    \ == 0) \n secondAttribute = \"\"; \n else { \n secondAttribute=IdentityPolicy.resolveAttribute(sAttrKey,secondAttribute);\
                    \ \n if ((idx2>secondAttribute.length) || (idx2==0)) \n idx2=secondAttribute.length;\
                    \ \n secondAttribute = secondAttribute.substring(0,idx2); \n }\
                    \ \n if (sCase == UPPER_CASE) \n secondAttribute = secondAttribute.toUpperCase(locale);\
                    \ \n else if (sCase == LOWER_CASE) \n secondAttribute = secondAttribute.toLowerCase(locale);\
                    \ \n } \n baseidentity = firstAttribute + secondAttribute; \n\
                    \ } \n if ((baseidentity == null) || (baseidentity.length == 0))\
                    \ { \n var givenname = subject.getProperty(\"givenname\"); \n\
                    \ if (((givenname != null) && (givenname.length > 0))) \n givenname\
                    \ = givenname[0]; \n if(givenname == null || givenname.length\
                    \ == 0) \n givenname = \"\"; \n else \n givenname = givenname.substring(0,1);\
                    \ \n baseidentity = givenname + subject.getProperty(\"sn\")[0];\
                    \ \n } \n if (baseidentity == null) {\n baseidentity = \"\";\n\
                    \ }\n tf = IdentityPolicy.userIDExists(baseidentity, false, false);\
                    \ \n if (!tf) \n return baseidentity; \n while (tf) { \n counter+=1;\
                    \ \n identity = baseidentity + counter; \n tf = IdentityPolicy.userIDExists(identity,\
                    \ false, false); \n } \n return identity; \n } \n \n return createIdentity();"
                  erpolicytarget: 2;*
                  objectclass:
                  - top
                  - erIdentityPolicy
                  - erPolicyBase
                  - erPolicyItemBase
                  - erManagedItem
                  erpolicyitemname: Default identity policy for ITIM (Person)
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
    post:
      tags:
      - Identity Policy Management
      summary: Identity Policy Create
      description: "Creates a new Identity Policy with the given attributes. \r\n\
        orgID : The ID of the Organization container in which this Identity Policy\
        \ is to be created. This parameter is required. \r\n_attributes : JSON representation\
        \ of the Identity Policy attributes to be set. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdentityPolicyRequestBeanSwagger'
      responses:
        "201":
          description: Created
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /acis:
    get:
      tags:
      - ACI Management
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: name
        in: query
        description: filter ACIs by name
        schema:
          type: string
      - name: orgID
        in: query
        description: filter ACIs by organization
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: target
        in: query
        description: filter ACIs by type
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIResponseBean'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "206":
          description: partial content when range parameter is used
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIResponseBean'
    post:
      tags:
      - ACI Management
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIRequestBean'
      responses:
        "201":
          description: OK. The changes were accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIResponseBean'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles/{uuid}:
    get:
      tags:
      - ITIM Group Management
      summary: Lookup System Role
      description: Returns information about the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma- separated attributes to return for the system\
          \ role. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default all the attributes are returned. Example - ?attributes=errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for the reference
          attributes of system role (eg. erparent). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erparent.*
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/systemroles/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: AdminRole1111
                  ersystemrolecategory:
                    href: /itim/rest/v1.2/views/1
                    title: "1"
                  erparent:
                    href: /itim/rest/v1.2/organizationcontainers/organizations/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: isvgim
                _attributes:
                  errolename: AdminRole1111
                  description: new updated description for the systemrole
                  ersystemrolecategory: "1"
                  uuid: cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                  parentUUID: cc7ec53b-3305-41bb-9c6f-ce7b67115d9b
    put:
      tags:
      - ITIM Group Management
      summary: System Role Update
      description: Updates the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySystemRoleRequestSwagger'
      responses:
        "204":
          description: OK. The request was successful.
    delete:
      tags:
      - ITIM Group Management
      summary: System Role Delete
      description: Deletes the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories:
    get:
      tags:
      - Access Management
      summary: Access Categories Search
      description: Returns all access categories defined in Identity Governance.
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BY2Nlc3NSb2xlLG91PWFjY2Vzc1R5cGUsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: Role
                _attributes:
                  name: Role
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1NYWlsR3JvdXAsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: E-mail group
                _attributes:
                  name: MailGroup
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1TaGFyZWRGb2xkZXIsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: Shared folder
                _attributes:
                  name: SharedFolder
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Application
                _attributes:
                  name: Application
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1CdXNpbmVzcyxvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Business
                _attributes:
                  name: Business
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/delegations:
    get:
      tags:
      - Delegation Management
      summary: Delegations Lookup
      description: "Returns information about the delegations, if any, for the specified\
        \ user."
      parameters:
      - name: systemUserId
        in: path
        description: Unique Identifier for a system user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                links:
                  delegatee:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                  self:
                    href: itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations/JGVydWlkPWNyaWVnbGUsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20kMTQyNDEzNjYwMDAwMCQxNDI0MjIzMDAwMDAw
                _attributes:
                  endDate: 1424223000000
                  startDate: 1424136600000
    post:
      tags:
      - Delegation Management
      summary: Delegation Add
      description: Adds delegation for the specified user.
      parameters:
      - name: systemUserId
        in: path
        description: Unique Identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateRequestBean'
      responses:
        "201":
          description: The delegation schedule is successfully created.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts:
    get:
      tags:
      - Search
      summary: Account Search
      description: "Returns information about accounts that match the specified search\
        \ criteria if there are any. \nBy default, no attributes are returned. The\
        \ client must specify the \"attributes\" query parameter to request the attributes\
        \ to be returned in the \"_attributes\" property of each account. \nIf wild-card\
        \ is used, the list of returned attributes is different for different account\
        \ profiles. \nIf a particular type is searched, the client knows the exact\
        \ value to pass so that a profile can be searched(Ex.PosixLinuxAccount, ITIMAccount\
        \ etc.). \n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes that are returned for\
          \ each account. The specified attributes are returned in the \"_attributes\"\
          \ property of each account. Specifying a value of \"*\" returns all attributes.\
          \ Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of accounts (eg. erservice). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned account. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Deruid\
          \ (%2D is UTF-8 encoding for - sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: criegle
                _attributes:
                  eruid: criegle
              - _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9YWF1c3RpbixvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: aaustin
                _attributes:
                  eruid: aaustin
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/{activityId}:
    get:
      tags:
      - Activity Management
      summary: Activity Lookup
      description: Returns information about the specified activity.
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: participantLimit
        in: query
        description: Specifies the maximum number of participants for an activity.
          Specifying a zero (0) indicates that there is no limit.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                request:
                  id: "2461570965242287130"
                  justification: ghyrh
                  submittedDate: 1428649755392
                _links:
                  requester:
                    href: /itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: James Pearch
                  request:
                    href: /itim/rest/requests/2461570965242287130
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
                  workitem:
                    href: /itim/rest/workitems/2461578203364444755
                  self:
                    href: /itim/rest/activities/2461577992772412588
                    title: Approval activity
                  dependentAccesses: []
                  participants:
                  - href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                subject:
                  _links:
                    icon:
                      href: custom/ui/images/access/iconApplicationAccess.gif
                    self:
                      href: /itim/rest/access/2460300160735116790
                      title: GSA
                  _attributes:
                    name: GSA
                    accessCategory: Application
                    description: GSA repository.
                    serviceName: GSA
                    type: ACCESS
                    accountUserId: asmith
                uiProperties:
                - name: ui.activities.displayJustification
                  value: true
                - name: ui.activities.displayUserComments
                  value: true
                _attributes:
                  requesteeName: Alan Smith
                  workitemId: "2461578203364444755"
                  instructions: Request for Approval
                  totalNumberOfParticipants: 1
                  requesterName: James Pearch
                  dueDate: 1428736156784
                  escalated: false
                  name: Approval activity
                  id: "2461577992772412588"
                  type: APPROVAL
                  status:
                    text: Pending
                    key: RequestAuditDataActivity.Status.PENDING
                  dueDateWarning: true
                actions:
                  approve:
                    code: AA
                    inProgressLabel:
                      text: Approving
                      key: AA_inProgress
                    label:
                      text: Approve
                      key: AA
                  reject:
                    code: AR
                    inProgressLabel:
                      text: Rejecting
                      key: AR_inProgress
                    label:
                      text: Reject
                      key: AR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access:
    get:
      tags:
      - Search
      summary: Access Search
      description: Returns all accesses for the specified user.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ access item. The specified attributes are returned in the \"_attributes\"\
          \ property of each access item. Specifying a value of \"*\" returns all\
          \ attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: searchForCommonAccess
        in: query
        description: Decides whether default search for common access should be executed
          in request access flow.
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) by which the returned list of accesses should be\
          \ sorted. Sorting is currently supported on the following attributes- accessName,\
          \ accessCategory, description and additionalInformation. Any other attribute\
          \ will be ignored and the sorting attribute and order will be chosen by\
          \ the underlying data store (in the case of access it is RDBMS). Example\
          \ - ?sort=%2BaccessName, ?sort=%2BaccessCategory, ?sort=%2Ddescription,\
          \ ?sort=%2DadditionalInformation (%2B and %2D is UTF-8 encoding for + and\
          \ - sign respectively)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ searches without referencing any cache. The 'delete-cache' option deletes\
          \ the cache. In this case, empty search results are returned. Example -\
          \ Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplications~BusinessApplications~FinanceAccess.gif
                  self:
                    href: /itim/rest/access/376511431976528341
                    title: Accounting Plus
                  owners:
                    href: /itim/rest/access/376511431976528341/owners
                _attributes:
                  badges: []
                  additionalInformation: ' '
                  accessName: Accounting Plus
                  entityType: 2
                  entityProfile: LdapGroupProfile
                  accessCategory: Applications:BusinessApplications:Finance
                  isCommon: false
                  description: "Accounts payable, receivable and more..."
                  tags: "Require manager approval |testing 1,2,3"
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif
                  self:
                    href: /itim/rest/access/376511317273827596
                    title: Business Partner Connect
                  owners:
                    href: /itim/rest/access/376511317273827596/owners
                _attributes:
                  badges: []
                  additionalInformation: ' '
                  accessName: Business Partner Connect
                  entityType: 2
                  entityProfile: LdapGroupProfile
                  accessCategory: Applications:SupportApplications
                  isCommon: false
                  description: Allows business partners to access project manuals
                    and support documentation.
                  tags: Customer data
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/3383957381996504114
                    title: Manager
                  owners:
                    href: /itim/rest/access/3383957381996504114/owners
                _attributes:
                  badges: []
                  roleAssignmentAttributes:
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: StartDate
                      assignmentAttributeLabel: StartDate
                      definedRoleName: Manager
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: EndDate
                      assignmentAttributeLabel: EndDate
                      definedRoleName: Manager
                  additionalInformation: ' '
                  accessName: Manager
                  entityType: 3
                  entityProfile: Organization role
                  description: Allows end user a manager role.
                  isCommon: false
                  tags: Customer data
                  isEditRoleAssignmnetAttributeAllowedForPerson: true
    post:
      tags:
      - Access Management
      summary: Create Access
      description: "\r\n\r\nCreates access for the entity \r\n\r\n Required attributes:\
        \ \r\n\r\nentityType - Value should be 3 as currently this API only supports\
        \ creating access for the role \r\n\r\nentityRef - Value should be uuid of\
        \ the role for which access needs to be created. \r\n\r\naccessCategory -\
        \ \r\n\r\nIn case of providing accessSubtype value for accessCategory hierarchy\
        \ of accessType should be provided \r\n\r\ne.g. If Application has subtype\
        \ ApplicationSubtype and ApplicationSubtype has subtype ApplicationSubtypeChild\r\
        \n\r\nthen to add ApplicationSubtypeChild as accessCategory value should be\
        \ provided as Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\
        \nNote: isCommon attribute is only applicable for static roles not for dynamic\
        \ roles. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessBean'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                accessId: "5065865355324288496"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/constraints/password:
    get:
      tags:
      - Password Management
      summary: System User password constraints Lookup
      description: "Returns the password constraints for the specified system user.\
        \ \r\nThe \"passwordRules\" property is an array listing of each rule for\
        \ the password. If there are no password rules, an empty array is returned."
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated constraints to return for the specified
          link. The specified constraints are returned in the "_embedded" property
          of the constraint object. Example - ?embedded=passwordConstraints
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints/password
                    title: Password Constraints
                passwordRules:
                - text: The minimum number of characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories/{accessCategoryID}:
    get:
      tags:
      - Access Management
      summary: Access Category Lookup
      description: Returns information about a specified access category.
      parameters:
      - name: accessCategoryID
        in: path
        description: Unique Identifier for an access category.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  children:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/childaccesscategories
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                _attributes:
                  name: Application
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems/{workitemId}:
    put:
      tags:
      - Activity Management
      summary: WorkItem Modify
      description: "Modifies a work item by executing an action provided for the activity.\r\
        \n\r\nRequest Body Parameters:\r\n\r\nA decision based activity eg. approvals,\
        \ separation of duty violations, simple user recertifications:\r\n\r\nEither\
        \ of the following action code should be specified in the request body:\r\n\
        \r\nFor an activity approval : AA\r\n\r\nFor an activity rejection : AR\r\n\
        \r\n\r\n\r\nCompleting a work order request:\r\n\r\nEither of the following\
        \ action code should be specified in the request body:\r\n\r\nFor an activity\
        \ success : SS  if you complete the work order.\r\n\r\nFor an activity warning\
        \ : SW  if the work order is only partially complete.\r\n\r\nFor an activity\
        \ failure : SF  if you cannot complete the work order.\r\n\r\n\r\n\r\nCompleting\
        \ a global alert policy enforcement:\r\n\r\nThe following action code should\
        \ be specified in the request body:\r\n\r\nFor an activity success: SS if\
        \ you want to correct the noncompliance.\r\n\r\nYou must set attribute deferActivity\
        \ to false.\r\n\r\n\r\n\r\nDeferring a global alert policy enforcement:\r\n\
        \r\nThe action code should be specified as SS in the request body:\r\n\r\n\
        You must set attribute deferActivity to true.\r\n\r\nYou must specify deferDate,\
        \ which is in milliseconds since the standard base time known as \"the epoch\"\
        , namely January 1, 1970, 00:00:00 GMT.\r\n\r\n\r\n\r\nProviding request for\
        \ information:\r\n\r\nThe following action code should be specified in the\
        \ request body:\r\n\r\nFor an activity request submission: RS.\r\n\r\nYou\
        \ can specify the value for RFI attributes in rfiAttributeValues.\r\n\r\n\r\
        \n\r\n\r\n\r\n[See request examples](/itim/swaggerdoc/workItemModify.html)"
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkItemUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
    post:
      tags:
      - Activity Management
      summary: User Re-certification Check Impact
      description: Evaluates the user re-certification impact
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: 'Specifies the HTTP method override. The value of this parameter
          is - "check-recertification" '
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRecertificationDetailsBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                rolesImpactTarget:
                - ownershipType: ""
                  name: Developers
                  impactedBy: ""
                  description: Developers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                - ownershipType: ""
                  name: Managers
                  impactedBy: ""
                  description: Managers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                accountsImpactTarget:
                - ownershipType: Individual
                  name: vm on linux service
                  impactedBy: ""
                  description: ""
                  dependentRecertificationTodoTargets:
                  - ownershipType: ""
                    name: apache access
                    impactedBy: ""
                    description: Apache access to xyz application
                    dependentRecertificationTodoTargets: []
                    dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                    impactType: explicit
                  dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                - ownershipType: Individual
                  name: vm on aix service
                  impactedBy: Developers
                  description: ""
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: implicit
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities:
    get:
      tags:
      - Activity Management
      summary: Activities Search
      description: Returns information about activities that match the specified search
        criteria.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: participantLimit
        in: query
        description: Specifies the maximum number of participants to return. Example.
          ?participantLimitParm=10
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned account."
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - request:
                  id: "2461570965242287130"
                  justification: ghyrh
                  submittedDate: 1428649755392
                _links:
                  requester:
                    href: /itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: James Pearch
                  request:
                    href: /itim/rest/requests/2461570965242287130
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
                  workitem:
                    href: /itim/rest/workitems/2461578203364444755
                  self:
                    href: /itim/rest/activities/2461577992772412588
                    title: Approval activity
                  dependentAccesses: []
                  participants:
                  - href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                subject:
                  _links:
                    icon:
                      href: custom/ui/images/access/iconApplicationAccess.gif
                    self:
                      href: /itim/rest/access/2460300160735116790
                      title: GSA
                  _attributes:
                    name: GSA
                    accessCategory: Application
                    description: GSA repository.
                    serviceName: GSA
                    type: ACCESS
                    accountUserId: asmith
                _attributes:
                  requesteeName: Alan Smith
                  workitemId: "2461578203364444755"
                  instructions: Request for Approval
                  totalNumberOfParticipants: 1
                  requesterName: James Pearch
                  dueDate: 1428736156784
                  escalated: false
                  name: Approval activity
                  id: "2461577992772412588"
                  type: APPROVAL
                  status:
                    text: Pending
                    key: RequestAuditDataActivity.Status.PENDING
                  dueDateWarning: true
                actions:
                  approve:
                    code: AA
                    inProgressLabel:
                      text: Approving
                      key: AA_inProgress
                    label:
                      text: Approve
                      key: AA
                  reject:
                    code: AR
                    inProgressLabel:
                      text: Rejecting
                      key: AR_inProgress
                    label:
                      text: Reject
                      key: AR
              - {}
              - {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/{requestId}:
    get:
      tags:
      - Search
      summary: Request Lookup
      description: Returns information about the specified request.
      parameters:
      - name: requestId
        in: path
        description: Unique Identifier for a request.
        required: true
        schema:
          format: int64
          type: integer
      - name: activityID
        in: query
        description: Specifies the activity ID that requires request information.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  requester:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                  self:
                    href: /itim/rest/requests/9170709815227290417
                obligations:
                - _auditattributes: {}
                  action: MODIFY_PERSON
                  id: obligation1
                  _attributes:
                    manager: "erglobalid=7641180504304689103,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                requests:
                - _links:
                    requestee:
                      href: /itim/rest/people
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Chuck Riegle
                      erparent:
                        href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD04ODE1MzI3OTYxODY1NjE5ODk3LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    _attributes:
                      mail: criegle@ibm.com
                      erparent: "erglobalid=8815327961865619897,ou=orgChart,erglobalid=00000000000000000000,ou=org,dc=com"
                  obligations:
                  - $ref: obligation1
                  _attributes:
                    action:
                      text: Edit profile
                      key: RequestAuditData.Action.MODIFY
                    status:
                      text: Fulfilled
                      key: RequestAuditData.Status.FULFILLED
                _attributes:
                  action:
                    text: Edit profile
                    key: RequestAuditData.Action.MODIFY
                  justification: Updating manager
                  id: "9170709815227290417"
                  submittedDate: 1430211848230
                  completedDate: 1430211859884
                  status:
                    text: Fulfilled
                    key: RequestAuditData.Status.FULFILLED
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{category}:
    get:
      tags:
      - Search
      summary: Organization Container Search
      description: Returns information about the organization container that matches
        the specified search criteria if any.
      parameters:
      - name: category
        in: path
        description: "Specifies the type of organization container to look up. Valid\
          \ values are - \"admindomains\", \"bporganizations\", \"organizationunits\"\
          , \"locations\", and \"organizations\". The values are case-insensitive."
        required: true
        schema:
          enum:
          - admindomains
          - bporganizations
          - organizationunits
          - locations
          - organizations
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ organizational container. By default, no attributes are returned. The\
          \ client must specify the \"attributes\" query parameter to request the\
          \ attributes to be returned in the \"_attributes\" property of each person.\
          \ A requested attribute is returned if the client does not have permission\
          \ to retrieve the attribute or if the value of the attribute is null. Specifying\
          \ a value of \"*\" will return all of the attributes. Example. ?attributes=l"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that search returns. Example.
          ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned location. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example. ?sort=%2Bl\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  l: Raleigh
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services:
    get:
      tags:
      - Service Management
      summary: Search Service
      description: "Returns information about services matching the specified search\
        \ criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"name\" of the service is\
        \ returned in the _links.self.title property. \r\n\r\nThe \"statusDetails\"\
        \ of the service is returned as the _links.statusDetails.href link. \r\n\r\
        \nBy default, no attributes are returned. The client must specify the \"attributes\"\
        \ query parameter to request the attributes to be returned in the \"_attributes\"\
        \ property of each service. \r\n\r\nIf a wild-card is used, the list of attributes\
        \ returned is different for different service profiles. \r\n\r\nTo search\
        \ a particular type, the client must know the exact value to pass to search\
        \ that profile(Ex.PosixLinuxProfile). \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ service. The specified attributes are returned in the \"_attributes\"\
          \ property of each service. Specifying a value of \"*\" returns all attributes.\
          \ Example - ?attributes=erservicename,owner,erparent"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned service. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Berservicename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without refererencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: GSA
                _attributes:
                  description: GSA hosted on Linux server.
                  erservicename: GSA
              - _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Fileshare on solaris
                _attributes:
                  description: Fileshare on solaris.
                  erservicename: Fileshare on solaris
    post:
      tags:
      - Service Management
      summary: Service Create
      description: "Creates a new service with the given attributes. \r\nprofileName:\
        \ Name of the service profile. This is a required parameter. \r\norgID: The\
        \ ID of the Organization container in which this service is to be created.\
        \ This parameter is required. \r\n_attributes : JSON representation of the\
        \ service attributes to be set. \r\n \r\nOptional request body parameters:\r\
        \n manualWorkOrderRequest: This is applicable only when service is to be created\
        \ in manual connection mode.\r\n If you request service in manual connection\
        \ mode and do not provide the details for the manualWorkOrderRequest, then\
        \ the service will\r\n be created with a default data for manual work order.\r\
        \n The manualWorkOrderRequest should be specified in following format : \r\
        \n\r\n \"manualWorkOrderRequest\": {\r\n\r\n      \"participant\": {\r\n \
        \           \t\"type\":\"USER\",\r\n             \t\"id\":\"ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVy\r\
        \n                Z2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ\"\
        \r\n       },\r\n      \"escalationParticipant\": {\r\n            \t\"type\"\
        :\"ADMINISTRATOR\"\r\n       },\r\n     \t\"escalationPeriod\":\"10\",\r\n\
        \     \t\"defaultNotification\":\"true\"\r\n }\r\n \r\n Supported values for\
        \ participant and escalationParticipant \"type\":\r\n 1) ADMINISTRATOR, SERVICE_OWNER,\
        \ MANAGER : id value does not required.\r\n 2) USER, ORGANIZATIONAL_ROLE,\
        \ GROUP : id value required.\r\n \r\n defaultProvisioningPolicyRequest: Should\
        \ be specified only when you want a default provisioning policy to be created\
        \ after\r\n the service is created.\r\n If you request service without providing\
        \ any details for defaultProvisioningPolicyRequest then request does not create\
        \ default\r\n provisioning policy for a service.\r\n \r\n This should be specified\
        \ in the following format :\r\n \"defaultProvisioningPolicyRequest\": {\r\n\
        \r\n \t\t\"enabled\":\"true\",\r\n \t\t\"provisioningMode\":\"Automatic\"\r\
        \n }\r\n \r\n \"provisioningMode\" mode, which specifies the provisioning\
        \ policy mode, should be Automatic or Manual.\r\n\r\n[See more request examples](/itim/swaggerdoc/serviceCreate.html)"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/password:
    put:
      tags:
      - Password Management
      summary: Change Password (System Accounts)
      description: Changes password for the Identity Governance System account.
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID to retrieve constraints for.
        required: true
        schema:
          type: string
      - name: maxWaitTime
        in: query
        description: Maximum time (in milliseconds) after which the call returns if
          request is not complete. A value less than 0 is not considered. Example
          - ?maxWaitTime=5000
        schema:
          type: string
      - name: pollingTime
        in: query
        description: Frequency (in milliseconds) to check if the request completed.
          A value less than 0 is not considered. Example - ?pollingTime=1000
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: Specifying "validate" requests validation of the password. Example
          - X-HTTP-Method-Override=validate
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordSwaggerBean'
      responses:
        "202":
          description: OK. The request was successful
        "400":
          description: Bad request. This response is returned if the request header
            or query parameters are not formatted correctly.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - severity: E
                text: CTGIMH001E The password does not meet the requirements of the
                  password rules.
                id: CTGIMH001
                key: com.ibm.passwordrules.ONE_OR_MORE_RULES_VIOLATED
                supportingData:
                  _links:
                    self:
                      href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password
                    systemuser:
                      href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                      title: ITIM Manager
                  passwordRules:
                  - text: The minimum number of characters in the password is 1.
                    inserts:
                    - "1"
                    key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
                    passedValidation: true
                  - text: The maximum number of characters in the password is 5.
                    inserts:
                    - "5"
                    key: com.ibm.isim.rest.passwordrules.MAX_LENGTH
                    passedValidation: false
                  - text: The maximum repeated characters in the password is 1.
                    inserts:
                    - "1"
                    key: com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL
                    passedValidation: true
                  - text: The password must not include the characters "!@#$".
                    inserts:
                    - '!@#$'
                    key: com.ibm.isim.rest.passwordrules.INVALID_CHAR
                    passedValidation: true
    post:
      tags:
      - Password Management
      summary: Validate password (System Account)
      description: Validates password for the Identity Governance System account.
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: Specifying a value of "validate" indicates a request to validate
          the password. Example - X-HTTP-Method-Override=validate
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePasswordSwaggerBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: '/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password '
                  systemuser:
                    href: '/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t '
                    title: ITIM Manager
                passwordRules:
                - text: The minimum number of characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
                  passedValidation: true
                - text: The maximum number of characters in the password is 5.
                  inserts:
                  - "5"
                  key: com.ibm.isim.rest.passwordrules.MAX_LENGTH
                  passedValidation: false
                - text: The maximum repeated characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL
                  passedValidation: false
                - text: The password must not include the characters "!@#$".
                  inserts:
                  - '!@#$'
                  key: com.ibm.isim.rest.passwordrules.INVALID_CHAR
                  passedValidation: true
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /roles/{roleId}:
    get:
      tags:
      - Search
      summary: Role Lookup
      description: Returns information about the specified role.
      parameters:
      - name: roleId
        in: path
        description: Unique Identifier for a role.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma-separated attributes to return for the role.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default\
          \ all attributes are returned. Example - ?attributes=owner,errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of role (eg. owner). The specified attributes are returned in
          the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=owner.cn.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: ITIM Administrators
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  owner: "erglobalid=6892768069536854,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  errolename: ITIM Administrators
                  description: Predefined system administrator role
                  eraccessname: ITIM Administrators
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/enforcepolicy/{serviceId}:
    post:
      tags:
      - Service Management
      summary: Enforce Policy for Service
      description: "Enforce a policy on the specified service. \r\n\r\nscheduledTime\
        \ is optional. The scheduled time should be specified in following format\
        \ : MM/dd/yyyy HH:mm \r\n\r\nIf you want to enforce the policy immediately\
        \ then provide the null or empty contents (i.e. null or {}) in request body.\r\
        \n"
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnforcePolicyRequestBeanSwagger'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/person:
    get:
      tags:
      - Person Management
      summary: People Search for Person Category
      description: "Returns information for the specified user that belongs to a Person\
        \ category. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title\
        \ property. \r\n\r\nBy default, no attributes are returned. The client must\
        \ specify the \"attributes\" query parameter to request the attributes that\
        \ are returned in the \"_attributes\" property of each user. \r\n\r\nA requested\
        \ attribute is not returned if the client does not have permission to retrieve\
        \ the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute\
        \ has multiple values, the value of the corresponding property is an array\
        \ of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each person. The specified attributes are returned in the \"_attributes\"\
          \ property of each person. Specifying a value of \"*\" will return all of\
          \ the attributes. Example - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of a user (eg. manager). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=manager.cn
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned result. Note: The client is responsible\
          \ for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is\
          \ UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  manager:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3UdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: Chuck Riegle
                    _attributes:
                      cn: Chuck Riegle
                _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Alan Smith
                _attributes:
                  sn: Smith
                  cn: Alan Smith
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Chuck Riegle
                _attributes:
                  sn: Riegle
                  cn: Chuck Riegle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/profiles:
    get:
      tags:
      - Person Management
      summary: Person profile search
      description: Returns all profile types for Person.
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                profiles:
                - Person
                - BPPerson
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms/people/{profileName}:
    get:
      tags:
      - Search
      summary: Form Template Person Profile Lookup
      description: Returns the form of the specified person profile
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body:
                      tabbedForm:
                        tab:
                        - image: true
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                            - parameter: "true"
                              type: REQUIRED
                            - type: INVALID_CHARS
                            - parameter: "true"
                              type: NO_WHITE_SPACE
                            label: User ID
                            required: "true"
                          - input:
                              size: "50"
                              name: data.erposixgecos
                              type: text
                            editable: true
                            name: data.erposixgecos
                            label: Gecos (comments)
                          - input:
                              size: "50"
                              name: data.erposixuid
                              type: text
                            editable: true
                            name: data.erposixuid
                            constraint:
                            - parameter: "true"
                              type: INTEGER_ONLY
                            - parameter: "0"
                              type: MIN_VALUE
                            label: UID number
                          - editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixdupuid
                            label: Allow duplicate UIDs?
                          - isHiddenOnModify: "true"
                            editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixprivategroup
                            label: Do Not Create User Private Group
                          - editable: true
                            name: data.erposixsudoprivileges
                            isReadOnlyOnModify: "true"
                            label: sudo privileges
                            editableTextList:
                              comboItem:
                                size: true
                                width: "300"
                                name: data.erposixsudoprivileges
                                label: sudo privileges
                            direction: inherit
                          index: "0"
                          title: Account information
                          selected: "true"
                          url: "javascript:switchTabs (document.forms['body'],0);"
                        - image: true
                          formElement: []
                          index: "1"
                          title: Access information
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],1 );"
                        - image: true
                          formElement: []
                          index: "3"
                          title: Pre Exec and Post Exec Choices
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],3 );"
                _links:
                  resourcebundle:
                    href: /itim/rest/forms/resourcebundle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts/{accountId}:
    get:
      tags:
      - Search
      summary: Account Lookup
      description: Returns information about the specified account.
      parameters:
      - name: accountId
        in: path
        description: Unique Identifier for an account.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the account.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of accounts (eg. erservice). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY3NDYwMzI3MDc1MzQ5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  erservice:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3NDc4MTk3Nzk1MzA2LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/accounts/ZXJnbG9iYWxpZD02ODkyNzY3NjE1NTUxODgzNjQzLG91PTAsb3U9YWNjb3VudHMsZXJnbG9MDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: asmith
                _attributes:
                  owner: "erglobalid=6892767460327075,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=6892757478197795,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eruid: asmith
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/complianceDetails/{activityId}:
    get:
      tags:
      - Activity Management
      summary: Compliance Issues Lookup
      description: Returns compliance issues to be resolved for the specified todo
        activity.
      parameters:
      - name: activityId
        in: path
        description: Unique identifier for a activity.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _attributes:
                  name: Local Groups
                  label: Local Groups
                  newValues: Guest
              - _attributes:
                  name: Description
                  label: Description
                  oldValues: Distributed Users
              - _attributes:
                  name: Description
                  label: Description
                  newValues: Common Users
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse/user:
    post:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup
      description: Returns the list of forgotten password questions configured for
        the user.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeRequestUserBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/user
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
        "400":
          description: "Bad Request. This could happen if the forgotten passwordconfiguration\
            \ is not enabled or the user has not providedanswers to the forgotten\
            \ password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM049E The password challenge response function is disabled.
                  Contact the Identity Governance administrator for more information.
                id: CTGIMM049
                key: com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/{accessId}/owners:
    get:
      tags:
      - Access Management
      summary: Access Owners Search
      description: Returns users who are owners of the specified access.
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ user. Example - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma separated attributes to return for a user\
          \ reference attribute (eg. manager). The specified attributes are returned\
          \ in the \\\"_embedded\\\" section. Example - ?embedded=manager.name,manager.telephoneNumber."
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) for sorting the returned users. Example - ?sort=+cn"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the\
          \ client that specify the same search criteria are satisfied via the cache.\
          \ The 'no-cache' \"\r\n\t\t\t\t\t+ \"option performs the search without\
          \ referencing any cache. The 'delete-cache' option deletes the cache. \"\
          \r\n\t\t\t\t\t+ \"In this case, empty search results are returned. Example\
          \ - Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAcGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Chuck Reigle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories/{accessCategoryID}/childaccesscategories:
    get:
      tags:
      - Access Management
      summary: Child Access Categories Lookup
      description: Returns all sub-categories of a specified access category.
      parameters:
      - name: accessCategoryID
        in: path
        description: Unique Identifier for an access category.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbkhpZXIxLGVyb2JqZWN0cHJvZmlsZW5hbWU9QXBwbGljYXRpb24sb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: Finance
                _attributes:
                  name: Finance
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbjg3NjY4Um9sZTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: HumanResource
                _attributes:
                  name: HumanResource
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1zdWJjYXRlZ29yeTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Marketing
                _attributes:
                  name: Marketing
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms/resourcebundle:
    get:
      tags:
      - Search
      summary: Resource Bundle Lookup
      description: Returns resource bundle which contains all the labels for Identity
        Governance attributes.
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/forms/resourcebundle
                _attributes:
                  "0": Active
                  erservicepassword: Administrator password
                  "1": Inactive
                  street: Street
                  reconciliation.monthly: Monthly
                  eraccessoption: Access Options
                  erlastoperation: Last Operation
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts/password:
    put:
      tags:
      - Password Management
      summary: Get Password Rules/Submit Change Password/Validate Change Password
      description: "This endpoint can be used to perform following operations:\n\n\
        [Get Password Rules](/itim/swaggerdoc/Get_Password_Rules.html) - Retrieve\
        \ password policies that tell users how to create a compliant password. \n\
        [Submit Change Password](/itim/swaggerdoc/Submit_Change_Password.html) - Submit\
        \ a password to update it. \n[Validate Change Password](/itim/swaggerdoc/Validate_Change_Password.html)\
        \ - Validate whether the provided password complies with password rules. \n\
        \nClick link to see more details for each request"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'cumulate' to gather password rules. Example - X-HTTP-Method-Override\
          \ = cumulate \nUse 'submit-in-batch' to set new password. Example - X-HTTP-Method-Override\
          \ = submit-in-batch \nUse 'validate-error-check-only' to validate the password\
          \ against rules. Example - X-HTTP-Method-Override = validate-error-check-only "
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{orgContainerId}:
    put:
      tags:
      - Organizational Management API
      summary: Transfer Organization unit
      description: Moves the organization unit from the current parent container to
        a new parent
      parameters:
      - name: orgContainerId
        in: path
        description: "Unique identifier for an organization, organization unit, location,\
          \ admin domain, busines partner unit."
        required: true
        schema:
          type: string
      - name: parentOrg
        in: query
        description: Unique identifier of the new parent container
        required: true
        schema:
          type: string
      - name: schedule
        in: query
        description: "The scheduled time should be specified in following format:\
          \ MM/dd/yyyy HH"
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2531483138088579374"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/rfiformdetails/{workitemId}:
    get:
      tags:
      - Activity Management
      summary: RFI Form Details Lookup
      description: Returns RFI form details to be resolved for the specified todo
        activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a activity.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body: {}
                container: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                processName: Person Add
                defaultAttrValues:
                  uid:
                  - Sachin
                  employeetype:
                  - empType1
                  manager:
                  - "erglobalid=7784750119600149440,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  givenname:
                  - Sachin Babar
                id: CREATE_PERSON
                operation: add
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /authz/v1.0/entitlements/{entitlement}:
    post:
      tags:
      - Entitlement Management
      summary: Grant and Revoke an Entitlement to one or multiple users
      description: "\r\n\r\nGrant and Revoke an Entitlement to one or multiple users\
        \ \r\n\r\n Required attributes: \r\n\r\n user - Value should be Person ID\
        \ \r\n"
      parameters:
      - name: entitlement
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke'
      responses:
        "200":
          description: Success
          content:
            application/json:
              example:
              - code: 44e5e3f9-1e6e-4c34-83db-546ddf8cd693
                success: true
                operation: grant
              - code: 44e5e3f9-1e6e-4c34-83db-546ddf8cd693
                success: true
                operation: revoke
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /formtemplates/{profileName}:
    get:
      tags:
      - Form Designer APIs v1.2
      summary: Get Formtemplate
      description: This API is used to get formtemplate for a profile.
      parameters:
      - name: profileName
        in: path
        description: "Select profileName. Example values: WinLocalAccount, BPPerson,\
          \ BPOrganization, WinLocalGroupProfile, Location, Organization, OrganizationalUnit,\
          \ Person, DefaultRole, AdminDomain, ADFeed, CSVFeed, DSML2Service, DSMLInfo,\
          \ HostedService, ITIMService, RFC2798Feed, WinLocalProfile, SystemRole,\
          \ ITIMAccount"
        required: true
        schema:
          type: string
          example: Person
      responses:
        "200":
          description: Success
          content:
            application/xml:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
        "400":
          description: Bad Request
          content:
            application/xml: {}
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/xml: {}
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/xml: {}
            application/json: {}
        "404":
          description: Not Found
          content:
            application/xml: {}
            application/json: {}
    put:
      tags:
      - Form Designer APIs v1.2
      summary: Update Formtemplates
      description: "This API is used to update a formtemplate for a profile. Required\
        \ attributes: profileName"
      parameters:
      - name: profileName
        in: path
        description: "Select profileName. Example values: WinLocalAccount, BPPerson,\
          \ BPOrganization, WinLocalGroupProfile, Location, Organization, OrganizationalUnit,\
          \ Person, DefaultRole, AdminDomain, ADFeed, CSVFeed, DSML2Service, DSMLInfo,\
          \ HostedService, ITIMService, RFC2798Feed, WinLocalProfile, SystemRole,\
          \ ITIMAccount"
        required: true
        schema:
          type: string
          example: Person
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignFormBean'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Success
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people:
    get:
      tags:
      - Person Management
      summary: Person Search
      description: "Returns information about users that match the specified search\
        \ criteria if any. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title\
        \ property. \r\n\r\nBy default, no attributes are returned. The client must\
        \ specify the \"attributes\" query parameter to request the attributes to\
        \ return in the \"_attributes\" property of each person. \r\n\r\nA requested\
        \ attribute is not returned if the client does not have permission to retrieve\
        \ the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute\
        \ has multiple values, the value of the corresponding property is an array\
        \ of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each person. The specified attributes are returned in the \"_attributes\"\
          \ section. Specifying a value of \"*\" returns all attributes. Example -\
          \ ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for a user\
          \ reference attribute (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section. Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      - name: forms
        in: query
        description: "Specifies the boolean. If true, then form are returned for the\
          \ user."
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: subordinateFilter
        in: query
        description: "Specifies the boolean. If true, then the returned users are\
          \ filtered to narrow the search to a logged in users subordinates."
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Judith Hall
                _attributes:
                  telephoneNumber:
                  - 555-1111
                  - 555-2222
                  mail: jhall@jkenterprises.com
              - _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ABCnbG8iDFxpTR01Ngh4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjWQVdlZ
                    title: Chuck Riegle
                _attributes:
                  telephoneNumber: 555-3333
                  mail: criegle@jkenterprises.com
    post:
      tags:
      - Person Management
      summary: Person Create
      description: "\r\n\r\nCreates a new person with the given attributes \r\n\r\n\
        profileName, orgID is required . \r\n\r\nscheduledTime is optional. The scheduled\
        \ time should be specified in following format : MM/dd/yyyy HH:mm \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRequestBean'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /ui/api/v1.0/user/preferences/customization:
    get:
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse/{userid}:
    get:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup (Deprecated)
      description: "Returns the list of forgotten password questions configured for\
        \ the user. \nThis API has been deprecated to restrict passing userId in a\
        \ URL. For secure lookup of Forgotten Password Questions, use 'Forgotten Password\
        \ Questions Lookup' API with POST method.\n"
      parameters:
      - name: userid
        in: path
        description: Specifies the name of the user's Identity Governance System account.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/itim%20manager
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
        "400":
          description: "Bad Request. This could happen if the forgotten passwordconfiguration\
            \ is not enabled or the user has not providedanswers to the forgotten\
            \ password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM049E The password challenge response function is disabled.
                  Contact the Identity Governance administrator for more information.
                id: CTGIMM049
                key: com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED
      deprecated: true
    put:
      tags:
      - Password Management
      summary: Submit Responses for Forgotten Password Questions
      description: Submit responses for forgotten password questions to recover password.
      parameters:
      - name: userid
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordSubmitResponseBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
                _attributes:
                  transactionid: "283367112556274689"
                  status: SUCCESS
        "400":
          description: "Bad Request. This might happen if the user providedincorrect\
            \ responses to forgotten password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM036E The response is incorrect. Enter correct response.
                id: CTGIMM036
                key: com.ibm.itim.apps.ejb.home.HomeBean.INVALID_ANSWERS
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /authz/v1.0/access/assignments/assignment-attributes:
    put:
      tags:
      - Entitlement Management
      summary: Create assignment attributes value for a role type entitlement
      description: "\r\n\r\nCreate assignment attribute value for one or multiple\
        \ users \r\n\r\n Required attributes: \r\n\r\n Entitlement,User and AssignmentAttributeValue\
        \ \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAssignementAttributeValueGrant'
      responses:
        "200":
          description: Success
        "207":
          description: "There was a problem with one or more entities in the list,\
            \ error details will be available in the response"
          content:
            application/json:
              example:
              - result: "true"
                operation: update role assignment attribute values
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /identitypolicy/{identityPolicyId}:
    get:
      tags:
      - Identity Policy Management
      summary: Identity Policy Lookup
      description: Returns information about the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique Identifier for a Identity Policy.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the identity\
          \ policy. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default, all the attributes are returned. Example - ?attributes=erscope,erlabel"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ
                    title: Default identity policy for ITIM (Person)
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9RGl2eWE
                    title: Organization
                _attributes:
                  eruserclass: Person
                  erpolicytarget: 2;*
                  erpolicyitemname: Default identity policy for ITIM (Person)
    put:
      tags:
      - Identity Policy Management
      summary: Identity Policy Modify
      description: Modifies information for the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique identifier for a Identity Policy
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyIdentityPolicyBeanSwagger'
      responses:
        "202":
          description: OK. The request was successful
    delete:
      tags:
      - Identity Policy Management
      summary: Identity Policy Delete
      description: Deletes the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique identifier for a Identity Policy.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms:
    get:
      tags:
      - Search
      summary: Form Template Lookup
      description: Returns the form of the specified entity.
      parameters:
      - name: access
        in: query
        description: Specifies the unique identifier of the access. Use this attribute
          with the requestee parameter to return the form of the account.
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of forms. The parameter allows user to read the resource bundle
          details. Example - ?embedded=form.resourcebundle
        schema:
          type: string
      - name: requestee
        in: query
        description: Specifies the unique identifier of the person for whom the form
          must be looked up.
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body:
                      tabbedForm:
                        tab:
                        - image: true
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                            - parameter: "true"
                              type: REQUIRED
                            - type: INVALID_CHARS
                            - parameter: "true"
                              type: NO_WHITE_SPACE
                            label: User ID
                            required: "true"
                          - input:
                              size: "50"
                              name: data.erposixgecos
                              type: text
                            editable: true
                            name: data.erposixgecos
                            label: Gecos (comments)
                          - input:
                              size: "50"
                              name: data.erposixuid
                              type: text
                            editable: true
                            name: data.erposixuid
                            constraint:
                            - parameter: "true"
                              type: INTEGER_ONLY
                            - parameter: "0"
                              type: MIN_VALUE
                            label: UID number
                          - editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixdupuid
                            label: Allow duplicate UIDs?
                          - isHiddenOnModify: "true"
                            editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixprivategroup
                            label: Do Not Create User Private Group
                          - editable: true
                            name: data.erposixsudoprivileges
                            isReadOnlyOnModify: "true"
                            label: sudo privileges
                            editableTextList:
                              comboItem:
                                size: true
                                width: "300"
                                name: data.erposixsudoprivileges
                                label: sudo privileges
                            direction: inherit
                          index: "0"
                          title: Account information
                          selected: "true"
                          url: "javascript:switchTabs (document.forms['body'],0);"
                        - image: true
                          formElement: []
                          index: "1"
                          title: Access information
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],1 );"
                        - image: true
                          formElement: []
                          index: "3"
                          title: Pre Exec and Post Exec Choices
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],3 );"
                _links:
                  self:
                    href: /itim/rest/forms?access=/itim/rest/access/6892757478197795306&filterId=formSearch
                  resourcebundle:
                    href: /itim/rest/forms/resourcebundle
    post:
      tags:
      - Search
      summary: Label Lookup
      description: Returns label information about an attribute. For example - label
        of attribute "cn" is "Full Name".
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: "Default value : cn,sn,mail"
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - Full name
              - Last name
              - E-mail address
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /lifecyclerule:
    get:
      tags:
      - Search
      summary: Search All LifecycleRules
      description: Returns information about the lifecycle Rule that match the specified
        search criteria.
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for the LifecycleRule.
          The specified attributes are returned in the "_attributes" section of the
          response. Specifying a value of "*" returns all attributes.
        schema:
          type: string
      - name: ruleType
        in: query
        description: Specifies the rule type to be searched.
        required: true
        schema:
          enum:
          - PROFILE_TYPE
          - CATEGORY_TYPE
          - RECERT_POLICY_TYPE
          type: string
      - name: typeInfo
        in: query
        description: " String representing the type info to be searched. The values\
          \ that can be specified for typeInfo depends on ruleType and is summarized\
          \ below.To search rules at Global or other entity type level specify ruleType=CATEGORY_TYPE\
          \ and typeInfo = Global, Account, Person or BPPerson. To search rules for\
          \ a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile\
          \ name of the entity, like ADProfile, ITIMAccount, Person etc. To search\
          \ rules for a specific recertification policy, specify ruleType=RECERT_POLICY_TYPE\
          \ and typeInfo = the DN of the recertification policy."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxDQVRFR09SWV9UWVBFfEFjY291bnQ
                    title: Delete Person LCR
                _attributes:
                  filter: ""
                  name: Delete Person LCR
                  description: Lifecycle Rule to delete terminated person
                  ruleid: 9088349764208198280
                  operation: delete
    post:
      tags:
      - LifecycleRule Management
      summary: Add LifecylceRule
      description: "Create a new LifecylceRule with the given attributes. Following\
        \ is the description of attributes that are supported. \r\n\r\nruleType :\
        \ Mandatory Parameter in request body. Specifies the rule type. Allowed values\
        \ for different rule types are PROFILE_TYPE, CATEGORY_TYPE and RECERT_POLICY_TYPE.\
        \ \r\n\r\ntypeInfo : Mandatory Parameter in request body. String representing\
        \ the type info for different rule types. The values that can be specified\
        \ for typeInfo depends on ruleType and is summarized below. \r\n\r\nTo add\
        \ a rule at Global or other entity type level specify ruleType=CATEGORY_TYPE\
        \ and typeInfo = Global, Account, Person or BPPerson \r\n\r\nTo add a rule\
        \ for a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile\
        \ name of the entity, like ADProfile, ITIMAccount, Person etc. \r\n\r\n_attributes\
        \ : JSON representation of the lifecycle attributes to be set. Following attributes\
        \ can be specified. \r\n\r\nname : It is a mandatory attribute and specifies\
        \ the name of the lifecycle rule to be created. \r\n\r\ndescription : It is\
        \ an optional attribute that can be used to set the description of the lifecycle\
        \ Rule. \r\n\r\nOperationName : It is mandatory attribute that specifies the\
        \ name of the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter\
        \ : It is an optional attribute and can be used to set the lifecycle rule\
        \ filter. Filter is not set for typeInfo (Global). \r\n\r\nschedules : JSON\
        \ representation of array of lifecycle schedules to be set. It is an optional\
        \ attribute. In each schedule you can specify hour, minute, month, day of\
        \ the week, days of the week, day of the month, quarterly, and semi-annually.\
        \ Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour\
        \ of the schedule. Allowed values are 0-23. To specify hourly schedule set\
        \ hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59.\
        \ \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This\
        \ attribute is exclusive with dayOfWeek. To set the dayOfMonth value other\
        \ than -1(daily), the month value must be set either to specific month or\
        \ -1(monthly). Allowed values are 1-28, if the schedule is set to monthly,\
        \ otherwise the allowed value varies according to the month value. \r\n\r\n\
        month : month of the schedule (-1 if every month). Allowed values are 1-12\
        \ (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the\
        \ schedule (-1 if every day). This attribute is deprecated for weekly schedule.\
        \ This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 =\
        \ Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly\
        \ schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple\
        \ values are specified in pipe-separated format (1|2 = Sunday and Monday).\
        \ Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0\
        \ to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive\
        \ with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter\
        \ is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual\
        \ : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual\
        \ is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLifecycleRuleRequestBeanSwagger'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/lifecyclerule/MTI3NzcwMDUxODgxOTE5ODYwNnxDQVRFR09SWV9UWVBFfEFjY291bnQ
                    title: Suspend Dormant Account LCR
                _attributes:
                  Filter: (cn=*)
                  schedules:
                    dayOfWeek: 0
                    hour: 12
                    month: 0
                    dayOfMonth: -1
                    minute: 0
                  name: Suspend Dormant Account LCR
                  description: LCR to suspend dormant accounts
                  ruleid: 1277700518819198606
                  operation: suspend
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has a missing data for required
                  field "name".
                id: CTGIMZ052
                inserts:
                - name
                key: com.ibm.isim.rest.data.MISSING_DATA_FOR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers:
    get:
      tags:
      - Search
      summary: Search All Organization Containers
      description: Returns list of all the organization containers.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ organizational container. By default, no attributes are returned. The\
          \ client must specify the \"attributes\" query parameter to request the\
          \ attributes to be returned in the \"_attributes\" property of each organizational\
          \ container. A requested attribute is returned if the client does not have\
          \ permission to retrieve the attribute or if the value of the attribute\
          \ is null. Specifying a value of \"*\" will return all of the attributes.\
          \ Example. ?attributes=l"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  l: Raleigh
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/userrecertdetails/{workitemId}:
    get:
      tags:
      - Activity Management
      summary: User Re-certification Details Lookup
      description: Returns User re-certification details for the specified todo activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                accountsToCertify:
                - ownershipType: Individual
                  decision: true
                  name: vm on linux service
                  description: ""
                  dependentRecertificationTodoTargets:
                  - ownershipType: ""
                    decision: true
                    name: apache access
                    description: Apache access to xyz application
                    dependentRecertificationTodoTargets: []
                    dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                - ownershipType: Individual
                  decision: true
                  name: vm on aix service
                  description: ""
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                comment: ""
                justification: ""
                rolesToCertify:
                - ownershipType: ""
                  decision: true
                  name: Developers
                  description: Developers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                - ownershipType: ""
                  decision: true
                  name: Managers
                  description: Managers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/selfregister:
    post:
      tags:
      - Person Management
      summary: Person Self Register
      description: "Creates a person in the provisioning platform without accessing\
        \ the system with an Identity Governance account login and password. \r\n\r\
        \nprofileName, orgID is required.\r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfRegisterPersonRequestBean'
      responses:
        "202":
          description: Accepted.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests:
    get:
      tags:
      - Search
      summary: Requests Search
      description: "Returns information about requests matching the specified search\
        \ criteria, if any. \r\nBy default, all information is returned for each entry\
        \ in the array, which makes each search entry identical to a Request Lookup\
        \ API. \r\nA request is not returned if the client does not have permission\
        \ to access it. \r\n"
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the order (\"+\" for ascending, \"-\" for descending)\
          \ for sorting the returned requests. Note: The client is responsible for\
          \ performing URL encoding if necessary. The valid attributes used in the\
          \ sort are - requestee, status, date. By default, the entries are sorted\
          \ by date in descending order. Example - ?sort=%2Brequestee (%2B is UTF-8\
          \ encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: "OK. The request was successful\r\n\r\n[Please click here to\
            \ view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  requester:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                  self:
                    href: /itim/rest/requests/2186821305970425066
                obligations:
                - form:
                    page:
                      body:
                        form:
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: User ID
                            required: "true"
                            direction: inherit
                          - input:
                              size: "50"
                              name: data.cn
                              type: text
                            editable: true
                            name: data.cn
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: Full name
                            required: "true"
                            direction: inherit
                          - input:
                              size: "50"
                              name: data.sn
                              type: text
                            editable: true
                            name: data.sn
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: Last name
                            required: "true"
                            direction: inherit
                          - editable: true
                            name: data.description
                            loginHours:
                              orientation: landscape
                              interval: onehour
                            label: Authorized hours
                            direction: inherit
                          action: formvalidator0
                  action: CREATE_ACCOUNT
                  id: obligation1
                  _attributes:
                    employeenumber: Z456123
                    mail: criegle@jke.test
                    telephonenumber: 1-512-456-3451
                    givenname: Chuck
                    initials: ""
                    eruid: criegle
                    cn: Chuck Riegle
                    sn: Riegle
                    title: Senior Manager Accounting
                    erldappwdreset: "true"
                requests:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      icon:
                        href: custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif
                      self:
                        href: /itim/rest/access/376511317273827596
                    _attributes:
                      accessName: Business Partner Connect
                      description: Allows business partners to access project manuals
                        and support documentation.
                      serviceName: Application Server
                  obligations:
                  - $ref: obligation1
                  _attributes:
                    action:
                      text: New access request
                      key: AccessRequestAuditDataAccess.Action.ADD
                    status:
                      text: Pending
                      key: AccessRequestAuditDataAccess.Status.PENDING
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      icon:
                        href: custom/ui/images/access/iconFilesharesAccess.gif
                      self:
                        href: /itim/rest/access/376511866909527916
                    _attributes:
                      accessName: North Region File Share
                      description: File share containing region project files including
                        confidential data.
                      serviceName: GSA
                  obligations: []
                  _attributes:
                    action:
                      text: New access request
                      key: AccessRequestAuditDataAccess.Action.ADD
                    status:
                      text: Pending
                      key: AccessRequestAuditDataAccess.Status.PENDING
                _attributes:
                  action:
                    text: Manage Access
                    key: RequestAuditData.Action.ACCESS_BATCH_REQUEST
                  justification: User Need access
                  id: "2186821305970425066"
                  submittedDate: 1430733268995
                  status:
                    text: Pending
                    key: RequestAuditData.Status.PENDING
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/{serviceId}/statusdetails:
    get:
      tags:
      - Service Management
      summary: Lookup Service Status
      description: "Returns information about the status of the service. Service status\
        \ can be : \r\n\r\nALIVE - Last attempt to contact the service was successful.\
        \ \r\n\r\nFAILED - Last attemp to contact the service failed. \r\n\r\nLOCKED_RECON_IN_PROGRESS\
        \ - System is currently reconciling the service. \r\n\r\nATTEMPTING_RECOVERY\
        \ - System is trying to recover the service. \r\n\r\nUNKNOWN - Status is unknown.\
        \ \r\n"
      parameters:
      - name: serviceId
        in: path
        description: Unique Identifier for a service.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _attributes:
                  status: ALIVE
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/delegations/{delegateId}:
    put:
      tags:
      - Delegation Management
      summary: Delegation Modify
      description: Modifies the delegations for the specified user.
      parameters:
      - name: delegateId
        in: path
        description: Unique identifier for a delegation.
        required: true
        schema:
          type: string
      - name: systemUserId
        in: path
        description: Unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateRequestBean'
      responses:
        "200":
          description: OK. The request was successful
          content: {}
    delete:
      tags:
      - Delegation Management
      summary: Delegation Delete
      description: Deletes the delegation for the specified user.
      parameters:
      - name: delegateId
        in: path
        description: Unique identifier for a delegation.
        required: true
        schema:
          type: string
      - name: systemUserId
        in: path
        description: Unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entities/attributeslist:
    get:
      tags:
      - Search
      summary: Attribute Names Lookup
      description: "Returns the list of attributes configured for an objectclass .\
        \ This API is used in conjunction with form template REST API. ISIM forms\
        \ contains widgets in which the object class is configured by System Administrator.\
        \ \r\nThis object class is returned by \"form tempalate\" REST API in an encrypted\
        \ format. The API decrypts this object class and returns the list of attributes.\r\
        \n"
      parameters:
      - name: com.ibm.isim.rest.accesstoken
        in: header
        description: This mandatory header parameter contains the encrypted object
          class whose attributes are to be listed. This token will be generated by
          the "form template" REST API.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - attributeLabel: Administrative assistant
                _attributes:
                  name: secretary
                  label: Administrative assistant
              - attributeLabel: Business category
                _attributes:
                  name: businesscategory
                  label: Business category
              - attributeLabel: E-mail address
                _attributes:
                  name: mail
                  label: E-mail address
              - attributeLabel: Employee number
                _attributes:
                  name: employeenumber
                  label: Employee number
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers:
    get:
      tags:
      - System User Management
      summary: System User Search
      description: "Returns information about any system user that matches the specified\
        \ search criteria. \r\n\nThe \"name\" of the system user is returned in the\
        \ _links.self.title property. \r\n\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes that are returned in the \"_attributes\" property of each system\
        \ user. \r\n\nA requested attribute is not returned if the client does not\
        \ have permission to retrieve the attribute or if the value of the attribute\
        \ is null. \r\n\nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return each system\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. If the excludeAttributeFromResponse property in the rest.properties\
          \ is set to some attribute value, that attribute is excluded from the response\
          \ though it is specified in the attribute list. Specifying a value \"*\"\
          \ returns all of attributes except those that are specified in the excludeAttributeFromResponse\
          \ property. By default, all attributes other than those that are specified\
          \ in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search operation
          returns. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order for sorting the returned system\
          \ users. \"+\" represents ascending order while \"-\" represents descending\
          \ order. Note: The client is responsible to perform URL encoding if necessary.\
          \ Example - ?sort=%2Beruid (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: ITIM Manager
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                _attributes:
                  eruid: ITIM Manager
              - _links:
                  expiredPassword:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/password
                    title: Expired Password
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: chuck
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/constraints
                    title: Constraints
                _attributes:
                  eruid: chuck
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/{serviceId}:
    get:
      tags:
      - Service Management
      summary: Lookup Service
      description: Returns information about the specified service.
      parameters:
      - name: serviceId
        in: path
        description: Unique Identifier for a service.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the service.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" will return all of the attributes.\
          \ By default all the attributes are returned. Example - ?attributes=erservicename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma separated attributes that should be returned
          for a reference attribute of service (eg. owner). The specified attributes
          are returned in the "_embedded" section of the response. Specifying a value
          of '*' after reference attribute returns all the properties of the reference
          attribute. Example - ?embedded=owner.cn
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG
                    title: GSA
                _embedded:
                  owner:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Judith Hill
                    _attributes:
                      cn: Judith Hill
                _attributes:
                  erservicename: GSA
    put:
      tags:
      - Service Management
      summary: Service Modify
      description: "Modifies information for the specified service.\r\n\r\nBy using\
        \ this rest API you can perform following different operations along with\
        \ modification\r\nof the service information.\r\n1) Switch the connection\
        \ mode of the existing service from Automatic to Manual and vice versa.\r\n\
        2) Modify information for the manual work order details.\r\n3) If you trying\
        \ to switch the existing service from Automatic to Manual and do not provide\
        \ the\r\ndetails for the manualWorkOrderRequest then request adds the default\
        \ data for manual work order.\r\n"
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyServiceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful.
    delete:
      tags:
      - Service Management
      summary: Service Delete
      description: Deletes the specified service.
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles:
    get:
      tags:
      - Search
      summary: System Role (ITIM Group) Search
      description: "Returns information about any system roles that match the specified\
        \ search criteria. \r\nThe \"name\" of the system role is returned in the\
        \ _links.self.title property. \r\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes to return in the \"_attributes\" property of each system role.\
        \ \r\nA requested attribute is not returned if the client does not have permission\
        \ to retrieve the attribute or if the value of the attribute is null. \r\n\
        If an attribute has multiple values, the value of the corresponding property\
        \ is an array of the attribute's values.\r\n"
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for each system
          role. The specified attributes are returned in the "_attributes" property
          of each system role. Specifying a value of "*" returns all attributes. Example
          - ?attributes=errolename
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that should be returned
          by the search. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned system roles. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Berrolename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Help Desk Assistant
                _attributes:
                  errolename: Help Desk Assistant
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA0OCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Manager
                _attributes:
                  errolename: Manager
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMyxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                _attributes:
                  errolename: System Administrator
    post:
      tags:
      - ITIM Group Management
      summary: System Role Creation
      description: Creates a new system role with the specified attributes
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSystemRoleRequestBeanSwagger'
      responses:
        "201":
          description: OK. The request was successful
          content:
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/systemroles/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: AdminRole1111
                  ersystemrolecategory:
                    href: /itim/rest/v1.2/views/1
                    title: "1"
                  erparent:
                    href: /itim/rest/v1.2/organizationcontainers/organizations/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: isvgim
                _attributes:
                  errolename: AdminRole1111
                  description: new updated description for the systemrole
                  ersystemrolecategory: "1"
                  uuid: cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                  parentUUID: cc7ec53b-3305-41bb-9c6f-ce7b67115d9b
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/retrieve:
    put:
      tags:
      - Password Management
      summary: Retrieve Password
      description: "Retrieves the password of an account if the enrole.workflow.notifypasswordproperty\
        \ is set to false. This API needs the transaction ID to retrieve password.To\
        \ return the account password to the user, the shared secret has been validated."
      parameters:
      - name: transactionid
        in: query
        description: Specifies the transaction ID that is required to retrieve the
          password retrieval info.
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrievePasswordSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  accounts:
                  - _embedded:
                      service:
                        _attributes:
                          description: ""
                          erservicename: ITIM Service
                    _links:
                      self:
                        href: /itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    _attributes:
                      erUid: person1
                _links:
                  self:
                    href: /itim/rest/password/retrieve?transactionid=7347766403446710787
                _attributes:
                  password: password
        "400":
          description: Bad request. Invalid Transaction ID
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - severity: E
                text: CTGIMZ058E The transaction identifier that is referred in the
                  URI is invalid or expired.
                id: CTGIMZ058
                key: com.ibm.isim.rest.server.INVALID_TRANSACTION_ID
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /views:
    get:
      tags:
      - View Management
      summary: Search View
      description: "Returns information about Views that match the specified search\
        \ pattern in filter if any.\r\nAll Views are returned in response in case\
        \ no filter provided.\r\n\r\n By default, all attributes are returned. Use\
        \ attributes query string paramter to return specific attributes for View.\r\
        \n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each view. The specified attributes are returned in the \"_attributes\"\
          \ section. Example: attributes=id,name"
        schema:
          type: string
      - name: filter
        in: query
        description: "Specifies the search pattern for searching specific views. Example:\
          \ filter=Manager"
        schema:
          type: string
      responses:
        "200":
          description: OK.
          content:
            application/json:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/1
                    title: End User View
                _attributes:
                  name: End User View
                  id: "1"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/2
                    title: Manager View
                _attributes:
                  name: Manager View
                  id: "2"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/4
                    title: Help Desk View
                _attributes:
                  name: Help Desk View
                  id: "4"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/5
                    title: Service Owner View
                _attributes:
                  name: Service Owner View
                  id: "5"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/6
                    title: Auditor View
                _attributes:
                  name: Auditor View
                  id: "6"
    post:
      tags:
      - View Management
      summary: Create View
      description: "This API is used to create View. Required attributes: name, Optional\
        \ attributes: description, tasks"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRequestBean'
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResponseBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/quicksearches:
    get:
      tags:
      - Search
      summary: Request Quick Searches
      description: "Quick search categories help you to narrow the scope of your search\
        \ so that you can locate the request that you want to view.\r\nReturns limited\
        \ results based on search query."
      parameters:
      - name: limit
        in: query
        description: "Specifies the maximum number of items per category to return.\
          \ If unspecified, the limit is system defined. A value of 0 means unlimited,\
          \ which is constrained by a system limit. Example - ?limit=5"
        schema:
          type: string
      responses:
        "200":
          description: "OK. The request was successful \r\n\r\n[Please click here\
            \ to view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/requests/quicksearches?limit=5
                _attributes:
                  requestees:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: Chuck Riegle
                  statuses:
                  - text: Pending
                    value: PENDING
                    key: RequestAuditData.Status.PENDING
                  accesses:
                  - _links:
                      self:
                        href: /itim/rest/access/376511317273827596
                        title: Business Partner Connect
                  - _links:
                      self:
                        href: /itim/rest/access/376511866909527916
                        title: North Region File Share
                  actions:
                  - text: Manage Access
                    value: ACCESS_BATCH_REQUEST
                    key: RequestAuditData.Action.ACCESS_BATCH_REQUEST
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /itim/cm/v1.0/system/tenant/{id}:
    delete:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Remove all campaign metadata of a specific tenant.
      description: "The api to remove all campaign metadata of a specific tenant v1.0\
        \ (v1.0/system/tenant/{id}) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: DELETE /v2.0/system/tenant/{id}<br/>Internal\
        \ usage."
      operationId: deleteTenant
      parameters:
      - name: id
        in: path
        description: Tenant ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant where request for deletion of all campaign metadata
          is submitted.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "204":
          description: Tenant Cleaned Up
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific campaign instance.
      description: "The api to get a specific campaign instance v1.0 (v1.0/admin/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}<br/>Get a specific campaign instance.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminGetCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Modify specific campaign instance.
      description: "The api to modify a specific campaign instance v1.0 (v1.0/admin/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/instances/{id}<br/>Modify a specific campaign instance. If\
        \ called by application owner, the API can modify only instances that the\
        \ owner created or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: replacev1
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign instance payload details:<br><br>- <strong>id</strong>:\
          \ Campaign instance ID.<br>- <strong>event</strong>: The action to apply\
          \ to the campaign instance.<br><br><br>Allowable values for <strong>event</strong>\
          \ are: delete, pause, restart, runnow.<br><strong>delete</strong>: Transitions\
          \ the campaign instance to a cancelled state, indicating it is no longer\
          \ active.<br><strong>pause</strong>: Temporarily halts a running campaign\
          \ instance, putting it in a paused state.<br><strong>restart</strong>: Resumes\
          \ a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignInstanceInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific assignment.
      description: "The api to get a specific assignment v1.0 (v1.0/self/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/{id}<br/>Get a specific assignment for a campaign\
        \ reviewer OR supervisor.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: selfGetAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given assignment.
      description: "The api to modify a specific assignment v1.0 (v1.0/self/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/assignments/{id}<br/>API for a reviewer to modify a specific\
        \ assignment.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: selfReplace
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>reviewer</strong>: Details about\
          \ the campaign reviewer. Required when redirecting an assignment to another\
          \ user.<br>- <strong>operation</strong>: The operation to be executed.<br><br><br>Allowable\
          \ values for <strong>operation</strong> are: approved, rejected, redirected,\
          \ escalated.<br><strong>approved</strong>: Approve an assignment.<br><strong>rejected</strong>:\
          \ Reject an assignment.<br><strong>redirected</strong>: Redirect an assignment.<br><strong>escalated</strong>:\
          \ Escalate an assignment.<br><br>- <strong>justification</strong>: A justification\
          \ for the action taken on the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{id}/preview:
    post:
      tags:
      - Certification Campaign instances v2.0
      summary: Creates a preview campaign configuration for the specified tenant.
      description: "The API is used to create a preview campaign configuration for\
        \ the specific tenant.<br/>The administrator managing a specific tenant can\
        \ create a preview campaign configurations for that tenant.<br/>The owners\
        \ of the application can only create a preview campaign configuration for\
        \ their owned applications.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: generatePreviewCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve instances corresponding to a specific campaign
        configuration.
      description: "The api to get instances to a specific campaign configuration\
        \ v1.0 (v1.0/admin/campaigns/{id}/instances) is deprecated. The end of life\
        \ is 31-Dec-2025. Use the following alternative API: GET /v2.0/campaigns/{id}/instances<br/>Get\
        \ campaign instances corresponding to a given campaign configuration. If called\
        \ by application owner, the API can only get instances that the owner created\
        \ or which contain at least one Application owned by the owner.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves statistics of specific assignments within a given instance
        from the specific tenant.
      description: "The API is used to retrieve aggregated statistics of assignments\
        \ in a given campaign instance for a reviewer or supervisor. Filters can be\
        \ applied against the assignments.</br>The owners of the application can retrieve\
        \ aggregated statistics of the campaign instance that is created by them or\
        \ includes at least one application owned by them.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: assignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseAssignmentStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v1.0/self/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve instances corresponding to a specific campaign
        configuration.
      description: "The api to get instances of a specific campaign v1.0 (v1.0/self/campaigns/{id}/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/{id}/instances<br/>Get campaign instances corresponding\
        \ to a given campaign configuration for a reviewer or supervisor. At least\
        \ one record must be associated with the reviewer or supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve specific campaign instance.
      description: "The api to get specific campaign instance v1.0 (v1.0/self/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}<br/>Get a specific campaign instance with\
        \ at least one record associated with a reviewer or supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfGetCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/self/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments.
      description: "The api to get statistics of specific assignments v1.0 (v1.0/self/assignments/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/stats<br/>Get aggregated statistics about assignments\
        \ in a specific instance for a reviewer OR supervisor. Filters could be applied\
        \ to refine the entities, to use, for generating statistics.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfAssignmentsStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/swagger.{type}:
    get:
      parameters:
      - name: type
        in: path
        required: true
        schema:
          pattern: json|yaml
          type: string
      responses:
        "200":
          description: OK
  /itim/cm/v1.0/admin/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific campaign instances.
      description: "The api to get statistics of specific campaign instances v1.0\
        \ (v1.0/admin/instances/stats) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: GET /v2.0/instances/stats<br/>Get aggregated\
        \ statistics about campaign instances depending on the specified filter. If\
        \ called by an application owner, the API returns statistics of the instances\
        \ that the owner created or that contain at least one application that the\
        \ owner owns.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: adminInstancesStats
      parameters:
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/clean/staleinstances:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        clean the stale instances in certification manager schema.
      operationId: rundeckJobtoCleanStaleInstances
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/campaigns/{id}:
    get:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific campaign configuration.
      description: "The api to get a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/{id}<br/>Get a specific campaign configuration\
        \ and manage it. If called by an application owner, the API can retrieve only\
        \ configurations that the owner created or that contain at least one  application\
        \ that the owner owns.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminGetCampaignById
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfigurationOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Edit specific campaign configuration.
      description: "The api to modify a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/campaigns/{id}<br/>Modify a specific campaign configuration.\
        \ If called by an application owner, the API can modify only campaigns that\
        \ the owner created or that the associated applications are all owned by the\
        \ owner.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: replace
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration payload details:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low ).<br>- <strong>name</strong>: Name of the campaign.<br>-\
          \ <strong>description</strong>: Description of the campaign.<br>- <strong>reviewer</strong>:\
          \ Information about the campaign reviewer.<br>- <strong>applications</strong>:\
          \ List of applications the campaign certifies.<br>Note: This is a required\
          \ field, however, in case of User entitlement campaigns, either the 'Applications'\
          \ or 'Entitlement' or both must be specified. <br>- <strong>allowlist</strong>:\
          \ List of users or groups allowed for the certification. You cannot specify\
          \ the block list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts.<br>- <strong>creationDate</strong>: Creation date of the campaign\
          \ configuration.<br>- <strong>duration</strong>: The duration (in milliseconds)\
          \ for which each campaign instance remains open.<br>- <strong>frequency</strong>:\
          \ Frequency of campaign instance.<br>- <strong>runEvery</strong>: Frequency\
          \ unit for campaign instance (days or months).<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br>- <strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br>- <strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br>- <strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>:A flag indicating that the\
          \ campaign is continuous.<br>- <strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>id</strong>: Campaign configuration\
          \ ID.<br>- <strong>rev</strong>: Campaign configuration revision.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfigurationInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfigurationOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
    delete:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Delete specific campaign configuration.
      description: "The api to delete a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: DELETE /v2.0/campaigns/{id}<br/>Delete a specific campaign configuration.\
        \ If called by an application owner, the API can delete only  campaigns that\
        \ the owner created or that the associated applications are all owned by the\
        \ owner.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: deletev1
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "204":
          description: Campaign Configuration is deleted
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific assignment.
      description: "The api to get a specific assignment v1.0 (v1.0/admin/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/{id}<br/>Get a specific assignment. If called\
        \ by application owner, the API can retrieve assignments only for the campaigns\
        \ he created or that contain at least one Application he owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminGetAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given assignment.
      description: "The api to modify a specific assignment v1.0 (v1.0/admin/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/assignments/{id}<br/>Modify a specific assignment. If called\
        \ by an application owner, the API can modify assignments only for campaigns\
        \ that the owner created or that contain at least one application that the\
        \ owner owns.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: adminReplace
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>reviewer</strong>: Details about\
          \ the campaign reviewer. Required when redirecting an assignment to another\
          \ user.<br>- <strong>operation</strong>: The operation to be executed.<br><br><br>Allowable\
          \ values for <strong>operation</strong> are: approved, rejected, redirected,\
          \ escalated.<br><strong>approved</strong>: Approve an assignment.<br><strong>rejected</strong>:\
          \ Reject an assignment.<br><strong>redirected</strong>: Redirect an assignment.<br><strong>escalated</strong>:\
          \ Escalate an assignment.<br><br>- <strong>justification</strong>: A justification\
          \ for the action taken on the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the assignment statistics of the campaign instance from the
        specific tenant.
      description: "The API is used to retrieve aggregated statistics of assignments\
        \ in a given campaign instance. Filters could be applied to refine the entities\
        \ to use for generating statistics.</br>The owners of the application can\
        \ retrieve aggregated statistics of the campaign instance that is created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: assignmentsStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseAssignmentStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves a list of campaign configurations from the specific tenant.
      description: "The API is used to retrieve list of campaign configurations from\
        \ the specific tenant.<br/> The administrator managing a specific tenant can\
        \ see the list of all campaign configurations created for that tenant.<br/>\
        \ The owners of the application can access the list of campaign configurations\
        \ that are created by them or includes at least one application owned by them.<br/>Unspecified\
        \ filter parameters are treated as having the default values.<br/>Every provided\
        \ parameter value is considered as an extra filter for the search criteria.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: campaignConfigurationFind
      parameters:
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign configuration: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: draft
        in: query
        description: "The filter for getting campaign configuration in draft mode:\
          \ yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "A generic filter which filters response containing the passed\
          \ string in any of the following attribute: name (Campaign configuration\
          \ name)."
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign configuration: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign configuration priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign configuration that is used to\
          \ sort results. The possible values are: owner, launchdate, name, type,\
          \ priority, createdOn.<br><br><br>When you provide,<br><strong>owner</strong>:The\
          \ owner's fullName is used for sorting.<br><strong>launchdate</strong>:The\
          \ campaign configuration launchDate timestamp is used for sorting.<br><strong>name</strong>:\
          \ The campaign configuration name is used for sorting.<br><strong>type</strong>:The\
          \ campaign configuration type is used for sorting.<br><strong>priority</strong>:The\
          \ campaign configuration priority is used for sorting.<br><strong>createdOn</strong>:\
          \ The campaign configuration creationDate timestamp is used for sorting."
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: type
        in: query
        description: "This is a deprecated campaign configuration type filter. Use\
          \ 'types' query parameter instead. If both the 'type' and 'types' query\
          \ parameter are used, then the 'types' selected value is considered."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
        deprecated: true
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignConfig'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign configurations v2.0
      summary: Creates a campaign configuration for the specific tenant.
      description: "The API is used to create a campaign configuration for the specific\
        \ tenant.<br/>The administrator managing a specific tenant can create campaign\
        \ configurations for that tenant.<br/>The application owners can create a\
        \ campaign configuration only for their owned applications.<br/>The optional\
        \ reviewer, if specified, can be any existing userId present for that tenant.<br/>\
        \ Allowlist or blocklist must specify only groups in case of groupassignment\
        \ campaign.<br/>Entitlements required: manageAccessCertification [Manage Access\
        \ Certification]."
      operationId: createCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          $ref: '#/components/schemas/CampaignConfiguration'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant for which campaign configuration creation request
          is submitted.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration create request payload details:<br><br>-\
          \ <strong>owner</strong>: Information about the campaign owner. <br>This\
          \ is a required field.<br>- <strong>type</strong>: Type of campaign (For\
          \ example, userassignment, groupassignment, account, groupmembership). Default\
          \ type is userassignment.<br>- <strong>priority</strong>: Priority of the\
          \ campaign (For example, high, medium, low ). Default priority is medium.<br>-\
          \ <strong>name</strong>: Name of the campaign. <br>This is a required field\
          \ with maximum length of 256 characters.<br>- <strong>description</strong>:\
          \ Description of the campaign.<br>- <strong>reviewer</strong>: Information\
          \ about the campaign reviewer.<br>- <strong>applications</strong>: List\
          \ of applications that the campaign certifies.<br>Note: This is a required\
          \ field for Group entitlement and Account campaign, however, in case of\
          \ User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. This is not required for Group Membership.<br>-\
          \ <strong>userFilter</strong>: It is set to filter the list of included\
          \ or excluded users or groups for certification. <br><br><br>In case of\
          \ user entitlement campaign, you can either specify userConditionSet or\
          \ userInclusionList or userExclusionList in userFilter.<br><br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts. <br>The launchDate must be in the future, including the time,\
          \ relative to the current date and time. <br>This field is required when\
          \ runNow is false.<br>- <strong>creationDate</strong>: Creation date of\
          \ the campaign configuration. Default value is the current Date.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open. <br>Duration should not be added when \"continuous\" is true. <br>Duration\
          \ should be greater than 30 seconds if \"continuous\" is false. <br>Duration\
          \ must be less than the frequency if campaign scheduled (\"runNow\" is false).<br>-\
          \ <strong>frequency</strong>: Frequency of campaign instance. <br>Frequency\
          \ should not be added when the \"runNow\" flag is set to true. <br>This\
          \ field is required when \"runNow\" flag is set to false.<br>It should contain\
          \ a valid cron expression<br>Valid cron expression: must follow cron syntax\
          \ (e.g., \"*/5\", \"0 0 * * *\"). The valid range for each field within\
          \ the frequency pattern is as follows:<br>&emsp; - Minute: 0-59<br>&emsp;\
          \ - Hour: 0-23<br>&emsp; - Day of Month: 1-31<br>&emsp; - Month: 1-12 (or\
          \ JAN-DEC)<br>&emsp; - Day of Week: 0-6 (or SUN-SAT)<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately. Default value for runNow is true.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes. <br>Allowable values for <strong>overdueAction</strong>\
          \ are: rejectAll, approveAll, doNothing. <br>Default overdueAction is doNothing.<br>-\
          \ <strong>mitigationAction</strong>: Action after a campaign closes to avoid\
          \ open records. <br>Allowable value for <strong>type</strong> in <strong>mitigationAction</strong>\
          \ are: none, reminder. <br>reminderInterval should be shorter than durantion.<br>Default\
          \ value is { type = none, reminderInterval=0 }.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments in the absence of a suitable reviewer.<br>-\
          \ <string>preview</strong>: A flag indicating that the campaign is in preview\
          \ mode and not open to reviewers. Default value for preview is false.<br>-\
          \ <strong>continuous</strong>: A flag indicating that the campaign is continuous.\
          \ Default value for continuous is 'false'.<br>- <strong>continuousCampaignMetaData</strong>:\
          \ Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;Default\
          \ overdueAction is 'doNothing'<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff). <br>signOff should be auto when \"continuous\"\
          \ is true.<br>Default signOff policy is eoc.<br><br><br>Allowable values\
          \ for <strong>signOff</strong> are: auto, manual, eoc or no_signoff.<br><strong>auto</strong>:\
          \ This setting would mean immediate sign-off. Actions taken by the approver\
          \ in terms of approval or rejection are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ This setting would mean a manual sign-off. The certifier can decide whether\
          \ to enforce the action immediately OR at the end of the campaign).<br><strong>eoc</strong>:\
          \ The setting would mean sign-off towards the end of the campaign. Actions\
          \ taken by the approver in terms of approval or rejection are persisted\
          \ till the Due date of the campaign and then rolled out together).<br><strong>no_signoff</strong>:\
          \ Actions are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign. <br>The field is required\
          \ when allowSupervisorEscalation is true.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>- <strong>reviewerType</strong>:\
          \ The Reviewer identifer for the campaign.<br>Following are the values corresponding\
          \ to the campaign types:<br>1.userassignment - usermanager, specific, self,\
          \ applicationowner<br>2.groupassignment - applicationowner, specific<br>3.account\
          \ - usermanager, specific, self, applicationowner<br>4.groupmembership -\
          \ usermanager, specific<br>In case you are specifying the reviewer explicitly,\
          \ then provide the value as <strong>specific</strong> in the reviewerType\
          \ field.<br>In case you are creating a self certification campaign, then\
          \ provide the value as <strong>self</strong> in the reviewerType field.\
          \ reviewerType value as self is applicable only for userassignment and account\
          \ type of campaigns.<br><br>Allowable values for <strong>reviewerType</strong>\
          \ are: usermanager, applicationowner, specific, self.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: true
      responses:
        "201":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign configurations v2.0
      summary: Perform operations on a list of campaign configurations that belong
        to a specified tenant.
      description: "The API is used to perform operations on a list of campaign configurations\
        \ that belong to a specific tenant.<br/>The administrator managing a specified\
        \ tenant can perform operations on a list of all campaign configurations created\
        \ for that tenant.<br/>The owners of the application can update a list of\
        \ campaign configurations that are created by them or includes at least one\
        \ application owned by them.<br/>Entitlements required: tenantadmin [Tenant\
        \ Administrator]."
      operationId: bulkReplacev2
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            description: Representation of a generic payload of a Bulk REST API.
            required:
            - op
            - path
            type: object
            properties:
              op:
                enum:
                - replace
                - remove
                - delete
                type: string
              path:
                type: string
              value:
                $ref: '#/components/schemas/JsonNode'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign configurations on which to execute specified\
          \ operations:<br>Request payload details:<br><br><strong>op</strong>: Operation\
          \ to be performed on the given campaign configuration.<br>Allowable values\
          \ for <strong>op</strong> are: replace, remove, delete, cancel.<br><strong>replace</strong>:\
          \ Update the campaign configuration.<br><strong>remove</strong>: Mark the\
          \ campaign configuration to removal from the database.<br><strong>delete</strong>:\
          \ Delete the campaign configuration immediately from the database.<br><strong>cancel</strong>:\
          \ Cancel running and all future instances of this campaign.<br><br><strong>path</strong>:\
          \ Campaign configuration ID.<br><br><strong>value</strong>: Campaign configuration\
          \ details. The field is required when executing the 'replace' operation.<br><strong>owner</strong>:\
          \ Information about the campaign owner.<br><strong>type</strong>: Type of\
          \ campaign (For example, userassignment, groupassignment, account, groupmembership).<br><strong>priority</strong>:\
          \ Priority of the campaign (For example, high, medium, low ).<br><strong>name</strong>:\
          \ Name of the campaign.<br><strong>description</strong>: Description of\
          \ the campaign.<br><strong>reviewer</strong>: Information about the campaign\
          \ reviewer.<br>- <strong>applications</strong>: List of applications that\
          \ the campaign certifies.<br>Note: This is a required field for Group entitlement\
          \ and Account campaign, however, in case of User entitlement campaigns,\
          \ either the 'Applications' or 'Entitlement' or both must be specified.\
          \ This is not required for Group Membership. <br>- <strong>userFilter</strong>:\
          \ It is set to filter the list of included or excluded users or groups for\
          \ certification. <br><br><br>In case of user entitlement campaign, you can\
          \ either specify userConditionSet or userInclusionList or userExclusionList\
          \ in userFilter.<br><br>- <strong>entitlementFilter</strong>: It is set\
          \ to filter the list of included or excluded entitlements for certification.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br><strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br><strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br><strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br><strong>frequency</strong>: Frequency of campaign instance.<br><strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br><strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br><strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br><strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br><strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br><strong>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br><strong>continuous</strong>:A flag indicating that the campaign\
          \ is continuous. Default value for continuous is 'false'.<br><strong>continuousCampaignMetaData</strong>:\
          \ Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br><strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br><strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br><strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkOperationCampaign'
        required: true
      responses:
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestResponse'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the list of all assignments associated with the specified
        campaign instance from the specific tenant.
      description: "The API is used to retrieve the list of all assignments associated\
        \ with the specified campaign instance from the specific tenant.</br>The owners\
        \ of the application can retrieve the list of all assignments associated with\
        \ the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: campaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name .<br> groupmembership: provide group name. <br> account: Provide\
          \ account userName.<br><br>Provide multiple values in new lines or separated\
          \ by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName, entitlement.name"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the group Ids.<br>For following campaign types:\
          \ <br>userassignment: The results are filtered based on the discretionary\
          \ groups .<br> groupassignment/groupmembership: The results are filtered\
          \ based on the groups that are attached to the campaign. <br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ entitlementname, accountstatus, reviewer, lastaction, type, creationdate,\
          \ groupsid.<br><br><br>When you provide,<br><strong>application</strong>:\
          \ The application name is used for sorting.<br><strong>assignee</strong>:\
          \ The assignee fullName is used for sorting.<br><strong>accountname</strong>:\
          \ The account userName is used for sorting.<br><strong>entitlementname</strong>:\
          \ The entitlement name is used for sorting.<br><strong>accountstatus</strong>:\
          \ The account finerStatus is used for sorting.<br><strong>reviewer</strong>:\
          \ The reviewer name is used for sorting.<br><strong>lastaction</strong>:\
          \ The last_action is used for sorting.<br><strong>type</strong>: The entitlement\
          \ type is used for sorting.<br><strong>creationdate</strong>: The campaign\
          \ assignment creationDate timestamp is used for sorting.<br><strong>groupsid</strong>:\
          \ The campaign assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the list of a assignments associated with the specified campaign
        instance from the specific tenant.
      description: "The API is used to retrieve the list of a assignments associated\
        \ with the specified campaign instance from the specific tenant.</br>The owners\
        \ of the application can retrieve the list of a assignments associated with\
        \ the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: campaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter'
        required: false
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v2.0/reviewer/types/{campaigntype}:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves the details of the Reviewer Types available for the specific
        Campaign Type.
      description: "The API is used to retrieve the campaign Reviewer Types based\
        \ on the Campaign Type.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getReviewerTypesByCampaignType
      parameters:
      - name: campaigntype
        in: path
        description: "The valid unique identifier of type campaign. Allowed values\
          \ are 'userassignment', 'groupassignment', 'account' and 'groupmembership'."
        required: true
        schema:
          type: string
      - name: continuous
        in: query
        description: 'The filter for retrieving the details of the Reviewer Types
          available for the continuous campaign configuration:'
        schema:
          default: "no"
          enum:
          - "yes"
          - "no"
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign instances.
      description: "The api to get campaign instances v1.0 (v1.0/admin/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances<br/>Get a list of campaign instances. If called\
        \ by an application owner, the API can get only instances associated to configurations\
        \ he created or containing at least one Application he owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "To filter based on the overall state of the campaign instance.\
          \ This filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: supervisorsId
        in: query
        description: "The filter for the campaign supervisor.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Modify campaign instances.
      description: "The api to Modify campaign instances v1.0 (v1.0/admin/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instances<br/>Modify a set of campaign instances. If called\
        \ by application owner, the API can modify only instances that the owner created\
        \ or that the associated applications are all owned by the owner.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: bulkReplacev1
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceInput'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign instances to modify:<br>Campaign instance payload\
          \ details:<br><br>- <strong>id</strong>: Campaign instance ID.<br>- <strong>event</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>event</strong> are: delete, pause, restart, runnow, end, harddelete.<br><strong>delete</strong>:\
          \ Transitions the campaign instance to a cancelled state, indicating it\
          \ is no longer active.<br><strong>pause</strong>: Temporarily halts a running\
          \ campaign instance, putting it in a paused state.<br><strong>restart</strong>:\
          \ Resumes a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance.<br><strong>end</strong>:\
          \ Transitions a running campaign to a completion state, before the designated\
          \ completion date. This is mainly to enforce the campaign closure based\
          \ actions immediately.<br><strong>harddelete</strong>: Delete the campaign\
          \ instance immediately from the database.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignInstanceInput'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaign/{id}/assignments:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Add new assignments to a continuous campaign.
      description: "The api to add new assignments v1.0 (v1.0/admin/campaign/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>API for adding new assignments\
        \ in a continuous campaign. If called by application owner, API can add only\
        \ assignments for campaigns he created or pertaining to applications he owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access  Work Flows]."
      operationId: adminBulkAdditionByConfig
      parameters:
      - name: id
        in: path
        description: Campaign configuration Id.
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of new assignments to be added to a continuous campaign\
          \ instance:<br>Add campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>applicationId</strong>: Application\
          \ identifier<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAssignment'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: "Deprecated - Retrieve all assignments, in a given campaign instance."
      description: "The api to get a specific assignment v1.0 (v1.0/self/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance for a reviewer OR supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name.<br> account: Provide account userName.<br><br>Provide multiple values\
          \ in new lines or separated by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the discretionary groups.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting.<br><strong>groupsid</strong>: The campaign\
          \ assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance.
      description: "The api to get all assignments for a campaign instance v1.0 (v1.0/self/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance for a reviewer OR supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter1'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign statistics.
      description: "The api to get campaign statistics v1.0 (v1.0/admin/campaigns/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/stats<br/>Get campaign statistics. If called by\
        \ an application owner, the API returns the details for campaigns that the\
        \ owner created or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application."
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/update/campaignconfigschema:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        add reviewerType field and it's values in json for certification manager configuration
        schema.
      operationId: rundeckJobtoUpdateCampaignConfigSchema
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/campaign/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the statistics for the specified type of resource from the
        specific tenant.
      description: "The API is used to retrieve the statistics for the specific type\
        \ of resource from the specific tenant.</br>The owners of the application\
        \ can retrieve the statistics of the resource that is created by them or includes\
        \ at least one application owned by them.Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: campaignStatsv2
      parameters:
      - name: resourceType
        in: query
        description: Filter by the resource type.
        schema:
          default: all
          enum:
          - all
          - configuration
          - instance
          type: string
      - name: state
        in: query
        description: Filter for campaign state.
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - draft
          type: array
          items:
            type: string
      - name: types
        in: query
        description: "The filter for the campaign resource type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/instances/{id}/preview:
    post:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Create a preview campaign.
      description: "The api to create a preview campaign v1.0 (v1.0/admin/instances/{id}/preview)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/preview<br/>Create a preview campaign from\
        \ the specified campaign instance.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminGeneratePreviewCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instance/{id}/assignments:
    patch:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates the list of assignments on a specified campaign instance that
        belong to a specified tenant.
      description: "The API is used to update the list of assignments on a specified\
        \ campaign instance that belong to a specified tenant.</br>The owners of the\
        \ application can update the list of assignments on a campaign that is created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Work Flows]."
      operationId: bulkReplacev2
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for <strong>operation</strong>\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentUpdateAction'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instance/{id}/assignments:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Add new assignments to a continuous campaign instance.
      description: "The api to add new assignments v1.0 (v1.0/admin/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>API for adding new assignments\
        \ in a specific instance of a continuous campaign. If called by an application\
        \ owner, the API can add assignments only for campaigns that the owner created\
        \ or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Work Flows]."
      operationId: adminBulkAddition
      parameters:
      - name: id
        in: path
        description: Campaign instance Id
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of new assignments to be added to a continuous campaign\
          \ instance:<br>Add campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>applicationId</strong>: Application\
          \ identifier<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAssignment'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given set of assignments.
      description: "The api to modify a given set of assignments v1.0 (v1.0/admin/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instance/{id}/assignments<br/>API to make bulk update of\
        \ the specified assignments. If called by an application owner, the API can\
        \ modify only assignments for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessWorkflow [Manage Access Work Flows]."
      operationId: adminBulkReplace
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for operation\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instance/{id}/assignments/refresh:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Refresh assignments in a continuous campaign.
      description: "The api to refresh assignments v1.0 (v1.0/admin/instance/{id}/assignments/refresh)\
        \ is deprecated. The end of life is 31-Dec-2025.<br/>API for refreshing assignments\
        \ in a continuous campaign.<br/>Entitlements required: manageAccessWorkflow\
        \ [Manage Access  Work Flows]."
      operationId: refreshAssignments
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/update/reactivateDeleted:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Reactivate deleted campaigns for which scheduled or running instances
        are present.
      description: This API will be invoked through rundeck environment.This API will
        add reviewerType field and it's values in json for certification manager configuration
        schema.
      operationId: rundeckJobtoEnableDeletedBadCampaign
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RundeckOperationResponse'
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the details of the assignment from the specific tenant.
      description: "The API is used to retrieve the assignment details from the specific\
        \ tenant.<br/>The owners of the application can retrieve the details of the\
        \ assignment of the campaign that is created by them or includes at least\
        \ one application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates a specified assignment from the specific tenant.
      description: "The API is used to update a specific assignment from the specific\
        \ tenant.<br/>The owners of the application can update a specific assignment\
        \ of the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: replacev2
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>reviewer</strong>:\
          \ Details about the campaign reviewer. Required when redirecting an assignment\
          \ to another user.<br>- <strong>operation</strong>: The operation to be\
          \ executed.<br><br><br>Allowable values for <strong>operation</strong> are:\
          \ approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentActionReplaceInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/clean/staleinstances:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Update the certification manager schema.
      description: "The api to clean stale instances in the certification manager\
        \ schema v1.0 (v1.0/clean/staleinstances) is deprecated. The end of life is\
        \ 31-Dec-2025. Use the following alternative API: PUT /v2.0/clean/staleinstances<br/>This\
        \ API will be invoked through rundeck environment.This API will clean the\
        \ stale instances in certification manager schema."
      operationId: rundeckJobtoCleanStaleInstancesv1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: Tenant
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will receive the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/self/instance/{id}/assignments:
    patch:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given set of assignments.
      description: "The api to modify a given set of assignments v1.0 (v1.0/self/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instance/{id}/assignments<br/>API for a reviewer to make\
        \ bulk update of the specified assignments.<br/>Entitlements required: manageAccessWorkflow\
        \ [Manage Access Work Flows]."
      operationId: selfBulkReplace
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for operation\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns:
    get:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Retrieve the campaign configurations.
      description: "The api to get a campaign configurations v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns<br/>Get campaign configurations and manage them.\
        \ The administrator can see all the campaign configurations for the specified\
        \ tenant. Application owner can see only the campaigns he created OR those\
        \ containing at least one Application he owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignConfigurationFind
      parameters:
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign configurations: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign configurations that\
          \ contain the passed string in one of the following attributes: name (Campaign\
          \ configuration name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign configurations: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign configuration priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign configuration that is used to\
          \ sort results. The possible values are: owner, launchdate, name, type,\
          \ priority.<br><br><br>When you provide,<br><strong>owner</strong>:The owner's\
          \ fullName is used for sorting.<br><strong>launchdate</strong>:The launchDate\
          \ timestamp is used for sorting.<br><strong>name</strong>: The campaign\
          \ configuration name is used for sorting.<br><strong>type</strong>:The campaign\
          \ configuration type is used for sorting.<br><strong>priority</strong>:The\
          \ campaign configuration priority is used for sorting.<br><strong>createdOn</strong>:\
          \ The campaign configuration creationDate timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: type
        in: query
        description: "The filter for the campaign configuration type: userassignment,\
          \ groupassignment, or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListResponseCampaignConfig'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Create a campaign configuration.
      description: "The api to create a campaign configuration v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/campaigns<br/>Create a campaign configuration. The optional\
        \ reviewer, if specified, can be any existing userId. For account campaign,\
        \ blocklist contains default \"unmatched\" account statuses. If you want to\
        \ retrieve unmatched accounts as well, you must explicitly add them into the\
        \ allowlist.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: adminCreateCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          $ref: '#/components/schemas/CampaignConfigurationInput'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant for which campaign configuration creation request
          is submitted.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration payload details:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low ).<br>- <strong>name</strong>: Name of the campaign.<br>-\
          \ <strong>description</strong>: Description of the campaign.<br>- <strong>reviewer</strong>:\
          \ Information about the campaign reviewer.<br>- <strong>applications</strong>:\
          \ List of applications the campaign certifies.<br>Note: This is a required\
          \ field, however, in case of User entitlement campaigns, either the 'Applications'\
          \ or 'Entitlement' or both must be specified. <br>- <strong>allowlist</strong>:\
          \ List of users or groups allowed for the certification. You cannot specify\
          \ the block list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts.<br>- <strong>creationDate</strong>: Creation date of the campaign\
          \ configuration.<br>- <strong>duration</strong>: The duration (in milliseconds)\
          \ for which each campaign instance remains open.<br>- <strong>frequency</strong>:\
          \ A UNIX or Linux Cron-compatible string that defines the start of subsequent\
          \ instances. It must be a valid cron expression.<br>Valid cron expression:\
          \ must follow cron syntax (e.g., \"*/5\", \"0 0 * * *\"). The valid range\
          \ for each field within the frequency pattern is as follows:<br>&emsp; -\
          \ Minute: 0-59<br>&emsp; - Hour: 0-23<br>&emsp; - Day of Month: 1-31<br>&emsp;\
          \ - Month: 1-12 (or JAN-DEC)<br>&emsp; - Day of Week: 0-6 (or SUN-SAT)<br>-\
          \ <strong>runEvery</strong>: Frequency unit for campaign instance (days\
          \ or months).<br>- <strong>runNow</strong>: Flag to start the campaign immediately.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes.<br>- <strong>mitigationAction</strong>: Action\
          \ after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>:A flag indicating that the\
          \ campaign is continuous.<br>- <strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are: auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfigurationInput'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Edit campaign configurations.
      description: "The api to modify a set of campaign configurations v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/campaigns<br/>Modify a set of campaign configurations.\
        \ If called by an application owner, the API can modify campaigns that the\
        \ owner created or whose associated applications are all owned by him.<br/>Entitlements\
        \ required: tenantadmin [Tenant Administrator]."
      operationId: bulkReplace
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            description: Representation of a generic payload of a Bulk REST API.
            required:
            - op
            - path
            type: object
            properties:
              op:
                enum:
                - replace
                - remove
                - delete
                type: string
              path:
                type: string
              value:
                $ref: '#/components/schemas/JsonNode'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign configurations to modify:<br>Campaign configuration\
          \ payload details:<br><br>- <strong>op</strong>: Operation to be performed\
          \ on the given campaign configuration.<br>Allowable values for <strong>op</strong>\
          \ are: replace, remove, harddelete, cancel.<br><br><br><strong>replace</strong>:\
          \ Modify the campaign configuration.<br><strong>remove</strong>: Mark the\
          \ campaign configuration for removal from the database.<br><strong>harddelete</strong>:\
          \ Delete the campaign configuration immediately from the database.<br><strong>cancel</strong>:\
          \ Cancel running and all future instances of this campaign.<br><br><br>-\
          \ <strong>path</strong>: Campaign configuration ID.<br>- <strong>value</strong>:\
          \ Campaign configuration details.<br><br><br><strong>owner</strong>: Information\
          \ about the campaign owner.<br><strong>type</strong>: Type of campaign (For\
          \ example, userassignment, groupassignment, account).<br><strong>priority</strong>:\
          \ Priority of the campaign (For example, high, medium, low ).<br><strong>name</strong>:\
          \ Name of the campaign.<br><strong>description</strong>: Description of\
          \ the campaign.<br><strong>reviewer</strong>: Information about the campaign\
          \ reviewer.<br>- <strong>applications</strong>: List of applications the\
          \ campaign certifies.<br>Note: This is a required field, however, in case\
          \ of User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. <br>- <strong>allowlist</strong>: List of users\
          \ or groups allowed for the certification. You cannot specify the block\
          \ list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br><strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br><strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br><strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br><strong>frequency</strong>: Frequency of campaign instance.<br><strong>runEvery</strong>:\
          \ Frequency unit for campaign instance (days or months).<br><strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br><strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br><strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br><strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br><strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br><string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br><strong>continuous</strong>:A flag indicating that the campaign\
          \ is continuous.<br><strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br><strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br><strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br><strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br><strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkOperationCampaign'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments within a given
        instance.
      description: "The api to get statistics of specific assignments within a given\
        \ instance v1.0 (v1.0/admin/instances/{instanceId}/assignments/resources)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{instanceId}/assignments/resources<br/>Get statistics\
        \ about assignment resources, for a specific campaign instance, depending\
        \ on the specified filter. If called by application owner, the API returns\
        \ statistics for the instance, he created or at least has one application\
        \ he owns.<br/>Entitlements required: manageAccessCertification [Manage Access\
        \ Certification]."
      operationId: adminAssignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instances:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the list of a campaign instances from the specific tenant.
      description: "The API is used to retrieve the list of a campaign instances from\
        \ the specific tenant.<br/>The owners of the application can access the list\
        \ of campaign instances that are created by them or includes at least one\
        \ application owned by them.<br/>Unspecified filter parameters are treated\
        \ as having the default values.<br/>Every provided parameter value is considered\
        \ as an extra filter for the search criteria.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: campaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance. This\
          \ filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: skipStatistics
        in: query
        description: "Filter for including aggregated data (that is, statistics, progress)\
          \ to the instance objects: dataonly, yes, or no."
        schema:
          default: "no"
          enum:
          - dataonly
          - "yes"
          - "no"
          type: string
      - name: sortDesc
        in: query
        schema:
          default: true
          type: boolean
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: supervisorsId
        in: query
        description: "The filter for the campaign supervisor.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "This is a deprecated campaign instance type filter. Use 'types'\
          \ query parameter instead. If both the 'type' and 'types' query parameter\
          \ are used, then the 'types' selected value is considered."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
        deprecated: true
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign instances v2.0
      summary: Perform operations on a collection of campaign instances that belong
        to a specific tenant.
      description: "The API is used to perform operations on a collection of campaign\
        \ instances that belong to a specific tenant.<br/>The owners of the application\
        \ can perform operations on the list of campaign instances that are created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: patchbulkReplace
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceAction'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign instances to modify:<br>Campaign instance payload\
          \ details:<br><br>- <strong>id</strong>: Campaign instance ID.<br>- <strong>eventType</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>eventType</strong> are: cancel, pause, restart, runnow, end,\
          \ delete.<br><strong>cancel</strong>: Transitions the campaign instance\
          \ to a cancelled state, indicating it is no longer active.<br><strong>pause</strong>:\
          \ Temporarily halts a running campaign instance, putting it in a paused\
          \ state.<br><strong>restart</strong>: Resumes a paused campaign instance,\
          \ continuing its execution.<br><strong>runnow</strong>: Triggers immediate\
          \ execution of a scheduled campaign instance.<br><strong>end</strong>: Transitions\
          \ a running campaign to a completion state, before the designated completion\
          \ date. It is mainly to enforce the campaign closure based actions immediately.<br><strong>delete</strong>:\
          \ Delete the campaign instance immediately from the database.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignInstanceAction'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/{id}/launch:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Launch the campaign using the provided configuration for the specified
        campaign that belong to a specified tenant.
      description: "The API is used to launch the campaign using the provided configuration\
        \ for the specified campaign that belong to a specified tenant. <br/>The administrator\
        \ managing a specified tenant can launch a draft campaign configuration created\
        \ for that tenant.<br/> The owners of the application can launch a draft campaign\
        \ configuration that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: launchCampaign
      parameters:
      - name: id
        in: path
        description: "The valid unique identifier of the campaign in draft mode. For\
          \ example, 7743f25b-6818-457e-b8b8-9e543dc6d10d"
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "Payload details for the campaign launch:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account, groupmembership).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low).<br>- <strong>name</strong>: Name of the campaign.<br>- <strong>description</strong>:\
          \ Description of the campaign.<br>- <strong>reviewer</strong>: Information\
          \ about the campaign reviewer.<br>- <strong>applications</strong>: List\
          \ of applications that the campaign certifies.<br>Note: This is a required\
          \ field for Group entitlement and Account campaign, however, in case of\
          \ User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. This is not required for Group Membership.<br>-\
          \ <strong>userFilter</strong>: List of users or groups for inclusion/exclusion\
          \ or filter for users allowed for the certification.<br><br><br>In case\
          \ of user entitlement campaign, you can either specify userConditionSet\
          \ or userInclusionList or userExclusionList in userFilter.<br><br>- <strong>entitlementFilter</strong>:\
          \ List of entitlements for inclusion/exclusion or filter for entitlements\
          \ allowed for the certification.<br>Note: For user assignment campaigns,\
          \ either 'Applications' or 'Entitlement Filter' must be specified, or both.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br><br>- <strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br>- <strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br>- <strong>frequency</strong>: Frequency of campaign instances\
          \ (Let's give an example UNIX or Linux Cron-compatible string).<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br>- <strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br>- <strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br>- <strong>mitigationAction</strong>:\
          \ Action to be taken after a campaign closes to avoid open records.<br>-\
          \ <strong>defaultReviewer</strong>: Default reviewer for assignments in\
          \ absence of a suitable reviewer.<br>- <strong>continuous</strong>:A flag\
          \ indicating that the campaign is continuous. Default value for continuous\
          \ is 'false'.<br>- <strong>continuousCampaignMetaData</strong>: Details\
          \ of continuous campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;&nbsp;&nbsp;'reminderInterval' is the number\
          \ of days after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>overdueAction</strong>:\
          \ Default action on unreviewed entitlements after a specific period has\
          \ elapsed.<br>&nbsp;&nbsp;&nbsp;&nbsp;Allowable values are rejectAll, approveAll\
          \ or doNothing.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;&nbsp;&nbsp;This field is only applicable\
          \ for the <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is 'true'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>events</strong>: A\
          \ list of events thats needs to be monitored through the campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\"\
          : \"rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:Campaign\
          \ sign-off policy refers to the pre-determined approach  that governs when\
          \ and how campaign actions are officially approved or denied (auto, manual,\
          \ eoc, no_signoff).<br>Example: auto (The setting would mean immediate sign-off.\
          \ Actions taken by the approver in terms of approval or rejection are applied\
          \ on the assignment immediately).<br>Example: manual (The setting would\
          \ mean a manual sign-off. The certifier can decide whether to enforce the\
          \ action immediately OR at the end of the campaign).<br>Example: eoc (The\
          \ setting would mean sign-off towards the end of the campaign. Actions taken\
          \ by the approver in terms of approval or rejection are persisted till the\
          \ Due date of the campaign and then rolled out together)<br>Example: no_signoff\
          \ (Actions are not executed and only used for reporting)<br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>rev</strong>: Campaign revision.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: false
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: A conflict occurred during the launch operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorMessage'
      x-publicAPI: "false"
  /itim/cm/v2.0/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the details of the campaign instance from the specific tenant.
      description: "The API is used to retrieve the campaign instance details from\
        \ the specific tenant.<br/>The owners of the application can retrieve the\
        \ campaign instances details that are created by them or includes at least\
        \ one application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign instances v2.0
      summary: Perform an operation on a specified campaign instance that belong to
        a specified tenant.
      description: "This API is used to perform an operation on a specified campaign\
        \ instance that belongs to a specified tenant.<br/>The owners of the application\
        \ can perform operation on a specified campaign instance that is created by\
        \ them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: replaceput
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign instance payload details:<br><br>- <strong>eventType</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>eventType</strong> are: cancel, pause, restart, runnow.<br><strong>cancel</strong>:\
          \ Transitions the campaign instance to a cancelled state, indicating it\
          \ is no longer active.<br><strong>pause</strong>: Temporarily halts a running\
          \ campaign instance, putting it in a paused state.<br><strong>restart</strong>:\
          \ Resumes a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignInstanceReplaceInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/update/entitlementSchema:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        convert entitlementAllowlist/entitlementBlocklist fields values in json from
        null to empty array or create entry in json if fields are not found for entire
        certification manager schema.
      operationId: rundeckJobtoUpdateEntitlementSchema
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/utility/migratableTenants:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Check tenants which are migratable from this environment to other.
      description: This API is a utility API.This API will be used to check if a tenant
        or bunch of tenants are migratable or not.
      operationId: utilityForCheckingMigratableTenants
      parameters:
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
          Multiple tenants can be passed as comma-seperated list.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: Operation is successful. Will return the required data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RundeckOperationResponse'
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/{id}:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves the details of the campaign configuration from the specific
        tenant.
      description: "The API is used to retrieve the campaign configuration details\
        \ from the specific tenant.<br/>The owners of the application can retrieve\
        \ campaign configuration that is created by them or includes at least one\
        \ application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getCampaignById
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Updates the campaign configuration for a specified campaign configuration
        from the specific tenant.
      description: "The API is used to update the campaign configuration for a specified\
        \ campaign configuration from the specific tenant.<br/> The administrator\
        \ managing a specified tenant can update a campaign configuration created\
        \ for that tenant.<br/> The owners of the application can update a campaign\
        \ configuration that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: putreplace
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration update request payload details:<br><br>-\
          \ <strong>owner</strong>: Information about the campaign owner.<br>- <strong>type</strong>:\
          \ Type of campaign (For example, userassignment, groupassignment, account,\
          \ groupmembership).<br>- <strong>priority</strong>: Priority of the campaign\
          \ (For example, high, medium, low ).<br>- <strong>name</strong>: Name of\
          \ the campaign.<br>- <strong>description</strong>: Description of the campaign.<br>-\
          \ <strong>reviewer</strong>: Information about the campaign reviewer.<br>-\
          \ <strong>applications</strong>: List of applications that the campaign\
          \ certifies.<br>Note: This is a required field for Group entitlement and\
          \ Account campaign, however, in case of User entitlement campaigns, either\
          \ the 'Applications' or 'Entitlement' or both must be specified. This is\
          \ not required for Group Membership. <br>- <strong>userFilter</strong>:\
          \ It is set to filter the list of included or excluded users or groups for\
          \ certification. <br><br><br>In case of user entitlement campaign, you can\
          \ either specify userConditionSet or userInclusionList or userExclusionList\
          \ in userFilter.<br><br>- <strong>entitlementFilter</strong>: It is set\
          \ to filter the list of included or excluded entitlements for certification.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br>- <strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br>- <strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br>- <strong>frequency</strong>: Frequency of campaign instance.<br>-\
          \ <strong>runNow</strong>: Flag to start the campaign immediately.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes.<br>- <strong>mitigationAction</strong>: Action\
          \ after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>: A flag indicating that the\
          \ campaign is continuous. Default value for continuous is 'false'.<br>-\
          \ <strong>continuousCampaignMetaData</strong>: Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;Default\
          \ overdueAction is 'doNothing'<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    delete:
      tags:
      - Certification Campaign configurations v2.0
      summary: Deletes a campaign configuration from the specific tenant.
      description: "The API is used to delete a campaign configuration from the specific\
        \ tenant.<br/>The administrator managing a specified tenant can delete a campaign\
        \ configuration created for that tenant.<br/> The owners of the application\
        \ can delete a campaign configuration that is created by them or includes\
        \ at least one application owned by them.<br/>Entitlements required: tenantadmin\
        \ [Tenant Administrator]."
      operationId: delete
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "204":
          description: The request was successful.
      x-publicAPI: "false"
  /itim/cm/v2.0/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the campaign instance statistics from the specific tenant.
      description: "The API is used to retrieve the campaign instance statistics from\
        \ the specific tenant.</br>Unspecified filter parameters are treated as having\
        \ the default values.</br>Every provided parameter value is considered as\
        \ an extra filter for the search criteria.</br>If called by an application\
        \ owner, the API returns statistics of the instances that the owner created\
        \ or contains at least one application that the owner owns.<br/>If called\
        \ by user manager, the API returns statistics of instances, for which there\
        \ is at least one item to review.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: instancesStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns have been assigned to the calling\
          \ user: assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance
      description: "The api to get a specific assignment v1.0 (v1.0/admin/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance. If called by an application owner, the API\
        \ can get assignments only for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name.<br> account: Provide account userName.<br><br>Provide multiple values\
          \ in new lines or separated by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the discretionary groups.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting.<br><strong>groupsid</strong>: The campaign\
          \ assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance.
      description: "The api to get all assignments for a campaign instance v1.0 (v1.0/admin/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance. If called by an application owner, the API\
        \ can get assignments only for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignAssignmentFindByInstanceIDv1
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter1'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/tenant/limits:
    get:
      tags:
      - Serviceability v2.0
      summary: Retrieve the maximum limits set for the specific tenant.
      description: "The API is used to retrieve the maximum tenant limits set for\
        \ the specific tenant.</br>The administrator managing a specified tenant can\
        \ retrieve the limits set for the specific tenant.</br>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: tenantLimits
      parameters:
      - name: resourceType
        in: query
        description: "The resource type to filter tenant limits: all, monitoredUserAttributes."
        schema:
          default: all
          enum:
          - monitoredUserAttributes
          - all
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant for which the limits are retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Your request cannot be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request cannot be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/self/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific campaign instances.
      description: "The api to get statistics of specific campaign instances v1.0\
        \ (v1.0/self/instances/stats) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: GET /v2.0/instances/stats<br/>Get aggregated\
        \ statistics about campaign instances depending on the specified filter. If\
        \ called by a user manager, the API returns statistics of instances, for which\
        \ the manager has at least one item to review.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: selfInstancesStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns have been assigned to the calling\
          \ user: assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments within a given
        instance.
      description: "The api to get statistics of specific assignments within a given\
        \ instance v1.0 (v1.0/self/instances/{instanceId}/assignments/resources) is\
        \ deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{instanceId}/assignments/resources<br/>Get aggregated\
        \ statistics about assignments in a specific campaign instance for a reviewer\
        \ OR supervisor. Filters could be applied against the assignments. <br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfAssignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/update/entitlementSchema:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Update the certification manager schema.
      description: "The api to update the certification manager schema v1.0 (v1.0/update/schema)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/update/entitlementSchema<br/>This API will be invoked through\
        \ rundeck environment.This API will convert entitlementAllowlist/entitlementBlocklist\
        \ fields values in json from null to empty array or create entry in json if\
        \ fields are not found for entire certification manager schema."
      operationId: rundeckJobtoUpdateEntitlementSchemav1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: Operation is successful. Will receive the required data.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments.
      description: "The api to get statistics of specific assignments v1.0 (v1.0/admin/assignments/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/stats<br/>Get aggregated statistics about assignments\
        \ in a specific campaign instance. Filters could be applied to refine the\
        \ entities to use for generating statistics. If called by application owner,\
        \ the API returns statistics across all instances he created or containing\
        \ at least one application he owns.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminAssignmentsStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/launch:
    patch:
      tags:
      - Certification Campaign configurations v2.0
      summary: Launch the campaign configurations from the draft campaign configurations
        that belong to a specified tenant.
      description: "The API is used to launch the campaign configurations from the\
        \ draft campaign configurations that belong to a specified tenant. <br/>The\
        \ administrator managing a specific tenant can launch list of draft campaign\
        \ configurations created for that tenant.<br/> The owners of the application\
        \ can launch list of draft campaign configurations that are created by them\
        \ or includes at least one application owned by them.<br/>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: launchCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfigurationLaunchInput'
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "List of an existing draft campaign configurations to be launched:<br><br>-\
          \ <strong>campaignId</strong>: Campaign configuration ID.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignConfigurationLaunchInput'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The request was successful.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "409":
          description: A conflict occurred during the launch operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/clone:
    post:
      tags:
      - Certification Campaign configurations v2.0
      summary: Clone the campaign configurations from the source campaign configurations
        that belong to a specified tenant.
      description: "The API is used to clone the campaign configurations from the\
        \ source campaign configurations that belong to a specified tenant.<br/> The\
        \ administrator managing a specified tenant can clone a list of source campaign\
        \ configurations created for that tenant.<br/> The owners of the application\
        \ can clone a list of source campaign configurations that are created by them\
        \ or includes at least one application owned by them.<br/>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: cloneCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfigurationCloneInput'
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "List of an existing campaign configurations to be cloned:<br><br>-\
          \ <strong>sourceCampaignId</strong>: Campaign configuration ID.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignConfigurationCloneInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Server error
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
      x-publicAPI: "false"
  /itim/cm/v2.0/application/{id}/assignments:
    put:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates a list of assignment resources that belong to a specified tenant
        and match the application filter criteria.
      description: "Entitlements required: internalManageCerts [Internal Manage Certification]<br>The\
        \ REST API can be called only from internal microservices.<br>Creates an asynchronous\
        \ job in the job table to process the request from the other microcervice\
        \ for updating the application metadata."
      operationId: updateAssignmentsByApplication
      parameters:
      - name: id
        in: path
        description: The valid unique identifier of the application.
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "Request payload details:<br><br>Allowable op values : remove,\
          \ or replace<br><br>Allowable path values : application.owner.<br><br>The\
          \ \"value\" attribute is required for the \"replace\" operation.<br><br>\"\
          remove\" operation supported only for the application owner delete event.\
          \ { \"Operations\": [ { \"op\": \"remove\", \"path\": \"application.owner\"\
          \ } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateByApplication'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: The REST API can be called only from internal microservices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "false"
  /itim/cm/swagger:
    get:
      responses:
        "200":
          description: OK
  /itim/cm/v1.0/self/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign instances.
      description: "The api to get campaign instances v1.0 (v1.0/self/instances) is\
        \ deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances<br/>Get campaign instances with at least one record\
        \ associated with a reviewer or supervisor.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: selfCampaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "To filter based on the overall state of the campaign instance.\
          \ This filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: skipStatistics
        in: query
        description: "Filter for including aggregated data (that is, statistics, progress)\
          \ to the instance objects: dataonly, yes, or no."
        schema:
          default: "no"
          enum:
          - dataonly
          - "yes"
          - "no"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/update/schema:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Update the certification manager schema.
      description: "The api to update the certification manager schema v1.0 (v1.0/update/schema)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/update/entitlementSchema<br/>This API will be invoked through\
        \ rundeck environment.This API will convert tenant hostnames to tenant UUID\
        \ for entire certification manager schema."
      operationId: rundeckJobtoUpdateSchemav1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: Operation is successful.
      x-publicAPI: "false"
  /itim/cm/v2.0/system/tenant/{id}:
    delete:
      tags:
      - Certification Campaign configurations v2.0
      summary: Remove all campaign metadata of a specific tenant.
      description: Internal usage.
      operationId: deleteTenant
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant where request for deletion of all campaign metadata
          is submitted.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Server error
        "204":
          description: Tenant Cleaned Up
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the list of a campaign instances associated with the specified
        campaign configuration from the specific tenant.
      description: "The API is used to retrieves the list of a campaign instances\
        \ associated with the specified campaign configuration from the specific tenant.<br/>The\
        \ owners of the application can access the list of campaign instances that\
        \ are created by them or includes at least one application owned by them.<br/>Unspecified\
        \ filter parameters are treated as having the default values.<br/>Every provided\
        \ parameter value is considered as an extra filter for the search criteria.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: campaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the campaign configuration statistics from the specific tenant.
      description: "The API is used to retrieve the campaign configuration statistics\
        \ from the specific tenant.</br>The owners of the application can retrieve\
        \ the statistics of the campaign configurations that are created by them or\
        \ includes at least one application owned by them.</br>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: campaignStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application."
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: types
        in: query
        description: "The filter for the campaign configuration type: userassignment,\
          \ groupassignment, account, groupmembership.<br><br>Multiple values can\
          \ be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/arc/swagger:
    get:
      responses:
        "200":
          description: OK
  /itim/arc/v1.0/activities:
    post:
      tags:
      - Business Activity APIs
      summary: Create a Business Activity or Bulk Delete Business Activities
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity4'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users:
    get:
      tags:
      - ARC User APIs
      summary: Get Users for a provided entity
      parameters:
      - name: entityId
        in: query
        schema:
          type: string
      - name: entityType
        in: query
        description: Define the entity Type for which you want to get Users
        required: true
        schema:
          enum:
          - Business Activity
          - Mitigation
          - Risk
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/swagger.{type}:
    get:
      parameters:
      - name: type
        in: path
        required: true
        schema:
          pattern: json|yaml
          type: string
      responses:
        "200":
          description: OK
  /itim/arc/v1.0/users/{id}/risks/analysis:
    post:
      tags:
      - ARC User APIs
      summary: Executes the User Analysis for the provided User.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerUserRiskAnalysis'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/search:
    post:
      tags:
      - Risk APIs
      summary: Search for Risks based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: level
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Business Activity APIs
      summary: Delete the Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
    patch:
      tags:
      - Business Activity APIs
      summary: Update the Business Activity details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity5'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/entity/search:
    post:
      summary: Search for Entities based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: type
        in: query
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/search:
    post:
      tags:
      - Business Activity APIs
      summary: Search for Business Activities based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders:
    post:
      tags:
      - Activity Folder APIs
      summary: Create Activity Folder or Bulk Delete Activity Folders
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/{id}/children:
    get:
      tags:
      - Activity Folder APIs
      summary: Get the Activities in Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Activity Folder APIs
      summary: Updates the relation between Activity Folder and other Activities or
        Folders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/search:
    post:
      tags:
      - Mitigation APIs
      summary: Search for Mitigations based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/{id}/risks/preview:
    post:
      tags:
      - ARC User APIs
      summary: Check impact of adding Permissions to the User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: groupBy
        in: query
        description: Select grouping type
        schema:
          default: Permission
          enum:
          - Permission
          - Risk
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerUserRiskPreview'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks:
    post:
      tags:
      - Risk APIs
      summary: Create Risk or Bulk Delete Risks
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk3'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}/risks:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of Risks linked to a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}:
    get:
      tags:
      - Risk APIs
      summary: Get the Risk details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Risk APIs
      summary: Delete the Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
    patch:
      tags:
      - Risk APIs
      summary: Update the Risk details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations:
    post:
      tags:
      - Mitigation APIs
      summary: Create Mitigation or Bulk Delete Mitigations
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/{userId}/risks/{riskId}/mitigations:
    post:
      tags:
      - ARC User APIs
      summary: Apply Mitigation to the Risk of a User
      parameters:
      - name: riskId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
        "207":
          description: Multi-Status
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/{id}:
    get:
      tags:
      - Activity Folder APIs
      summary: Get the details of Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Activity Folder APIs
      summary: Delete the Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: removeChildren
        in: query
        schema:
          default: "false"
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Deleted
          content:
            application/json: {}
    patch:
      tags:
      - Activity Folder APIs
      summary: Update the Activity Folder details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/search:
    post:
      tags:
      - Activity Folder APIs
      summary: Search for Activity Folders based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/risks/preview/bulk:
    post:
      tags:
      - ARC User APIs
      summary: Return the Analysis of User and added Access
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/V1SwaggerUserRiskPreviewBulk'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/{id}:
    get:
      tags:
      - Mitigation APIs
      summary: Get the Mitigation details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Mitigation APIs
      summary: Delete the Mitigation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Deleted
          content:
            application/json: {}
    patch:
      tags:
      - Mitigation APIs
      summary: Update the Mitigation details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/stats:
    get:
      tags:
      - ARC Statistics APIs
      summary: Get the statistics of an entity
      parameters:
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: resourceType
        in: query
        description: Define the resource type to apply
        required: true
        schema:
          enum:
          - Business Activity
          - Mitigation
          - Risk
          - All
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}/mitigations:
    get:
      tags:
      - Risk APIs
      summary: Get the details of Mitigations linked to a Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Risk APIs
      summary: Risk and Mitigation relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/{id}/risks:
    get:
      tags:
      - Mitigation APIs
      summary: Get the details of Risks linked to a Mitigation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}/activities:
    get:
      tags:
      - Risk APIs
      summary: Get the details of Activities linked to a Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Risk APIs
      summary: Risk and Activity relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/bulk:
    post:
      tags:
      - Bulk APIs
      summary: Perform bulk operations
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerBulkApi'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "207":
          description: Partial Execution
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}/permissions:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of Permissions linked to a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Business Activity APIs
      summary: Business Activity and Permission relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity3'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Invalid Json
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
components:
  schemas:
    BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke:
      type: object
      properties:
        revoke:
          $ref: '#/components/schemas/UserEntitlementRevoke'
        grant:
          $ref: '#/components/schemas/UserEntitlementGrant'
    ModifyServiceRequestBeanSwagger:
      type: object
      properties:
        profileName:
          type: string
          example: manualService
        manualWorkOrderRequest:
          allOf:
          - $ref: '#/components/schemas/ManualWorkOrderRequestBean'
          - example:
              participant:
                type: ADMINISTRATOR
        _attributes:
          type: object
          example:
            erservicename: ManualService
            erconnectionmode: MANUAL
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    PersonModifyBeanSwagger:
      type: object
      properties:
        justification:
          type: string
          example: Department Change
        _attributes:
          type: object
          example:
            manager:
            - "erglobalid=328765385581670887,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
            title: Marketing Manager
    ViewResponseBean:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/v1.2/views/200218159
              title: Project Manager
        _attributes:
          type: object
          example:
            name: Project Manager
            description: creating Project Manager view
            id: "200218159"
            tasks:
              DV_SELF_SERVICE:
                subtasks:
                  CHANGE_PERSONAL_PROFILE: "no"
                  SELF_SERVICE-CHANGE_ACCOUNT_CATEGORY: "no"
                  CHANGE_PASSWORDS: "no"
                  SELF_SERVICE-VIEW_ACCESSES: "no"
                  VIEW_REQUESTS-VIEW_ALL_MY_REQUEST: "no"
                  MANAGE_MY_ACCOUNTS-REQUEST_ACCOUNT: "no"
                  SELF_SERVICE-CHANGE_ACCOUNT_PASSWORD: "no"
                  MANAGE_MY_ACCOUNTS-VIEW_ACCOUNT: "no"
                  VIEW_REQUESTS-VIEW_MY_ALL_REQUEST: "no"
                  VIEW_PERSONAL_PROFILE: "no"
                  SELF_SERVICE-REQUEST_ACCESS: "no"
                  MANAGE_MY_ACCOUNTS-REQUEST_ACCOUNT_ADVANCED: "no"
                  MANAGE_MY_ACCOUNTS-DELETE_ACCOUNT: "no"
                  DELEGATE_TODOS: "no"
                  SELF_SERVICE-DELETE_ACCESSES: "no"
                  MANAGE_MY_ACCOUNTS-CHANGE_ACCOUNT: "no"
                  VIEW_TODO_LIST: "no"
              DV_ADMIN_CONSOLE:
                subtasks:
                  DESIGN_WORKFLOWS:
                    subtasks:
                      DESIGN_WORKFLOWS-MANAGE_ACCESS_REQUEST_WORKFLOWS: "no"
                      DESIGN_WORKFLOWS-MANAGE_ACCOUNT_REQUEST_WORKFLOWS: "no"
                  MANAGE_TODO_LIST:
                    subtasks:
                      ADMIN_CONSOLE_VIEW_TODO_LIST: "no"
                      ADMIN_CONSOLE_DELEGATE_TODOS: "no"
                      VIEW_TODOS_BY_USER: "no"
                  MANAGE_ROLES: "no"
                  MANAGE_ORPHAN_ACCOUNTS:
                    subtasks:
                      MANAGE_ORPHAN_ACCOUNTS-DELETE_ORPHAN_ACCOUNT: "no"
                      MANAGE_ORPHAN_ACCOUNTS-SUSPEND_ORPHAN_ACCOUNT: "no"
                      MANAGE_ORPHAN_ACCOUNTS-ASSIGN_ORPHAN_ACCOUNT: "no"
                  CHANGE_OTHERS_PASSWORDS: "no"
                  MANAGE_ORGANIZATION_STRUCTURE: "no"
                  REPORTS:
                    subtasks:
                      REPORTS-USER-AND-ACCOUNTS: "no"
                      REPORTS-SERVICES: "no"
                      REPORTS-REQUESTS: "no"
                      REPORTS-AUDIT-AND-SECURITY: "no"
                      REPORTS-CUSTOM: "no"
                  MANAGE_SERVICES:
                    subtasks:
                      MANAGE_SERVICES-POLICY_ENFORCEMENT: "yes"
                      MANAGE_SERVICES-DELETE_ACCOUNT_FORM: "yes"
                      MANAGE_SERVICES-RECONCILE_NOW: "yes"
                      MANAGE_SERVICES-CREATE_SERVICE: "yes"
                      MANAGE_SERVICES-ACCOUNTS:
                        subtasks:
                          MANAGE_SERVICES-CHANGE_ACCOUNT: "yes"
                          MANAGE_SERVICES-SUSPEND_ACCOUNT: "yes"
                          MANAGE_SERVICES-DELETE_ACCOUNT: "yes"
                          MANAGE_SERVICES-ASSIGN_ACCOUNT: "yes"
                          MANAGE_SERVICES-RESTORE_ACCOUNT: "yes"
                          MANAGE_SERVICES-ORPHAN_ACCOUNT: "yes"
                          MANAGE_SERVICES_ACCOUNTS-CHANGE_PASSWORD: "yes"
                          MANAGE_SERVICES-REQUEST_ACCOUNT: "yes"
                      MANAGE_SERVICES-CUSTOMIZE_ACCOUNT_FORM: "yes"
                      MANAGE_SERVICES-MANAGE_ACCOUNT_DEFAULTS: "yes"
                      MANAGE_SERVICES-ENFORCE_POLICY: "yes"
                      MANAGE_SERVICES-EXPORT_ACCESS_DATA: "yes"
                      MANAGE_SERVICES-SETUP_RECON: "yes"
                      MANAGE_SERVICES-ACCOUNT_RECERTIFICATION_STATUS: "yes"
                      MANAGE_SERVICES-RETRY_PENDING: "yes"
                      MANAGE_SERVICES-MANAGE_GROUPS:
                        subtasks:
                          MANAGE_SERVICES-ACCESS_RECERTIFICATION_STATUS: "yes"
                          MANAGE_SERVICES-GROUP_MEMBERSHIP: "yes"
                          MANAGE_SERVICES-DEFINE_ACCESS: "yes"
                      MANAGE_SERVICES-CHANGE_SERVICE: "yes"
                      MANAGE_SERVICES-IMPORT_ACCESS_DATA: "yes"
                      MANAGE_SERVICES-DELETE_SERVICE: "yes"
                  MANAGE_POLICIES:
                    subtasks:
                      MANAGE_POLICIES-MANAGE_IDENTITY_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_ADOPTION_RULES: "no"
                      MANAGE_POLICIES-MANAGE_SOD_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_SERVICE_SELECTION_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_PASSWORD_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_PROVISIONING_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_RECERTIFICATION_POLICIES: "no"
                  SET_SYSTEM_SECURITY:
                    subtasks:
                      SET_SYSTEM_SECURITY-MANAGE_ACI: "no"
                  MANAGE_USERS:
                    subtasks:
                      MANAGE_PEOPLE-ACCOUNTS:
                        subtasks:
                          MANAGE_PEOPLE-CHANGE_ACCOUNT: "no"
                          MANAGE_PEOPLE-REQUEST_ACCOUNT: "yes"
                          MANAGE_PEOPLE-DELETE_ACCOUNT: "no"
                          MANAGE_PEOPLE-CHANGE_ACCOUNT_CATEGORY: "no"
                          MANAGE_PEOPLE-RESTORE_ACCOUNT: "no"
                          MANAGE_USERS_ACCOUNTS-CHANGE_PASSWORD: "no"
                          MANAGE_PEOPLE-SUSPEND_ACCOUNT: "no"
                      MANAGE_PEOPLE-RESTORE_PERSON: "no"
                      MANAGE_USERS-CHANGE_PASSWORDS: "no"
                      MANAGE_PEOPLE-DELETE_PERSON: "no"
                      MANAGE_PEOPLE-SUSPEND_PERSON: "no"
                      MANAGE_PEOPLE-CHANGE_PERSON: "yes"
                      MANAGE_USERS-TRANSFER_USER: "no"
                      MANAGE_PEOPLE-DELEGATE_ACTIVITIES_SYSTEMUSER: "no"
                      MANAGE_USERS-MANAGE_ACCESS:
                        subtasks:
                          MANAGE_USERS-REQUEST_ACCESS: "no"
                          MANAGE_USERS-DELETE_ACCESS: "yes"
                      MANAGE_PEOPLE-CREATE_PERSON: "yes"
                  VIEW_REQUESTS:
                    subtasks:
                      ADMIN_CONSOLE_VIEW_REQUESTS-VIEW_ALL_REQUEST: "no"
                      VIEW_REQUESTS-VIEW_ALL_OTHERS_REQUEST: "no"
                      VIEW_REQUESTS-VIEW_REQUEST_BY_SERVICE: "no"
                      VIEW_REQUESTS-VIEW_OTHERS_PENDING_REQUESTS: "no"
                      VIEW_REQUESTS-VIEW_ALL_PENDING_REQUESTS_BY_SERVICE: "no"
                  SET_SYSTEM_SECURITY-MANAGE_GROUPS: "no"
              DV_SERVICE_CENTER:
                subtasks:
                  SVCENTER_MANAGE_MY_PROFILE:
                    subtasks:
                      SVCENTER_VIEW_PROFILE_FOR_MYSELF: "yes"
                      SVCENTER_MODIFY_PROFILE_FOR_MYSELF: "yes"
                  SVCENTER_MANAGE_OTHERS_PROFILE:
                    subtasks:
                      SVCENTER_VIEW_PROFILE: "yes"
                      SVCENTER_MODIFY_PROFILE: "yes"
                  SVCENTER_CHANGE_PASSWORD_FOR_MYSELF: "yes"
                  SVCENTER_CHANGE_ACCESS_PASSWORD_FOR_MYSELF: "yes"
                  SVCENTER_MANAGE_OTHERS_ACCESS:
                    subtasks:
                      SVCENTER_MODIFY_ACCESS: "yes"
                      SVCENTER_VIEW_ACCESS: "yes"
                      SVCENTER_REQUEST_ACCESS: "yes"
                  SVCENTER_MANAGE_MY_ACTIVITY:
                    subtasks:
                      SVCENTER_DELEGATION_SCHEDULE: "yes"
                      SVCENTER_VIEW_TODO_LIST: "yes"
                  SVCENTER_CHANGE_ACCESS_PASSWORD: "yes"
                  SVCENTER_CHANGE_PASSWORD: "yes"
                  SVCENTER_VIEW_REQUEST_STATUS: "yes"
                  SVCENTER_MANAGE_MY_ACCESS:
                    subtasks:
                      SVCENTER_VIEW_ACCESS_FOR_MYSELF: "yes"
                      SVCENTER_REQUEST_ACCESS_FOR_MYSELF: "yes"
                      SVCENTER_MODIFY_ACCESS_FOR_MYSELF: "yes"
    Access:
      enum:
      - DENY
      - GRANT
      - INVALID
      - NONE
      type: string
    AccountUpdateBeanSwagger:
      type: object
      properties:
        requestee:
          allOf:
          - $ref: '#/components/schemas/HALLink'
          - example:
              href: /itim/rest/people/ZXJnbG9iYWxpZD03MjQyNDYxMTI1MTM0MTE0ODM5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - attribute: erPassword
              value: secret
            - property: itimPassword
              value: secret
    RoleBean:
      type: object
      properties:
        entityRef:
          type: string
    CreateAccessBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            badges:
            - style: blue
              designation: approle
            additionalInformation: Access created for the ApplicationRole
            accessName: ApplicationRole
            entityType: 3
            accessCategory: Application
            description: ApplicationRole Access
            isCommon: true
            entityRef: 410a7b56-37c8-4b1d-9ca7-e96680d8a7eb
            tags:
            - tag1
            - tag2
    ServiceRequestBeanSwagger:
      type: object
      properties:
        profileName:
          type: string
          example: manualService
        defaultProvisioningPolicyRequest:
          allOf:
          - $ref: '#/components/schemas/ProvisioningPolicyRequestBean'
          - example:
              enabled: "true"
              provisioningMode: Manual
        manualWorkOrderRequest:
          allOf:
          - $ref: '#/components/schemas/ManualWorkOrderRequestBean'
          - example:
              profileName: manualService
              defaultProvisioningPolicyRequest:
                enabled: "true"
                provisioningMode: Manual
              manualWorkOrderRequest:
                defaultNotification: "true"
                escalationPeriod: "10"
                escalationParticipant:
                  id: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNSxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                  type: GROUP
                participant:
                  id: ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  type: USER
              _attributes:
                erservicename: ManualService
                erconnectionmode: MANUAL
              orgID: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
        _attributes:
          type: object
          example:
            erservicename: ManualService
            erconnectionmode: MANUAL
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    RecertifyWorkItemSwagger:
      type: object
      properties:
        userComment:
          type: string
          example: ""
        userRecertificationData:
          type: object
          example:
            accountsToCertify:
            - ownershipType: Individual
              decision: true
              name: vm on linux service
              description: ""
              dependentRecertificationTodoTargets:
              - ownershipType: ""
                decision: false
                name: apache access
                description: Apache access to xyz application
                dependentRecertificationTodoTargets: []
                dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
              dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
            - ownershipType: Individual
              decision: false
              name: vm on aix service
              description: ""
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
            rolesToCertify:
            - ownershipType: ""
              decision: false
              name: Developers
              description: Developers in Costa Mesa location
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
            - ownershipType: ""
              decision: true
              name: Managers
              description: Managers in Costa Mesa location
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
        justification:
          type: string
          example: The user requires the role and accesses to do the job
    WorkItemUpdateBeanSwagger:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/WorkItemActionBean'
          - example:
              code: RS
        justification:
          type: string
          example: Provided requested information
        label:
          type: string
          example: RFIAccountAdd
        rfiAttributeValues:
          type: object
          example:
          - name: cn
            value:
            - Marco Lounton
          - name: erntlocalgroups
            value:
            - Backup Operators
            - ConfigMgr Remote Control Users
        additionalData:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalData'
          example:
          - value:
              mitigationIds:
              - 46474dda-c61f-4c28-aec8-45ec92efe682
            key: RISK_MITIGATION
    CreatePersonRequestBean:
      type: object
      properties:
        profileName:
          type: string
          example: Person
        scheduledTime:
          type: string
          example: 01/01/2017 12:30
        justification:
          type: string
        _attributes:
          type: object
          example:
            sn: Doe
            cn: john
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    SelfRegisterPersonRequestBean:
      type: object
      properties:
        profileName:
          type: string
          example: Person
        tenantID:
          type: string
          example: org
        justification:
          type: string
        _attributes:
          type: object
    WorkItemBatchUpdateBeanSwagger:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/workitems/2461578322863485336
        action:
          allOf:
          - $ref: '#/components/schemas/WorkItemActionBean'
          - example:
              code: AR
        justification:
          type: string
          example: Rejecting request due to policy violations
        label:
          type: string
          example: Manager Approval
    ChangePasswordSwaggerBean:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - property: oldPassword
              value: myoldpassword
            - attribute: erPassword
              value: mypassword
    ACIScope:
      enum:
      - INVALID
      - SINGLE
      - SUBTREE
      type: string
    PersonSuspendRestoreBeanSwagger:
      type: object
      properties:
        justification:
          type: string
          example: The person is on a long leave
    LabelBean:
      type: object
      properties:
        text:
          type: string
        inserts:
          type: array
          items:
            type: object
        key:
          type: string
    RetrievePasswordSwagger:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
    ValidatePasswordSwaggerBean:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - attribute: erPassword
              value: mypassword
    Permissions:
      type: object
      properties:
        class-rights:
          type: object
          example:
            modify: GRANT
            search: GRANT
        attribute-rights:
          type: object
          example:
            givenname:
              read: GRANT
              write: NONE
            cn:
              read: GRANT
              write: NONE
    Membership:
      type: object
      properties:
        values:
          type: array
          items:
            format: uuid
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - example: SYSTEM_ROLE
    AdditionalData:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/IAdditionalDataValue'
          - example: RISK_MITIGATION
        key:
          type: string
    EnforcePolicyRequestBeanSwagger:
      type: object
      properties:
        scheduledTime:
          type: string
          example: 01/01/2017 12:30
    DesignFormBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            formTemplate:
              tabbedForm:
                tab:
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      maxlength: "128"
                      name: data.sn
                      type: text
                    name: data.sn
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    - parameter: "128"
                      type: MAX_LENGTH
                    label: $sn
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.cn
                      type: text
                    name: data.cn
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    label: $cn
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.uid
                      type: text
                    name: data.uid
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    label: $uid
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      maxlength: "128"
                      name: data.givenname
                      type: text
                    name: data.givenname
                    constraint:
                    - parameter: "128"
                      type: MAX_LENGTH
                    label: $givenname
                    direction: inherit
                  - input:
                      size: "50"
                      maxlength: "20"
                      name: data.initials
                      type: text
                    name: data.initials
                    constraint:
                    - parameter: "20"
                      type: MAX_LENGTH
                    label: $initials
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.homepostaladdress
                      type: text
                    name: data.homepostaladdress
                    label: $homepostaladdress
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.sharedsecret
                      type: text
                    name: data.ersharedsecret
                    label: $ersharedsecret
                    direction: inherit
                  - name: data.erroles
                    searchMatch:
                      orgSubTreeSearch: "true"
                      multiple: "true"
                      _class: DefaultRole
                      comboItem:
                        size: "4"
                        name: data.erroles
                        label: $erroles
                      category: Role
                      type: select
                    label: $erroles
                    direction: inherit
                  - input:
                      size: ""
                      name: data.erlocale
                      type: text
                      value: ""
                    helpText: ""
                    hintText: ""
                    isHiddenOnModify: ""
                    name: data.erlocale
                    isReadOnlyOnModify: ""
                    label: $erlocale
                    required: ""
                    direction: inherit
                  index: "0"
                  title: $personal
                  selected: "true"
                  url: "javascript:switchTabs(document.forms['body'],0);"
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      name: data.roomnumber
                      type: text
                    name: data.roomnumber
                    label: $roomnumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.employeenumber
                      type: text
                    name: data.employeenumber
                    label: $employeenumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.title
                      type: text
                    name: data.title
                    label: $title
                    direction: inherit
                  - name: data.manager
                    searchControl:
                      orgSubTreeSearch: "true"
                      comboItem:
                        name: data.manager
                        label: $manager
                      category: Person
                      type: input
                    label: $manager
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.postaladdress
                      type: text
                    name: data.postaladdress
                    label: $postaladdress
                    direction: inherit
                  - name: data.secretary
                    searchControl:
                      orgSubTreeSearch: "true"
                      comboItem:
                        name: data.secretary
                        label: $secretary
                      category: Person
                      type: input
                    label: $secretary
                    direction: inherit
                  index: "1"
                  title: $corporate
                  selected: "false"
                  url: "javascript:switchTabs(document.forms['body'],1);"
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      name: data.mail
                      type: text
                    name: data.mail
                    constraint:
                    - parameter: "true"
                      type: EMAIL
                    label: $mail
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.telephonenumber
                      type: text
                    name: data.telephonenumber
                    label: $telephonenumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.mobile
                      type: text
                    name: data.mobile
                    label: $mobile
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.pager
                      type: text
                    name: data.pager
                    label: $pager
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.homephone
                      type: text
                    name: data.homephone
                    label: $homephone
                    direction: inherit
                  - name: data.eraliases
                    label: $eraliases
                    editableTextList:
                      comboItem:
                        size: "4"
                        name: data.eraliases
                        label: $eraliases
                    direction: inherit
                  index: "2"
                  title: $communications
                  selected: "false"
                  url: "javascript:switchTabs(document.forms['body'],2);"
            ercustomclass: inetOrgPerson
            erformname: inetOrgPerson
    ModifyIdentityPolicyBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            erenabled: "true"
    PermissionValue:
      type: object
      properties:
        read:
          $ref: '#/components/schemas/Access'
        write:
          $ref: '#/components/schemas/Access'
    UserRecertificationDetailsBean:
      type: object
      properties:
        accountsToCertify:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
          example:
          - ownershipType: Individual
            decision: true
            name: vm on linux service
            description: ""
            dependentRecertificationTodoTargets:
            - ownershipType: ""
              decision: false
              name: apache access
              description: Apache access to xyz application
              dependentRecertificationTodoTargets: []
              dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
            dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
          - ownershipType: Individual
            decision: false
            name: vm on aix service
            description: ""
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
        comment:
          type: string
          example: string
        justification:
          type: string
          example: string
        rolesToCertify:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
          example:
          - ownershipType: ""
            decision: false
            name: Developers
            description: Developers in Costa Mesa location
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
          - ownershipType: ""
            decision: true
            name: Managers
            description: Managers in Costa Mesa location
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
    WorkItemActionBean:
      type: object
      properties:
        code:
          type: string
        inProgressLabel:
          $ref: '#/components/schemas/LabelBean'
        label:
          $ref: '#/components/schemas/LabelBean'
    CreateIdentityPolicyRequestBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            eruserclass: Person
            erenabled: "true"
            erscope: "2"
            erkeywords: Person
            description: abc-desc
            erjavascript: <Javascript code here>
            erpolicytarget: "1;erglobalid=6995527626792419564,ou=services,erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
            erpolicyitemname: Identity-Policy
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwghMDAwMCxvdT1vcmcsZGM9RGl2eWE
    ChallengeResponseBean:
      type: object
      properties:
        response:
          type: string
        challenge:
          type: string
    AccessAssignCheckComplianceRequestBeanSwagger:
      type: object
      properties:
        newAccount:
          allOf:
          - $ref: '#/components/schemas/ExtendedHALBean'
          - example:
              _links:
                requestee:
                  href: /itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0MzA0Njg5MTAzLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                service:
                  href: /itim/rest/services/ZXJnbG9iYWxpZD03NjQxMTc2MjkxOTU5MDI1OTU0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
              _forms:
              - _inputs:
                - attribute: eruid
                  value: userid
                - attribute: erposixgecos
                  value:
                  - aValue
    RecertificationTodoTarget:
      type: object
      properties:
        ownershipType:
          type: string
        decision:
          type: boolean
        name:
          type: string
        description:
          type: string
        dependentRecertificationTodoTargets:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
        readOnly:
          type: boolean
        dN:
          type: string
    ACIResponseBean:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/v1.2/acis/e2ad43d0-dcfd-49ab-8f37-704a6c2fb877
              title: Some name update
            erparent:
              href: /itim/rest/v1.2/organizationcontainers/organizations/3de5e18a-c918-4af3-90f7-7e72ff1fba29
        _attributes:
          $ref: '#/components/schemas/ACIAttributes'
        orgId:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    EntityBean:
      type: object
      properties:
        _attributes:
          type: object
    ExtendedHALBean:
      type: object
      properties:
        _attributes:
          type: object
    ForgotPasswordSubmitResponseBeanSwagger:
      type: object
      properties:
        password:
          type: string
          example: itimPassword
        challengeResponses:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeResponseBean'
          example:
          - response: IBM
            challenge: What is the name of your first company?
          - response: Red
            challenge: What is your favorite color?
          - response: "4"
            challenge: How many siblings does your father have?
    ViewRequestBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            name: ProjectManager
            description: View for Project Manager
            tasks:
              DV_ADMIN_CONSOLE:
                subtasks:
                  MANAGE_SERVICES:
                    viewAllSubtasks: "yes"
                  MANAGE_USERS:
                    subtasks:
                      MANAGE_PEOPLE-ACCOUNTS:
                        subtasks:
                          MANAGE_PEOPLE-REQUEST_ACCOUNT: "yes"
                          MANAGE_PEOPLE-DELETE_ACCOUNT: "no"
                        viewAllSubtasks: "no"
                      MANAGE_PEOPLE-CHANGE_PERSON: "yes"
                      MANAGE_USERS-MANAGE_ACCESS:
                        subtasks:
                          RECERTIFY_USER: "yes"
                          MANAGE_USERS-REQUEST_ACCESS: "yes"
                          MANAGE_USERS-DELETE_ACCESS: "no"
                        viewAllSubtasks: "no"
                      MANAGE_PEOPLE-CREATE_PERSON: "yes"
                    viewAllSubtasks: "no"
                viewAllSubtasks: "no"
              DV_SERVICE_CENTER:
                viewAllSubtasks: "yes"
    BulkAssignementAttributeValueGrant:
      type: object
      properties:
        entitlement:
          type: string
          example: <entitlementcode>
        assignmentAttributes:
          type: object
          example:
            <entitlementcode>:
              attr4:
              - val4
              attr3:
              - val3
        users:
          type: array
          items:
            type: string
          example:
          - <user1-id>
          - <user2-id>
    DelegateRequestBean:
      type: object
      properties:
        delegate:
          allOf:
          - $ref: '#/components/schemas/EntityBean'
          - example:
              _links:
                self:
                  href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
        endDate:
          type: string
          example: "1432603800000"
        startDate:
          type: string
          example: "1432603800000"
    UserEntitlementGrant:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserToEntitlementGrant'
    Form:
      type: object
      properties:
        _inputs:
          type: array
          items:
            $ref: '#/components/schemas/FormInput'
    ACIRequestBean:
      required:
      - _attributes
      type: object
      properties:
        _attributes:
          $ref: '#/components/schemas/ACIAttributes'
        orgId:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    ChallengeRequestUserBean:
      type: object
      properties:
        userId:
          type: string
    UserToEntitlementGrant:
      type: object
      properties:
        rights:
          uniqueItems: true
          type: array
          items:
            type: string
          example: []
        assignmentAttributes:
          type: object
          example:
            ent2:
              attr1:
              - val1
              attr3:
              - val3
            ent1:
              attr2:
              - val2
              attr1:
              - val1
        user:
          type: string
          example: ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ
        group:
          type: string
          example: ""
    ManualWorkOrderRequestBean:
      type: object
      properties:
        defaultNotification:
          type: boolean
        escalationPeriod:
          format: int64
          type: integer
        escalationParticipant:
          $ref: '#/components/schemas/ParticipantBean'
        _attributes:
          type: object
        participant:
          $ref: '#/components/schemas/ParticipantBean'
    ParticipantBean:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        _attributes:
          type: object
    FormInput:
      type: object
      properties:
        attribute:
          type: string
          example: sharedSecret
        value:
          type: object
          example: sharedSecret
    AccessAssignmentSingleRequestBean:
      type: object
      properties:
        justification:
          type: string
          example: Deleting the access assignment due to change of role
    ModifyAccessBean:
      type: object
      properties:
        enableAccess:
          type: boolean
          example: false
        _attributes:
          type: object
          example:
            entityType: 3
    SearchAssignmentRequestBeanSwagger:
      type: object
      properties:
        rightsFilter:
          type: string
          example: name eq "Elite Plumbing" AND city eq "New York"
        entitlement:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          example: f2d2a97e-e4fa-42c4-8222-ebc7487053f3
    ModifyPasswordPolicyRequestBeanSwagger:
      type: object
      properties:
        policyTargets:
          type: array
          items:
            type: object
          example:
          - constant: SPECIFIC_SERVICE
            service: ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
        rules:
          type: object
          example:
            minLength: "1"
            maxLength: "10"
        _attributes:
          type: object
          example:
            erenabled: "false"
            erscope: "2"
    ModifySystemRoleRequestSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            description: Role with administrative privileges
            ersystemrolecategory: 1
    MessageBean:
      type: object
      properties:
        severity:
          type: string
        text:
          type: string
        id:
          type: string
        inserts:
          type: array
          items:
            type: object
        key:
          type: string
        supportingData:
          type: object
    ProvisioningPolicyRequestBean:
      type: object
      properties:
        _attributes:
          type: object
        enabled:
          type: boolean
        provisioningMode:
          type: string
    ACIAttributes:
      type: object
      properties:
        filter:
          type: string
          example: (&(!(erObjectType=1))(!(eruid=root))(!(eruid=administrator)))
        permissions:
          $ref: '#/components/schemas/Permissions'
        scope:
          allOf:
          - $ref: '#/components/schemas/ACIScope'
          - example: SUBTREE
        name:
          type: string
          example: IVIG account policy
        id:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        target:
          type: string
          example: erAccountItem
    CreateLifecycleRuleRequestBeanSwagger:
      type: object
      properties:
        typeInfo:
          type: string
          example: Account
        ruleType:
          type: string
          example: CATEGORY_TYPE
        schedules:
          type: array
          items:
            type: object
          example:
          - dayOfWeek: 0
            hour: 12
            month: 0
            dayOfMonth: -1
            minute: 0
        _attributes:
          type: object
          example:
            OperationName: suspend
            Filter: (cn=*)
            name: Suspend Dormant Account LCR
            description: LCR to suspend dormant accounts
    MultipartBodyBean:
      required:
      - file
      type: object
      properties:
        file:
          format: binary
          description: file data
          type: string
    PasswordSubmitResponseBeanSwagger:
      type: object
      properties:
        challengeResponses:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeResponseBean'
          example:
          - response: IBM
            challenge: What is the name of your first company?
          - response: Red
            challenge: What is your favorite color?
          - response: "4"
            challenge: How many siblings does your father have?
    CreatePasswordPolicyRequestBeanSwagger:
      type: object
      properties:
        policyTargets:
          type: array
          items:
            type: object
          example:
          - constant: SPECIFIC_SERVICE
            service: ZXJnbG9iYWxpZD02NTgxNDM4MDU4NjI3Njg3NjI1LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
          - constant: SERVICE_TYPE
            service: WinLocalProfile
        rules:
          type: object
          example:
            customRules:
              examples.passwordrules.RegularExpressionRule: "true"
            minAlphabeticCharacters: "3"
            minLength: "5"
            maxLength: "13"
        _attributes:
          type: object
          example:
            erenabled: "true"
            erscope: "1"
            erkeywords: Policy new
            description: test new
            erpolicyitemname: REST password-Policy new
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    Type:
      enum:
      - ACCESSOWNER
      - ADMINISTRATOR
      - ALL
      - INVALID
      - OWNER
      - ROLEOWNER
      - SELF
      - SERVICEOWNER
      - SERVICE_ACCESSOWNER
      - SPONSOR
      - SUPERVISOR
      - SYSTEM_ROLE
      type: string
    CreateSystemRoleRequestBeanSwagger:
      required:
      - erparent
      type: object
      properties:
        _attributes:
          type: object
          example:
            errolename: AdminRole
            description: Role with administrative privileges
            ersystemrolecategory: 1
            uuid: 123e4567-e89b-12d3-a456-426614174000
        erparent:
          description: UUID of the organization that the system role belongs to
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
    HALLink:
      type: object
      properties:
        hreflang:
          type: string
        templated:
          type: boolean
        profile:
          format: uri
          type: string
        name:
          type: string
        href:
          format: uri
          type: string
        title:
          type: string
        type:
          type: string
    RoleAccessRequestBean:
      type: object
      properties:
        enableAccess:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleBean'
        accessCategory:
          type: string
        commonAccess:
          type: boolean
    IAdditionalDataValue:
      type: object
    UserEntitlementRevoke:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserToEntitlementRevoke'
    ModifyLifecycleRuleRequestBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            name: Suspend Unused Account LCR
    UserToEntitlementRevoke:
      type: object
      properties:
        assignmentOrigin:
          type: string
          example: ""
        assignmentAttributes:
          type: object
          example:
            ent2:
              attr1:
              - val1
              attr3:
              - val3
            ent1:
              attr2:
              - val2
              attr1:
              - val1
        user:
          type: string
          example: ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ
        group:
          type: string
          example: ""
    PersonDeleteResponseBean:
      type: object
      properties:
        requestId:
          type: string
        status:
          format: int32
          type: integer
    ReminderAction:
      description: The action to be taken after a while to send periodic reminders
        to reviewers for unreviewed assignments
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReminderActionType'
        reminderInterval:
          format: int64
          type: integer
    Account:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/UserGroup'
        ownershipType:
          type: string
        deletionDate:
          format: date
          type: string
        name:
          type: string
          readOnly: true
        id:
          type: string
        finerStatus:
          type: string
        status:
          type: string
    CampaignConfigurationLaunchOutput:
      description: Representation of a campaign configuration launch result object
        for the resposne
      type: object
      properties:
        _campaignId:
          description: _campaignId
          type: string
    Entity:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        id:
          type: string
    BulkOperationCampaign:
      description: Representation of a bulk operation on campaign configurations.
      required:
      - op
      - path
      type: object
      properties:
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        value:
          $ref: '#/components/schemas/CampaignConfiguration'
    ListResponse:
      description: Object used to return a list of objects
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            type: object
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    BulkResult1:
      description: Representation of a generic response of a Bulk REST API
      required:
      - op
      - path
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        error:
          type: string
        value:
          type: object
    UserGroupV1:
      description: Represents a user group
      type: object
      properties:
        formatted:
          type: string
          readOnly: true
        givenName:
          type: string
          readOnly: true
        familyName:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
          readOnly: true
        realm:
          type: string
          readOnly: true
        userType:
          type: string
          readOnly: true
        id:
          type: string
        email:
          type: string
          readOnly: true
    TenantLimitsOutput:
      description: Representation of a limit in creating a new campaign for a tenant
      type: object
      properties:
        current_active_campaign_instances:
          format: int32
          description: Number of current active campaign instances
          type: integer
        current_total_campaign_assignments_in_db:
          format: int64
          description: Current total campaign assignments in db
          type: integer
        current_active_campaign_assignments:
          format: int64
          description: Number of current active campaign assignments
          type: integer
        max_active_campaign_assignments:
          format: int64
          description: Maximum number of active campaign assignments
          type: integer
        max_total_campaign_assignments_in_db:
          format: int64
          description: Total campaign assignments in db
          type: integer
        max_active_campaign_instances:
          format: int32
          description: Maximum number of active campaign instances
          type: integer
    JsonNode:
      type: array
    RundeckRequestUpdateInput:
      description: Object used to run rundeck jobs for updating requests.
      required:
      - userName
      - password
      type: object
      properties:
        password:
          description: Password
          type: string
        userName:
          description: User Name
          type: string
    UserGroup:
      description: Represents a user group
      type: object
      properties:
        formatted:
          type: string
          readOnly: true
        givenName:
          type: string
          readOnly: true
        familyName:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        realm:
          type: string
          readOnly: true
        id:
          type: string
        userType:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
    Assignment:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        assigner:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: User who assigned the entitlement.
        extRef:
          description: Entitlement external ref. Valid only if type is ENTITLEMENT
          type: string
        subType:
          description: The entitlement type (ROLE or PERMISSION)
          type: string
        rightsRef:
          description: Entitlement rights ref. Valid only if type is ENTITLEMENT
          type: string
        id:
          type: string
        assignee:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: The user to which the entitlement has been assigned.
        type:
          description: "The subject type: possible values are ENTITLEMENT."
          type: string
        creationDate:
          format: date
          description: Date when assignment has been created
          type: string
    ErrorMessageForBulkOp:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkOperationResult1'
    EventOutput:
      description: Object used to represent an event in the assignment
      required:
      - type
      - changedAttributes
      type: object
      properties:
        type:
          description: type
          type: string
        changedAttributes:
          description: changedAttributes
          type: array
          items:
            $ref: '#/components/schemas/AttributeChangesOutput'
    ReviewerOperation:
      enum:
      - all
      - approved
      - escalated
      - noMoreOnTarget
      - none
      - redirected
      - rejected
      - unmanage
      type: string
    SubjectAdditionalData1:
      type: object
      properties:
        accountName:
          description: Account name on the respective entitlement.
          type: string
        name:
          description: The entitlement name when the subject is an entitlement or
            the account name when subject is an account.
          type: string
        assigner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: User who assigned the entitlement.
        extRef:
          description: Entitlement external ref. Valid only if type is ENTITLEMENT
          type: string
        subType:
          description: "The entitlement type (ROLE or PERMISSION) when the subject\
            \ is an entitlement or the account status (MATCHED, UNMATCHED, NON-COMPLIANT,\
            \ COMPLIANT) when the subject is an account."
          type: string
        rightsRef:
          description: Entitlement rights ref. Valid only if type is ENTITLEMENT
          type: string
        extId:
          description: The subject identifier.
          type: string
        type:
          description: "The subject type: possible values are ENTITLEMENT or ACCOUNT."
          type: string
        creationDate:
          format: date
          description: Date when assignment has been created
          type: string
        accountOwnershipType:
          description: Account ownership type of the respective account.
          type: string
    ErrorMessageForBulk:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkResult1'
    CampaignConfigurationInput:
      description: Object used to create a new campaign configuration
      required:
      - owner
      - type
      - priority
      - name
      - applications
      - launchDate
      - duration
      type: object
      properties:
        preview:
          description: "A flag for a preview campaign, not opened to reviewers"
          type: boolean
        _rev:
          description: _rev
          type: string
        description:
          description: Campaign description
          type: string
        nextRunDate:
          description: Forecasted Run date for the next campaign instance.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy.
        launchDate:
          description: Date when the first instance of the campaign starts
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - epoch
          type: string
        automaticRefreshContinuousCampaign:
          description: "A flag, valid for continuous campaigns only, saying that campaign\
            \ should refresh the existing filter for building dataset"
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign type
            enum:
            - userassignment
            - groupassignment
            - account
        frequency:
          description: A UNIX or Linux Cron-compatible string that defines the start
            of subsequent instances
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The The duration (in milliseconds) for which each campaign
            instance remains open
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        id:
          description: Campaign configuration id
          type: string
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        blocklist:
          description: List of users or groups denied for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - description: List of entitlements for inclusion/exclusion or filter for
              entitlements allowed for the certification
        rev:
          description: Campaign configuration rev
          type: string
          readOnly: true
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/V1CampaignFrequency'
          - description: Frequency unit days or months
        runNow:
          description: A flag to start that the campaign immediately
          type: boolean
        blacklist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign priority
            enum:
            - high
            - medium
            - low
        creationDate:
          description: The creation date of the campaign configuration.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        name:
          description: Campaign name
          type: string
        reviewerOverwritten:
          type: boolean
        _id:
          description: _id
          type: string
        applications:
          description: List of applications the campaign the campaign certifies
          type: array
          items:
            $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    AssignmentAction:
      description: Object used to create or replace an assignment.
      required:
      - id
      type: object
      properties:
        id:
          description: Assignment Id
          type: string
        applicationId:
          description: Application identifier
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
    ListResponseCampaignStatsOutput:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignStatsOutput'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    OperationAndValue:
      description: Rest representation for Operation and Value.
      required:
      - op
      - v1
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: eq
        v1:
          description: Value
          type: string
          example: Security
    CampaignAssignment:
      description: Representation of a campaign assignment for REST APIs.
      type: object
      properties:
        The campaign subject additional data.:
          $ref: '#/components/schemas/SubjectAdditionalData'
        fulfilled:
          type: boolean
        Id of the parent campaign configuration.:
          type: string
        The date representing when the assignment was first imported inside certification manager.:
          format: date
          type: string
        Owning tenant id:
          type: string
        The reviewer of the assignment.:
          $ref: '#/components/schemas/UserGroup'
        The group through which the assignee is granted access to the entitlement (visibility).:
          $ref: '#/components/schemas/UserGroup'
        The date representing when the last operation was performed.:
          format: date
          type: string
        The owner of the assignment.:
          $ref: '#/components/schemas/UserGroup'
        Last operation, if any, executed by the reviewer during the campaign.:
          $ref: '#/components/schemas/ReviewerOperation'
        Id of the parent campaign instance.:
          type: string
        The application associated to the assignment.:
          $ref: '#/components/schemas/Application'
        If the value associated to the last operation was set internally and automatically by the microservice:
          type: boolean
        If true, the assignment is removed from target and hence disabled.:
          type: boolean
        entitlement:
          $ref: '#/components/schemas/Entitlement1'
        'The assignment id coming from the external system to certify (that is AuthZ). ':
          type: string
        lastOperationAutomatic:
          type: boolean
        Justification text for the last operation in case of rejections and redirections.:
          type: string
        doImmediateFulfillment:
          type: boolean
        The rights associated to the assignment.:
          type: array
          items:
            type: string
        A string containing the error raised by the backend in case of a bulk assignment update.:
          type: string
        Id:
          type: string
        If true the assignment operation has been fulfilled:
          type: boolean
        The list of delegators assigned the duties for a given campaign instance.:
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        account:
          $ref: '#/components/schemas/Account'
    AllowBlockListInputOutput:
      description: Object used to represent an allowlist and blocklist.
      type: object
      properties:
        formatted:
          description: "The full name of the user that includes  user name, middle\
            \ name, and suffix, that are formatted for display."
          type: string
          readOnly: true
        givenName:
          description: "The given name of the user, or first name in most Western\
            \ languages. For example, Barbara is the given name from the full name\
            \ Ms. Barbara J Jensen, PhD."
          type: string
          readOnly: true
        description:
          description: Description of group
          type: string
          readOnly: true
        type:
          type: string
        accountStatus:
          description: To filter the account status.
          enum:
          - compliant
          - unmatched
          - non_compliant
          type: string
        parentName:
          type: string
        familyName:
          description: "The family name of the user, or the last name in most Western\
            \ languages. For example, Jensen is the family name from the full name\
            \ Ms. Barbara J Jensen, PhD."
          type: string
          readOnly: true
        name:
          description: The userName or groupName of the user or group.
          type: string
          readOnly: true
        realm:
          description: The realm to which the user belongs. It is always "cloudIdentityRealm"
            for regular users. Maximum length is 240 characters.
          type: string
          readOnly: true
        aGroup:
          description: Specifies if the filter refers to a group. The values are true
            or false.
          type: boolean
        id:
          description: The user identifier of the user to be filtered.
          type: string
        userType:
          description: "The type of the user. For example, regular, federated."
          type: string
          readOnly: true
        email:
          description: The email address of the user.
          type: string
          readOnly: true
        accountOwnershipType:
          description: Account ownership type.
          type: string
    UserOrAccountAllowBlockList:
      description: Rest representation for an userList or user condition set filter.
      type: object
      properties:
        businessUnitExclusionList:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userConditionSet:
          description: "The conditionSet set to build the user filter. Example for\
            \ userConditionSet : [{\"work_locality\":[{\"op\":\"sw\",\"vl\":\"J\"\
            },{\"op\":\"ew\",\"vl\":\"a\"}],\"department\":[{\"op\":\"eq\",\"vl\"\
            :\"Security\"}]}]"
          type: array
          items:
            type: object
        businessUnitInclusionList:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userExclusionList:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userInclusionList:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
    Application:
      description: The list of Applications certified by the campaign.
      type: object
      properties:
        name:
          type: string
          readOnly: true
        icon:
          description: application icon
          type: string
          readOnly: true
        description:
          description: application description
          type: string
          readOnly: true
        id:
          type: string
        url:
          description: application url
          type: string
          readOnly: true
    CampaignStatsOutput:
      description: Representation of aggregated information for campaign objects -
        REST APIs.
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        numNoMoreOnTargetItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object.
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        delegators:
          description: List of delegators who were delegated the duties for a given
            campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        count:
          format: int32
          description: The total number of associated object occurrences returned.
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object.
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object.
          type: integer
        entity:
          description: "A string representing the aggregated object. Not null if filterType\
            \ is type, state, priority."
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
    ContinuousCampaignEvents:
      description: A list of events thats needs to be monitored through the campaign
      type: object
      properties:
        monitoredAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ContinuousCampaignMonitoredAttribute'
        type:
          type: string
    ListResponseCampaignInstanceOutput:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceOutput'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    AttributeChangesOutput:
      description: Object used to create or replace a list of changed attributes
      required:
      - id
      type: object
      properties:
        displayName:
          description: Display name of the attribute
          type: string
        id:
          description: Identifier of the attribute
          type: string
        value:
          description: value of the attribute
          type: string
    StateType:
      enum:
      - aborted
      - all
      - cancelled
      - closed
      - completed
      - created
      - deleted
      - failed
      - noinstance
      - overlapped
      - paused
      - removed
      - running
      - scheduled
      - starting
      - success
      type: string
    AssignmentFilter1:
      description: Assignment-like object that uses filters to search assignments.
      type: object
      properties:
        assignmentStatus:
          description: Assignment compliance status (Account campaign case).
          enum:
          - compliant
          - non_compliant
          - unmanaged
          - unmatched
          type: array
          items:
            type: string
        filter:
          description: Smart filter matched to assignee and application properties
            of each assignment.
          type: string
        groupsId:
          description: IDs of the groups having the assignments.
          type: array
          items:
            type: string
        lastActions:
          description: Last actions executed by each reviewer.
          enum:
          - all
          - none
          - approved
          - rejected
          - redirected
          - escalated
          - noMoreOnTarget
          type: array
          items:
            type: string
        appsId:
          description: IDs of the applications to which the assignments are related.
          type: array
          items:
            type: string
        assignmentNames:
          description: Assignment names
          type: array
          items:
            type: string
        assigneesId:
          description: IDs of the users
          type: array
          items:
            type: string
        reviewersId:
          description: IDs of the users having the assignments
          type: array
          items:
            type: string
        assignmentTypes:
          description: Assignment types
          enum:
          - all
          - permission
          - role
          - account
          type: array
          items:
            type: string
    V1CampaignFrequency:
      description: A UNIX or Linux Cron compatible string that defines the start of
        subsequent instances
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/FrequencyUnit'
        rate:
          format: int32
          type: integer
        cronString:
          type: string
    AssignmentInput:
      description: Object used to create or replace an assignment.
      required:
      - id
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If the campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, the operation is run immediately."
          type: boolean
        id:
          description: Assignment Id
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        applicationId:
          description: Application identifier
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
    ListResponseCampaignStats:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignStats'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ReminderAction1:
      description: The action to be taken after a while to send periodic reminders
        to reviewers for unreviewed assignments
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReminderActionType1'
        reminderInterval:
          format: int64
          type: integer
    CampaignPriority:
      enum:
      - all
      - high
      - low
      - medium
      type: string
    Operation and Value:
      description: Rest representation for Operation and Value.
      required:
      - op
      - vl
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: eq
        vl:
          description: Value
          type: string
          example: Security
    AttributeMap:
      description: Rest representation for an AttributeMap.
      required:
      - name
      type: object
      properties:
        name:
          description: name of the Attribute
          type: string
    EntitlementWithConditionSet:
      description: Rest representation for an entitlement or entitlement condition
        set filter.
      type: object
      properties:
        entitlementExclusionList:
          description: List of Entitlements to be excluded
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        entitlementInclusionList:
          description: List of Entitlements to be included
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
    V1CampaignConfiguration:
      description: Object to represent a Campaign Configuration.
      required:
      - owner
      - type
      - priority
      - name
      - applications
      type: object
      properties:
        preview:
          description: A flag indicating that the campaign is in preview mode and
            not open to reviewers.
          type: boolean
        userConditionSet:
          description: "The conditionSet set to build the user filter. Example for\
            \ userConditionSet : [{\"work_locality\":[{\"op\":\"sw\",\"vl\":\"J\"\
            },{\"op\":\"ew\",\"vl\":\"a\"}],\"department\":[{\"op\":\"eq\",\"vl\"\
            :\"Security\"}]}]"
          type: array
          items:
            type: object
        description:
          description: Campaign Description
          type: string
        nextRunDate:
          format: date
          description: Forecasted Run date for the next campaign instance.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy.
        launchDate:
          format: date
          description: The start date of the first instance of campaign.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          type: string
        automaticRefreshContinuousCampaign:
          description: "A flag, valid for continuous campaigns only, saying that campaign\
            \ should refresh the existing filter for building dataset"
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign Type
        frequency:
          description: A UNIX or Linux Cron compatible string that defines the start
            of subsequent instances.
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification.
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The duration (in milliseconds) for which each campaign instance
            remains open.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The creator of the campaign.
        blocklist:
          description: The list of Users or Groups denied certification.
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
            enum:
            - none
            - reminder
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The default reviewer identified for the assignments for which
              the system cannot find a suitable reviewer.
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - description: List of entitlements for inclusion/exclusion or filter for
              entitlements allowed for the certification
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/CampaignFrequency'
          - description: Frequency Unit days or months
        runNow:
          description: The flag indicating the campaign occurs one-time and needs
            to be started immediately.
          type: boolean
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The identified reviewer for the campaign.
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign Priority
            enum:
            - high
            - medium
            - low
            - all
        creationDate:
          format: date
          description: The creation date of the campaign configuration.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        name:
          description: Campaign Name
          type: string
        reviewerOverwritten:
          type: boolean
        applications:
          description: The list of Applications certified by the campaign.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    Event:
      type: object
      properties:
        type:
          type: string
        changedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeChanges'
    UpdateApplicationOperation:
      required:
      - op
      - path
      type: object
      properties:
        op:
          description: Operation to be performed
          enum:
          - remove
          - replace
          type: string
          example: replace
        path:
          description: "The string that contains an attribute path that describes\
            \ the target of the operation. The \"path\" attribute is required for\
            \ all operations. Examples of valid \"path\" specification formats include:\
            \ <br> <br>     \"path\":\"application.owner\" <br>"
          enum:
          - application.owner
          type: string
          example: application.owner
        value:
          description: "The attribute content used for the operation. The \"value\"\
            \ attribute is required for the \"replace\" operations. The \"value\"\
            \ attribute is allowed with \"remove\" operations only when the \"path\"\
            \ identifies  a single object (specified by a selection filter). <br>\
            \ <br> The following example shows a put operation replacing a multiple\
            \ values from \"application.owner\" : <br>  <table> <tr><td> {  \"Operations\"\
            :  [    {      \"op\":\"replace\",      \"path\":\"application.owner\"\
            ,      \"value\":[\"323000PBCU\",\"32600092KB\"],    }  ]}</td></tr></table>"
          type: string
          example: Service Now
    ErrorMessage:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
    CampaignInstanceAction:
      description: Object used to specify action on a campaign instance.
      required:
      - eventType
      type: object
      properties:
        id:
          description: Campaign instance id
          type: string
        eventType:
          description: Specifies the action to apply to the campaign instance.
          enum:
          - cancel
          - pause
          - restart
          - runnow
          type: string
    BulkOperationResult1:
      description: Representation of a response for bulk operation results in REST
        API calls.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        error:
          type: string
        value:
          type: object
    FrequencyUnit:
      enum:
      - DAYS
      - MINUTES
      - MONTHS
      type: string
    Pagination1:
      description: Object used to paginate a REST Api
      type: object
      properties:
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        sortDesc:
          description: Sort results descending.
          type: boolean
        page:
          format: int32
          description: Page number to be returned.
          type: integer
    CampaignFrequency:
      description: A UNIX or Linux Cron compatible string that defines the start of
        subsequent instances
      type: object
      properties:
        cronString:
          type: string
    CampaignInstanceReplaceInput:
      description: Object used to create a new campaign instance.
      required:
      - eventType
      type: object
      properties:
        eventType:
          description: Specifies the action to apply to the campaign.
          enum:
          - cancel
          - pause
          - restart
          - runnow
          type: string
    BulkErrorMessage:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/BulkErrorResponse1'
    AssignmentUpdateAction:
      description: Object used to replace an assignment.
      required:
      - id
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If the campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, the operation is run immediately."
          type: boolean
        id:
          description: Assignment Id
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
    BulkErrorResponse1:
      description: Representation of a generic error response in bulk.
      type: object
      properties:
        Unique identifier of the error message.:
          type: string
          readOnly: true
        Description of the error message.:
          type: string
          readOnly: true
    ListResponseDatasetRecord:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/DatasetRecord'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ListResponse1:
      description: Object used to return a list of objects
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            type: object
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    Pagination:
      description: Object used to paginate a REST Api
      type: object
      properties:
        The maximum number of elements to be returned.:
          format: int32
          type: integer
        Page number to be returned.:
          format: int32
          type: integer
        Sort results descending.:
          type: boolean
    OverdueAction:
      enum:
      - approveAll
      - doNothing
      - rejectAll
      type: string
    ReminderActionType1:
      enum:
      - none
      - reminder
      type: string
    CampaignInstanceInput:
      description: Object used to create a new campaign instance.
      required:
      - event
      type: object
      properties:
        id:
          description: Campaign instance Id
          type: string
        event:
          description: Specifies the action to apply to the campaign.
          enum:
          - delete
          - pause
          - restart
          - runnow
          - end
          - harddelete
          type: string
    ApplicationV1:
      type: object
      properties:
        _rev:
          type: string
          readOnly: true
        name:
          type: string
        icon:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        id:
          type: string
        url:
          type: string
          readOnly: true
    BulkResultType:
      enum:
      - failure
      - success
      type: string
    CampaignConfigurationLaunchInput:
      description: The Campaign Configuration in a draft that is used to launch.
      type: object
      properties:
        campaignId:
          description: Campaign id
          type: string
    CampaignType:
      enum:
      - account
      - all
      - groupassignment
      - groupmembership
      - userassignment
      type: string
    CampaignInstanceOutput:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        timeLastStart:
          format: date
          description: The date representing the start of the instance.
          type: string
        delegators:
          description: List of delegators who were delegated the duties for a given
            campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        configuration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
        _rev:
          description: _rev
          type: string
        timeRemaining:
          format: int64
          description: "The date representing when the instance gets completed, if\
            \ any."
          type: integer
        reviewersCompletedCount:
          format: int32
          description: The total number of reviewers that have completed the review.
          type: integer
        timeClosed:
          format: date
          description: "The date representing when the instance was closed, if any."
          type: string
        assignmentsProcessedCount:
          format: int32
          description: The overall number of assignments processed for the campaign
            instance.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        state:
          description: A string representing the state of the campaign instance.
          type: string
        id:
          description: Campaign instance id
          type: string
        assignmentSources:
          description: The campaign instance assignment sources.
          type: array
          items:
            type: string
        timeLastPause:
          format: date
          description: "The date representing when the instance was paused, if any."
          type: string
        tenantUUID:
          description: Tenant UUID
          type: string
        reviewersTotalCount:
          format: int32
          description: The total number of reviewers.
          type: integer
        rev:
          description: Campaign instance review
          type: string
        delegatees:
          description: List of delegatees to whom duties for a given campaign instance
            were delegated.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        campaignConfiguration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - description: The parent configuration.
        priority:
          description: The priority from the parent configuration.
          type: string
        assignmentsTotalCount:
          format: int32
          description: The overall number of assignments to be reviewed in the campaign
            instance.
          type: integer
        campaignConfigurationId:
          description: The ID of the parent configuration.
          type: string
        tenantId:
          description: Tenant Id
          type: string
        name:
          description: The unique campaign instance name.
          type: string
        progress:
          format: int32
          description: The percentage of overall progress made in the campaign instance.
          type: integer
        _id:
          description: _id
          type: string
        supervisors:
          description: "The list of supervisors identified for the campaign. If a\
            \ group is selected as supervisor, this list contains the group members."
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    AssignmentActionReplaceInput:
      description: Object used to create or replace an assignment.
      required:
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, then the operation is executed immediately."
          type: boolean
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
    SubjectAdditionalData:
      description: The campaign subject additional data.
      type: object
      properties:
        accountName:
          description: Account name on the respective entitlement.
          type: string
        rights:
          description: Rights reference. It is valid only if type is ENTITLEMENT.
          type: string
        name:
          description: The entitlement name when the subject is an entitlement or
            the account name when subject is an account.
          type: string
        assigner:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - description: User who assigned the entitlement.
        extRef:
          description: External reference. It is valid only if type is ENTITLEMENT.
          type: string
        subType:
          description: "The entitlement type (ROLE or PERMISSION) when the subject\
            \ is an entitlement or the account status (MATCHED, UNMATCHED, NON-COMPLIANT,\
            \ COMPLIANT) when the subject is an account."
          type: string
        extId:
          description: The subject identifier.
          type: string
        type:
          description: "The subject type: possible values are ENTITLEMENT or ACCOUNT."
          type: string
        creationDate:
          format: date
          description: Date when assignment was created.
          type: string
        accountOwnershipType:
          description: Account ownership type of the respective account.
          type: string
    MitigationActionType:
      enum:
      - none
      - reminder
      type: string
    ContinuousCampaignMonitoredAttribute:
      description: A attribute thats needs to be monitored through the campaign
      type: object
      properties:
        displayName:
          description: Display name of the attribute
          type: string
          readOnly: true
        name:
          description: A schemaAttribute.name of the attribute.
          type: string
        id:
          description: A unique id of the attribute.
          type: string
    UpdateByApplication:
      description: JSON object used to update all the assignment resources filtered
        by the application
      required:
      - Operations
      type: object
      properties:
        Operations:
          description: "An array of operation objects to be performed.  Operation\
            \ objects must have exactly one \"op\" member, whose value indicates the\
            \ operation to perform. Its value must be one of \"remove\", or \"replace\"\
            . Values are errors."
          type: array
          items:
            $ref: '#/components/schemas/UpdateApplicationOperation'
    CampaignConfigurationCloneInput:
      description: The object can be used to clone an existing campaign configuration.
      type: object
      properties:
        sourceCampaignId:
          description: Source campaign id.
          type: string
    ContinuousCampaignMetaData:
      description: Details of continuous campaign
      type: object
      properties:
        generateInitialDataSet:
          type: boolean
        overdueThreshold:
          format: int32
          type: integer
        reminderAction:
          $ref: '#/components/schemas/ReminderAction1'
        overdueAction:
          $ref: '#/components/schemas/OverdueAction'
        events:
          description: A list of events thats needs to be monitored through the campaign.
          type: array
          items:
            $ref: '#/components/schemas/ContinuousCampaignEvents'
        automaticRefresh:
          type: boolean
    CreateAssignment:
      description: Object used to create an assignment
      required:
      - id
      type: object
      properties:
        id:
          description: Assignment Id
          type: string
        applicationId:
          description: Application identifier
          type: string
    BulkErrorResponse:
      description: Representation of a generic error response in bulk.
      type: object
      properties:
        Unique identifier of the error message.:
          type: string
          readOnly: true
        Description of the error message.:
          type: string
          readOnly: true
    ReminderActionType:
      enum:
      - none
      - reminder
      type: string
    AssignmentFilter:
      description: Assignment-like object that uses filters to search assignments.
      type: object
      properties:
        assignmentStatus:
          description: Assignment compliance status (Account campaign case).
          enum:
          - compliant
          - non_compliant
          - unmanaged
          - unmatched
          type: array
          items:
            type: string
        filter:
          description: Smart filter matched to assignee and application properties
            of each assignment.
          type: string
        groupsId:
          description: IDs of the groups having the assignments.
          type: array
          items:
            type: string
        lastActions:
          description: Last actions executed by each reviewer.
          enum:
          - all
          - none
          - approved
          - rejected
          - redirected
          - escalated
          - noMoreOnTarget
          type: array
          items:
            type: string
        appsId:
          description: IDs of the applications to which the assignments are related.
          type: array
          items:
            type: string
        assignmentNames:
          description: Assignment names
          type: array
          items:
            type: string
        assigneesId:
          description: The user ID whose accesses are being reviewed.
          type: array
          items:
            type: string
        reviewersId:
          description: ID of the user who is going to review OR provide certification.
          type: array
          items:
            type: string
        assignmentTypes:
          description: Assignment types
          enum:
          - all
          - permission
          - role
          - account
          type: array
          items:
            type: string
    AttributeChanges:
      description: Rest representation for an AttributeChanges.
      required:
      - id
      type: object
      properties:
        id:
          description: Identifier of the attribute
          type: string
        oldValue:
          description: old value of the attribute
          type: array
          items:
            type: string
        dispalyName:
          description: Display name of the attribute
          type: string
          readOnly: true
        value:
          description: value of the attribute
          type: string
    CampaignStats1:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        count:
          format: int32
          description: The total number of associated object occurrences returned
          type: integer
        filterType:
          description: The filterType
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        entity:
          description: " A string representing the aggregated object. Not null if\
            \ filterType is type, state, priority"
          type: string
    User:
      type: object
      properties:
        formatted:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        name:
          type: string
          readOnly: true
        realm:
          type: string
        id:
          type: string
        userType:
          type: string
        email:
          type: string
    ListResponseAssignmentStats:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/AssignmentStats'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ListResponseCampaignConfig:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfiguration'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    AssignmentOutput:
      description: Representation of a campaign assignment for REST APIs.
      type: object
      properties:
        lastReminderDate:
          format: date
          description: Date when last email reminder was sent to the reviewer
          type: string
        isLastOperationAutomatic:
          description: Specifies whether the value associated to the last operation
            was set internally and automatically by the microservice
          type: boolean
        tenantUUID:
          description: Owning tenant UUID
          type: string
        isFulfilled:
          description: "If true, the assignment operation was fulfilled"
          type: boolean
        delegators:
          $ref: '#/components/schemas/UserGroupV1'
        noMoreOnTargetSystem:
          description: "If true, the assignment was greyed-out"
          type: boolean
        delegator:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        discretionaryGroup:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        lastActionDate:
          format: date
          description: Date when last operation was performed
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        creationDate:
          format: date
          description: Date when the assignment was first imported inside certification
            manager
          type: string
        error:
          description: A string that contains the back-end error that occurred during
            a bulk assignment update
          type: string
        assignmentId:
          description: The id of the assignment from the external system to certification
            (i.e. AuthZ).
          type: string
        instanceId:
          description: ID of the parent campaign instance.
          type: string
        reminderCount:
          format: int32
          description: Number of email reminders sent to the reviewer for a specific
            assignment
          type: integer
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        configId:
          description: ID of the parent campaign configuration.
          type: string
        rights:
          description: The rights associated to the assignment.
          type: array
          items:
            type: string
        lastOperation:
          allOf:
          - $ref: '#/components/schemas/ReviewerOperation1'
          - description: "Last operation, if any, executed by the reviewer during\
              \ the campaign."
        tenantId:
          description: Owning tenant ID
          type: string
        id:
          description: Id
          type: string
        additionalData:
          allOf:
          - $ref: '#/components/schemas/SubjectAdditionalData1'
          - description: The campaign subject additional data.
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        justification:
          description: Justification text for the last operation in case of rejections
            and redirections.
          type: string
    CampaignStats:
      description: Representation of aggregated information for campaign objects -
        REST APIs.
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object.
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        count:
          format: int32
          description: The total number of associated object occurrences returned.
          type: integer
        numRemovedFromTargetItems:
          format: int32
          description: The number of absent records in the target associated to the
            user represented in the object.
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object.
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object.
          type: integer
        entity:
          description: "A string representing the aggregated object. Not null if filterType\
            \ is type, state, priority."
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
    MitigationAction:
      description: The action to be taken after a while to avoid open records when
        a campaign closes
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MitigationActionType'
        reminderInterval:
          format: int64
          type: integer
    BulkResult:
      description: Representation of a generic response of a Bulk REST API
      required:
      - op
      - path
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        error:
          type: string
        value:
          type: object
    ReviewerOperation1:
      enum:
      - all
      - approved
      - escalated
      - noMoreOnTarget
      - none
      - redirected
      - rejected
      - unmanage
      type: string
    CampaignConfigurationCloneOutput:
      description: Representation of a campaign configuration cloned object for the
        resposne
      type: object
      properties:
        _clonedId:
          description: _clonedId
          type: string
        _sourceId:
          description: _sourceId
          type: string
    BulkOperationResult:
      description: Representation of a response for bulk operation results in REST
        API calls.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        error:
          type: string
        value:
          type: object
    ListResponseCampaignInstance:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstance'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    CampaignSignOffType:
      enum:
      - auto
      - eoc
      - manual
      - no_signoff
      type: string
    RestResponse:
      type: object
      properties:
        count:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        resources:
          type: array
          items:
            type: object
        page:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
    BulkOperation:
      description: Representation of a generic payload of a Bulk REST API.
      required:
      - op
      - path
      type: object
      properties:
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        value:
          type: object
    DatasetRecord:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        lastReminderDate:
          format: date
          type: string
        isFulfilled:
          description: If true the assignment operation has been fulfilled
          type: boolean
        isLastActionAutomatic:
          description: If the value associated to the last operation was set internally
            and automatically by the microservice
          type: boolean
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        noMoreOnTargetSystem:
          description: "If true, the assignment is removed from target and hence disabled."
          type: boolean
        discretionaryGroup:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        fulfilled:
          type: boolean
        lastActionDate:
          format: date
          description: The date representing when the last operation was performed.
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        creationDate:
          format: date
          description: The date representing when the assignment was first imported
            inside certification manager.
          type: string
        error:
          description: A string containing the error raised by the backend in case
            of a bulk assignment update.
          type: string
        assignmentId:
          description: 'The assignment id coming from the external system to certify
            (that is AuthZ). '
          type: string
        lastActionAutomatic:
          type: boolean
        instanceId:
          description: Id of the parent campaign instance.
          type: string
        reminderCount:
          format: int32
          type: integer
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        configId:
          description: Id of the parent campaign configuration.
          type: string
        rights:
          description: The rights associated to the assignment.
          type: array
          items:
            type: string
        lastOperation:
          allOf:
          - $ref: '#/components/schemas/ReviewerOperation'
          - description: "Last operation, if any, executed by the reviewer during\
              \ the campaign."
        id:
          description: Id
          type: string
        additionalData:
          allOf:
          - $ref: '#/components/schemas/SubjectAdditionalData'
          - $ref: '#/components/schemas/SubjectAdditionalData'
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification text for the last operation in case of rejections
            and redirections.
          type: string
        events:
          description: A list of events thats needs to be monitored through the campaign.
          type: array
          items:
            $ref: '#/components/schemas/Event'
    CampaignInstance:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        timeLastStart:
          format: date
          description: The date representing the start of the instance.
          type: string
        reviewerAssignmentCountMap:
          type: object
        reviewersTotalCount:
          format: int32
          description: The total number of reviewers.
          type: integer
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        delegatees:
          description: The list of delegatees who are delegated to perform duties
            for a given campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        campaignConfiguration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfiguration'
          - $ref: '#/components/schemas/CampaignConfiguration'
        timeRemaining:
          format: int64
          description: "The date representing when the instance gets completed, if\
            \ any."
          type: integer
        timeLastModified:
          format: date
          description: "The date representing when the instance was last modified,\
            \ if any."
          type: string
        priority:
          description: The priority from the parent configuration.
          type: string
        assignmentsTotalCount:
          format: int32
          description: The overall number of assignments to be reviewed in the campaign
            instance.
          type: integer
        campaignConfigurationId:
          description: The id of the parent configuration.
          type: string
        reviewersCompletedCount:
          format: int32
          description: The total number of reviewers that have completed the review.
          type: integer
        timeClosed:
          format: date
          description: "The date representing when the instance was closed, if any."
          type: string
        assignmentsProcessedCount:
          format: int32
          description: The overall number of assignments processed for the campaign
            instance.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        name:
          description: The unique campaign instance name.
          type: string
        progress:
          format: int32
          description: The percentage of overall progress made in the campaign instance.
          type: integer
        id:
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/StateType'
          - description: A string representing the state of the campaign instance.
        assignmentSources:
          description: The campaign instance assignment sources.
          type: array
          items:
            type: string
        timeLastPause:
          format: date
          description: "The date representing when the instance was paused, if any."
          type: string
        supervisors:
          description: "The list of supervisors identified for the campaign. If a\
            \ group is selected as supervisor, the list contains the group members."
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
    Entitlement1:
      type: object
      properties:
        hasRights:
          type: boolean
        accountName:
          type: string
        rights:
          type: string
        name:
          type: string
          readOnly: true
        assigner:
          $ref: '#/components/schemas/UserGroup'
        extRef:
          type: string
        assignmentDate:
          format: date
          type: string
        id:
          type: string
        applicationId:
          type: string
    AssignmentStats:
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        count:
          format: int32
          description: The total number of associated object occurrences returned
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object
          type: integer
        entity:
          description: " A string representing the aggregated object. Not null if\
            \ filterType is type, state, priority"
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
    ErrorMessage1:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
    CampaignConfiguration:
      $ref: '#/components/schemas/CampaignConfiguration'
    CampaignConfigurationOutput:
      description: Representation of a campaign configuration for REST APIs
      required:
      - owner
      - type
      - priority
      - name
      - applications
      - launchDate
      - duration
      type: object
      properties:
        preview:
          description: "A flag for a preview campaign, not opened to reviewers"
          type: boolean
        tenantCreationLimits:
          allOf:
          - $ref: '#/components/schemas/TenantLimitsOutput'
          - description: A JSON object that indicates the limits for this tenant
        description:
          description: Campaign description
          type: string
        nextRunDate:
          description: "Estimated next run date for this configuration, if any"
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy
        launchDate:
          description: Date when the first instance of the campaign starts
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - epoch
          type: string
        automaticRefreshContinuousCampaign:
          description: A flag for a campaign to refresh the existing filter for building
            dataset. It is valid for continuous campaigns only.
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign type
            enum:
            - userassignment
            - groupassignment
            - account
        frequency:
          description: A UNIX or Linux Cron-compatible string that defines the start
            of subsequent instances
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The duration (in milliseconds) for which each campaign instance
            remains open
          type: integer
        isDeleted:
          description: The campaign configuration was deleted
          type: boolean
        continuous:
          description: A flag for a continuous campaign
          type: boolean
        draft:
          description: A flag for a draft campaign
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        id:
          description: Campaign configuration ID
          type: string
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        blocklist:
          description: List of users or groups denied for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        tenantUUID:
          type: string
        rev:
          description: Campaign configuration review
          type: string
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
        associatedPreviewCampaign:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/CampaignFrequency'
          - description: Frequency unit days or months
        runNow:
          description: A flag to start the campaign immediately
          type: boolean
        blacklist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign priority
            enum:
            - high
            - medium
            - low
        creationDate:
          description: Creation date of the campaign configuration
          type: string
        tenantId:
          type: string
        name:
          description: Campaign name
          type: string
        reviewerOverwritten:
          type: boolean
        applications:
          $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    Entitlement:
      description: Rest representation for an entitlement.
      required:
      - entitlementId
      type: object
      properties:
        entitlementId:
          description: Unique id of an entitlement
          type: string
    RundeckOperationResponse:
      type: object
      properties:
        count:
          format: int32
          type: integer
        description:
          type: string
    Activity3:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        remove:
          type: array
          items:
            type: string
    Activity4:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
        folderId:
          type: string
    Activity5:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
    V1SwaggerBulkApi:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operations'
    V1SwaggerUserRiskAnalysis:
      type: object
      properties:
        risks:
          type: array
          items:
            $ref: '#/components/schemas/Risk4'
        processId:
          format: int64
          type: integer
    Activity6:
      type: object
      properties:
        condition:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Activity6'
        name:
          type: string
    Activity1:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        remove:
          type: array
          items:
            type: string
    Activity2:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Activity:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        folderId:
          type: string
    Risk:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Activity6'
        remove:
          type: array
          items:
            type: string
    Mitigation:
      type: object
      properties:
        extraDescription:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        ownerId:
          type: string
    Mitigation1:
      type: object
      properties:
        extraDescription:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        ownerId:
          type: string
    Risk3:
      type: object
      properties:
        likelihood:
          type: string
        level:
          type: string
        trend:
          type: string
        acceptRational:
          type: string
        impact:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ownerId:
          type: string
        tolerance:
          type: string
    Mitigation2:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        processId:
          format: int64
          type: integer
        remove:
          type: array
          items:
            type: string
    Risk4:
      type: object
      properties:
        mitigationIds:
          type: array
          items:
            type: string
        riskId:
          type: string
    V1SwaggerUserRiskPreview:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
    Risk1:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        remove:
          type: array
          items:
            type: string
    Risk2:
      type: object
      properties:
        likelihood:
          type: string
        level:
          type: string
        trend:
          type: string
        acceptRational:
          type: string
        impact:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ownerId:
          type: string
        tolerance:
          type: string
    V1SwaggerUserRiskPreviewBulk:
      type: object
      properties:
        userId:
          type: string
        permissionIds:
          type: array
          items:
            type: string
    Permission:
      type: object
      properties:
        condition:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        name:
          type: string
    Operations:
      type: object
      properties:
        path:
          type: string
        bulkId:
          type: string
        method:
          type: string
        data:
          type: object

---
openapi: 3.0.3
info:
  title: Merged documentation
  version: "1.0"
servers:
- url: https://192.168.252.3:30943
tags:
- name: ACI Management
- name: Access Administration Batch Submit
- name: Access Management
- name: Activity Management
- name: Delegation Management
- name: Entitlement Assignments
- name: Entitlement Management
- name: Form Designer APIs v1.2
- name: ITIM Group Management
- name: Identity Policy Management
- name: LifecycleRule Management
- name: Organizational Management API
- name: Password Management
- name: Password Policy Management
- name: Person Management
- name: Search
- name: Service Management
- name: System User Management
- name: View Management
- name: Certification Campaign assignments v1.0 - Deprecated
- name: Certification Campaign assignments v2.0
- name: Certification Campaign configurations v1.0 - Deprecated
- name: Certification Campaign configurations v2.0
- name: Certification Campaign instances v1.0 - Deprecated
- name: Certification Campaign instances v2.0
- name: Certification Campaign statistics v1.0 - Deprecated
- name: Certification Campaign statistics v2.0
- name: Serviceability v2.0
- name: UI Capabilities v1.0
- name: ARC Statistics APIs
- name: ARC User APIs
- name: Activity Folder APIs
- name: Bulk APIs
- name: Business Activity APIs
- name: Mitigation APIs
- name: Risk APIs
paths:
  /acis/{id}:
    get:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIResponseBean'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    put:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIRequestBean'
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "204":
          description: The changes were accepted.
    delete:
      tags:
      - ACI Management
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "204":
          description: The request was accepted
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /lifecyclerule/{lifecycleRuleIdentifier}:
    get:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Lookup
      description: Returns information about the specified Lifecycle Rule.
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        description: Unique Identifier for a lifecycleRule.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the LifecycleRule.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=filter,decription"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxudWxsfG51bGw
                    title: Deletion Lifecycle Rule
                _attributes:
                  name: Deletion Lifecycle Rule
                  operation: delete
    put:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Modify
      description: "Modifies information for specified lifecycle Rule. This API modifies\
        \ attributes of lifecycle rule as well as update schedules. If you add new\
        \ schedule and do not wish to remove previously set schedules , then provide\
        \ new schedule along with previous schedules in request body. \r\n\r\n_attributes\
        \ : JSON representation of the lifecycle attributes to be modified. Following\
        \ attributes can be specified. \r\n\r\nname : Can be specified to modify the\
        \ name of the lifecycle rule. \r\n\r\ndescription : Can be specified to modify\
        \ the description of the lifecycle Rule. \r\n\r\nOperationName : Can be specified\
        \ to modify the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter\
        \ : Can be specified to modify the lifecycle rule filter. \r\n\r\nschedules\
        \ : JSON representation of array of lifecycle schedules to be set. It is an\
        \ optional attribute. In each schedule you can specify hour, minute, month,\
        \ day of the week, days of the week, day of the month, quarterly, and semi-annually.\
        \ Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour\
        \ of the schedule. Allowed values are 0-23. To specify hourly schedule set\
        \ hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59.\
        \ \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This\
        \ attribute is exclusive with dayOfWeek. To set the dayOfMonth value other\
        \ than -1(daily), the month value must be set either to specific month or\
        \ -1(monthly). Allowed values are 1-28, if the schedule is set to monthly,\
        \ otherwise the allowed value varies according to the month value. \r\n\r\n\
        month : month of the schedule (-1 if every month). Allowed values are 1-12\
        \ (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the\
        \ schedule (-1 if every day). This attribute is deprecated for weekly schedule.\
        \ This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 =\
        \ Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly\
        \ schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple\
        \ values are specified in pipe-separated format (1|2 = Sunday and Monday).\
        \ Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0\
        \ to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive\
        \ with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter\
        \ is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual\
        \ : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual\
        \ is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n"
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        description: Unique identifier for a LifecycleRule.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyLifecycleRuleRequestBeanSwagger'
      responses:
        "202":
          description: OK
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has an invalid data structure
                  for field " Schedule".
                id: CTGIMZ052
                inserts:
                - ' Schedule'
                key: com.ibm.isim.rest.data.INVALID_DATA_FOR
    delete:
      tags:
      - LifecycleRule Management
      summary: LifecycleRule Remove
      description: Remove the specified LifecycleRule.
      parameters:
      - name: lifecycleRuleIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has an invalid data structure
                  for field "invalid Identifier".
                id: CTGIMZ052
                inserts:
                - invalid Identifier
                key: com.ibm.isim.rest.data.INVALID_DATA_FOR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{category}/{orgContainerId}:
    get:
      tags:
      - Search
      summary: Organization Container Lookup
      description: Returns information about the specified organizational container.
      parameters:
      - name: category
        in: path
        description: "Specifies the type of organizational container to look up. Valid\
          \ values are - \"admindomains\", \"bporganizations\", \"organizationunits\"\
          , \"locations\", and \"organizations\". The values are case=insensitive."
        required: true
        schema:
          enum:
          - admindomains
          - bporganizations
          - organizationunits
          - locations
          - organizations
          type: string
      - name: orgContainerId
        in: path
        description: Unique Identifier for an organizational container.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: Specifies comma-separated attributes to return for the organizational
          container. The specified attributes are returned in the "_attributes" section
          of the response. Specifying a value of "*" returns all of the attributes.
          By default all the attributes are returned. Example - ?attributes=l
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of an organizational container (eg. ersupervisor). The specified
          attributes are returned in the "_embedded" section of the response. Specifying
          a value of '*' after reference attribute returns all the properties of the
          reference attribute. Example - ?embedded=ersupervisor.cn.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02OTczMDEyMjg3MDkyNTUzMTIwLG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                _embedded:
                  ersupervisor:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2lLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Alan Smith
                    _attributes:
                      cn: Alan Smith
                _attributes:
                  l: Raleigh
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /views/{id}:
    get:
      tags:
      - View Management
      summary: Get View
      description: "Returns details of the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 'OK. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResponseBean'
    put:
      tags:
      - View Management
      summary: Update View
      description: "Update the details of the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRequestBean'
      responses:
        "204":
          description: No Content
    delete:
      tags:
      - View Management
      summary: Delete View
      description: "Delete the specified view.\r\n"
      parameters:
      - name: id
        in: path
        description: Unique Identifier for view
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /formtemplates:
    get:
      tags:
      - Form Designer APIs v1.2
      summary: Get Formtemplates
      description: |-
        This API retrieves a list of form templates.

        Note: The form templates are sorted based on erformname.
      parameters:
      - name: ercustomclass
        in: query
        description: "Filters the formTemplates by specified ercustomclass. Note:\
          \ The client is responsible for performing URL encoding if necessary. Example\
          \ - ?ercustomclass=%2Bcn (%2B is UTF-8 encoding for + sign) "
        required: false
        schema:
          type: string
      - name: erformname
        in: query
        description: "Filters the formTemplates by specified erformname. Note: The\
          \ client is responsible for performing URL encoding if necessary. Example\
          \ - ?erformname=%2Bcn (%2B is UTF-8 encoding for + sign) "
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=10
        required: false
        schema:
          type: string
      - name: profileName
        in: query
        description: "Filters the formTemplates by specified profile name. Note: The\
          \ client is responsible for performing URL encoding if necessary. Example\
          \ - ?profileName=%2Bcn (%2B is UTF-8 encoding for + sign)"
        required: false
        schema:
          type: string
          example: Person
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-30 "
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/xml:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
            application/json:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
        "400":
          description: Bad Request
          content:
            application/xml: {}
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/xml: {}
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/xml: {}
            application/json: {}
        "404":
          description: Not Found
          content:
            application/xml: {}
            application/json: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems:
    put:
      tags:
      - Activity Management
      summary: Batch work items modify
      description: Modifies a batch of work items by either approving or rejecting
        the activity request.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: methodOverride
        in: header
        description: 'Specifies the HTTP method override. The value of this parameter
          is - "submit-in-batch". '
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkItemBatchUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entitlements/assignments/search:
    post:
      tags:
      - Entitlement Assignments
      summary: Enttilement Assignments Search
      description: Returns all role assignment attributes that match the specified
        search criteria.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
        required: false
        schema:
          type: integer
        example: 1000
      - name: page
        in: query
        description: Specifies the page to retrieve. Specify 1 for the first page.
        required: false
        schema:
          type: integer
        example: 1
      - name: user
        in: query
        description: Specifies the user for the search. It is the encoded value that
          is returned by the people search API
        required: false
        schema:
          type: string
        example: ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWNvbQ==
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' \"\
          \r\n\t\t\t\t\t+ \"option performs the search without referencing any cache.\
          \ The 'delete-cache' option deletes the cache. \"\r\n\t\t\t\t\t+ \"In this\
          \ case, empty search results are returned"
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAssignmentRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/json:
              example:
                count: 1
                limit: 1000
                resources:
                - code:
                    href: /itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA
                  assignmentAttributes:
                  - values:
                    - 12/16/2022
                    name: enddate
                  - values:
                    - in-person
                    name: method
                  - values:
                    - 08/15/2022
                    name: startdate
                  - values:
                    - chris.miller
                    name: instructors
                  entitlement:
                    href: /itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                    title: Java Programming
                  user:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                    title: John Doe
                  properties:
                    rightsRef: ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  entitlementName: Java Programming
                page: 1
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems/userrecert/{workitemId}:
    put:
      tags:
      - Activity Management
      summary: Work Item Modify for User Re-certification
      description: Modifies a work item by executing an action provided for the activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecertifyWorkItemSwagger'
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/quicksearches:
    get:
      tags:
      - Activity Management
      summary: Activities Quick Search
      description: Returns information about quick searches for activities that are
        sorted by due date.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/activities/quicksearches
                _attributes:
                  requesters:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: James Pearch
                    _attributes:
                      filter: requester;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsbb3JnLGRjPWNvbQ
                  requestees:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Alan Smith
                    _attributes:
                      filter: requestee;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG913U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  subjects:
                  - _links:
                      self:
                        href: /itim/rest/access/2460300160735116790
                        title: GSA
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300160735116790
                  - _links:
                      self:
                        href: /itim/rest/access/2460300385874741343
                        title: East Region Fileshare
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300385874741343
                  - _links:
                      self:
                        href: /itim/rest/access/2460300685064242489
                        title: Intranet
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300685064242489
                  - _links:
                      self:
                        href: /itim/rest/access/2460300534814505620
                        title: Payroll
                    _attributes:
                      filter: access;x-link=/itim/rest/access/2460300534814505620
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/{personId}:
    get:
      tags:
      - Person Management
      summary: Person Lookup
      description: Returns information about the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique Identifier for a user.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the user.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for reference\
          \ attributes of a user (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section of the response. Specifying a value of '*'\
          \ after reference attribute returns all the properties of the reference\
          \ attribute. Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      - name: forms
        in: query
        description: "Specifies the boolean. If true, then the form is returned for\
          \ the user."
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  manager:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Alan Smith
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  uid: asmith
                  ercustomdisplay: Smith
                  ersupervisor: "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  mail: asmith@ibm.com
                  manager: "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  givenname: Alan
                  erpersonstatus: ACTIVE
                  name: Alan Smith
                  sn: Smith
                  cn: Alan Smith
                  personType: Person
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    put:
      tags:
      - Person Management
      summary: Person Modify
      description: Modifies information for the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique identifier for a user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'suspend' to suspend a person. Example - X-HTTP-Method-Override=suspend\
          \ \n\r\nUse 'restore' to restore a suspended person. Example - X-HTTP-Method-Override=restore\
          \ \n\r\nThe default if this header is not specified is to send a PUT request"
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/PersonSuspendRestoreBeanSwagger'
              - $ref: '#/components/schemas/PersonModifyBeanSwagger'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    delete:
      tags:
      - Person Management
      summary: Person Delete
      description: Deletes the specified user.
      parameters:
      - name: personId
        in: path
        description: Unique identifier for a user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              schema:
                $ref: '#/components/schemas/PersonDeleteResponseBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /apisecurity/v1.0/runtime/entitlements:
    get:
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /passwordpolicy:
    get:
      tags:
      - Password Policy Management
      summary: Search Password Policy
      description: "Returns information about password policies matching the specified\
        \ search criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"erpolicyitemname\"\
        \ of the password policy is returned in the _links.self.title property. \r\
        \n\r\nBy default, no attributes are returned. The client must specify the\
        \ \"attributes\" query parameter to request the attributes to be returned\
        \ in the \"_attributes\" property of each service.\r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ password policy. The specified attributes are returned in the \"_attributes\"\
          \ property of each password policy. Specifying a value of \"*\" returns\
          \ all attributes. Example - ?attributes=rules,erpolicytarget,erenabled"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned service. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Bdescription\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without refererencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDEwMSxvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Default password policy for ITIM service
                _attributes:
                  erenabled: "true"
                  erscope: "2"
                  description: Disallow empty password for ITIM service
              - _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD01MTMxOTMxNDM2MDk5NjA2OTEzLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy
                _attributes:
                  erenabled: "true"
                  erscope: "2"
                  description: abc-desc
    post:
      tags:
      - Password Policy Management
      summary: Password Policy Create
      description: "Creates a new Password Policy with the given attributes. \r\n\r\
        \norgID : The ID of the Organization container in which this Password Policy\
        \ is to be created. This parameter is required. \r\n\r\nrules : JSON representation\
        \ of the Password Policy rules to be set. Below are the attributes than can\
        \ be used. \r\n\r\nminLength(Minimum length) : Minimum length of the password\
        \ to be generated. Numeric values allowed. By default, -1 is set indicating\
        \ that the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length\
        \ of the password to be generated. Numeric values allowed. By default, -1\
        \ is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum\
        \ repeated characters) : Maximum allowed number of sequential characters within\
        \ the password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length)\
        \ : Length of the password history used to check for repeating passwords.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length\
        \ of the password history used to check for repeating passwords spelled backwards.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID\
        \ in password. It is case sensitive. Allowed values are true and false. By\
        \ default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with\
        \ case insensitivity) : Allow or disallow userID in password regardless of\
        \ upper and lower cases. Allowed values are true and false. By default, true\
        \ is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user\
        \ name in password. It is case sensitive. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user\
        \ name with case insensitivity) : Allow or disallow user name in password\
        \ regardless of upper and lower cases. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary)\
        \ : Allow or disallow the use of passwords defined in password dictionary.\
        \ Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters\
        \ not allowed) : Characters which are not to be used within the password.\
        \ \r\n\r\nrequiredChars(Required characters) : Characters one of which which\
        \ must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters)\
        \ : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts\
        \ with characters) : Characters one of which must be the first character set\
        \ of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique\
        \ characters) : Minimum required number of distinct characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic\
        \ characters) : Minimum required number of alphabetic characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters)\
        \ : Minimum required number of numeric characters within the password. Numeric\
        \ values allowed. By default, -1 is set indicating that the rule is disabled.\
        \ \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password\
        \ complexity rule. Allowed value are true and false. By default, false is\
        \ set. \r\n\r\ncustomRules : JSON representation of custom password rules\
        \ to be enforced for the policy. The key contains the full qualified name\
        \ of the rule class as specified in passwordrules.properties. For example,\
        \ if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule,\
        \ then the key here will be examples.passwordrules.RegularExpressionRule.\
        \ The value parameter can contain boolean value or any other value as per\
        \ the property value of the rule in passwordrules.properties. For example,\
        \ if the value is set to false in the passwordrules.properties, then the user\
        \ can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\"\
        : \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy\
        \ targets to be set for the password policy. Allowed values for constant are\
        \ ALL_SERVICE(the policy will be applicable for all services in the system.\
        \ In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the\
        \ policy will be applicable for a specific service which is specified by the\
        \ service URI) and SERVICE_TYPE(the policy will be applicable for a specific\
        \ service type which is specified by the service profile name e.g WinLocalProfile).\
        \ Please note, for SERVICE_TYPE, only service profiles other than ITIM service,\
        \ hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE\
        \ must belong to the same org container for which the policy is being created.\
        \ \r\n\r\n_attributes : JSON representation of the Password Policy attributes\
        \ to be set. Below are the attributes than can be used. \r\n\r\nerpolicyitemname\
        \ : Name of the password policy. It is a mandatory parameter. \r\n\r\nerscope\
        \ : Scope of the password policy. Allowed value are 2(this business unit and\
        \ sub units) and 1(this business unit only). It is a mandatory parameter.\
        \ \r\n\r\nerenabled : Specifies whether the password policy will be enabled\
        \ or disabled as soon as the policy is created. Allowed values are true and\
        \ false. It is a mandatory parameter. \r\n\r\ndescription : Description of\
        \ the password policy. It is an optional parameter. \r\n\r\nerlabel : Specifies\
        \ a caption for the password policy. It is an optional parameter. \r\n\r\n\
        erkeywords : Specifies keywords for the password policy. It is an optional\
        \ parameter. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePasswordPolicyRequestBeanSwagger'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD02MzI4NTE2NjQyMTU3MTQzOTIwLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy new
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Organization
                _attributes:
                  erenabled: "true"
                  erglobalid: "6328516642157143920"
                  erscope: "1"
                  erkeywords: Policy new
                  description: test new
                  rules:
                    allowUserIDCaseInsensitive: true
                    minDistinctCharacters: -1
                    reversedHistoryLength: -1
                    minLength: 5
                    repeatedHistoryLength: -1
                    allowInDictionary: true
                    maxValidityPeriod: -1
                    passwordComplexity: false
                    allowUserName: true
                    customRules:
                      examples.passwordrules.RegularExpressionRule: "true"
                    maxSequentialCharacters: -1
                    allowUserNameCaseInsensitive: true
                    minAlphabeticCharacters: 3
                    allowUserID: true
                    invalidChars: ""
                    requiredChars: ""
                    restrictedToChars: ""
                    minValidityPeriod: -1
                    minDigitCharacters: -1
                    maxLength: 13
                    startsWithChars: ""
                  erpolicytarget:
                  - SPECIFIC_TYPE; WinLocalProfile
                  - SPECIFIC_SERVICE; ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                  objectclass:
                  - top
                  - erPasswordPolicy
                  - erManagedItem
                  - erPolicyBase
                  - erPolicyItemBase
                  erpolicyitemname: REST password-Policy new
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/cancel/{requestId}:
    post:
      tags:
      - Search
      summary: Request to Cancel
      description: Request to cancel that is in pending status.
      parameters:
      - name: requestId
        in: path
        description: Unique Identifier for a request.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /tasks/me/{category}:
    get:
      tags:
      - Search
      summary: Task Search
      description: Returns a list of tasks that can be performed by the currently
        logged in user.
      parameters:
      - name: category
        in: path
        description: "Identifies the application that is currently being accessed\
          \ by user. Valid values are console, selfservice, and servicecenter."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _id: SVCENTER_CHANGE_PASSWORD
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_CHANGE_PASSWORD_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_DELEGATION_SCHEDULE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_ACTIVITY
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_MY_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_OTHERS_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MANAGE_OTHERS_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_MODIFY_PROFILE_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_REQUEST_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_REQUEST_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_ACCESS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_ACCESS_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_PROFILE
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_PROFILE_FOR_MYSELF
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_REQUEST_STATUS
                _attributes:
                  isCustom: false
                  category: servicecenter
              - _id: SVCENTER_VIEW_TODO_LIST
                _attributes:
                  isCustom: false
                  category: servicecenter
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /passwordpolicy/{passwordPolicyId}:
    get:
      tags:
      - Password Policy Management
      summary: Password Policy Lookup
      description: Returns information about the specified password policy.
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique Identifier for the password policy.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the password\
          \ policy. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" will return all of the attributes.\
          \ By default all the attributes are returned. Example - ?attributes=erpolicytarget,description,rules"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/passwordpolicy/ZXJnbG9iYWxpZD00MDQ2MDQwOTE4NDI0MDQ3MTAxLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: REST password-Policy new
                _attributes:
                  description: Trial password policy
                  rules:
                    allowUserIDCaseInsensitive: true
                    minDistinctCharacters: -1
                    reversedHistoryLength: -1
                    minLength: 5
                    repeatedHistoryLength: -1
                    allowInDictionary: true
                    maxValidityPeriod: -1
                    passwordComplexity: false
                    allowUserName: false
                    customRules:
                      examples.passwordrules.RegularExpressionRule: qqq
                    maxSequentialCharacters: -1
                    allowUserNameCaseInsensitive: true
                    minAlphabeticCharacters: 3
                    allowUserID: true
                    invalidChars: ""
                    requiredChars: ""
                    restrictedToChars: ""
                    minValidityPeriod: -1
                    minDigitCharacters: -1
                    maxLength: 13
                    startsWithChars: ""
    put:
      tags:
      - Password Policy Management
      summary: Password Policy Modify
      description: "Modifies a Password Policy with the given attributes. Please note,\
        \ at least one of rules, policyTargets or _attributes will need to be specified.\
        \ \r\n\r\nrules : JSON representation of the Password Policy rules to be set.\
        \ Below are the attributes than can be used. This is an optional parameter.\
        \ \r\n\r\nNote : In order to disable an existing rule, the rule name will\
        \ need to be specified with it's default value e.g \"minLength\" : \"-1\"\
        \ \r\n\r\nminLength(Minimum length) : Minimum length of the password to be\
        \ generated. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length\
        \ of the password to be generated. Numeric values allowed. By default, -1\
        \ is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum\
        \ Repeated Characters) : Maximum allowed number of sequential characters within\
        \ the password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length)\
        \ : Length of the password history used to check for repeating passwords.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length\
        \ of the password history used to check for repeating passwords spelled backwards.\
        \ Numeric values allowed. By default, -1 is set indicating that the rule is\
        \ disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID\
        \ in password. It is case sensitive. Allowed values are true and false. By\
        \ default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with\
        \ case insensitivity) : Allow or disallow userID in password regardless of\
        \ upper and lower cases. Allowed values are true and false. By default, true\
        \ is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user\
        \ name in password. It is case sensitive. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user\
        \ name with case insensitivity) : Allow or disallow user name in password\
        \ regardless of upper and lower cases. Allowed values are true and false.\
        \ By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary)\
        \ : Allow or disallow the use of passwords defined in password dictionary.\
        \ Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters\
        \ not allowed) : Characters which are not to be used within the password.\
        \ \r\n\r\nrequiredChars(Required characters) : Characters one of which which\
        \ must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters)\
        \ : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts\
        \ with characters) : Characters one of which must be the first character set\
        \ of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique\
        \ characters) : Minimum required number of distinct characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic\
        \ characters) : Minimum required number of alphabetic characters within the\
        \ password. Numeric values allowed. By default, -1 is set indicating that\
        \ the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters)\
        \ : Minimum required number of numeric characters within the password. Numeric\
        \ values allowed. By default, -1 is set indicating that the rule is disabled.\
        \ \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password\
        \ complexity rule. Allowed value are true and false. By default, false is\
        \ set. \r\n\r\ncustomRules : JSON representation of custom password rules\
        \ to be enforced for the policy. The key contains the full qualified name\
        \ of the rule class as specified in passwordrules.properties. For example,\
        \ if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule,\
        \ then the key here will be examples.passwordrules.RegularExpressionRule.\
        \ The value parameter can contain boolean value or any other value as per\
        \ the property value of the rule in passwordrules.properties. For example,\
        \ if the value is set to false in the passwordrules.properties, then the user\
        \ can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\"\
        : \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy\
        \ targets to be set for the password policy. This is an optional parameter.\
        \ Assigning new values will remove all existing policy targets. In order to\
        \ retain previous targets, those targets need to be specified. Allowed values\
        \ for constant are ALL_SERVICE(the policy will be applicable for all services\
        \ in the system. In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the\
        \ policy will be applicable for a specific service which is specified by the\
        \ service URI) and SERVICE_TYPE(the policy will be applicable for a specific\
        \ service type which is specified by the service profile name e.g WinLocalProfile).\
        \ Please note, for SERVICE_TYPE, only service profiles other than ITIM service,\
        \ hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE\
        \ must belong to the same org container for which the policy is being created.\
        \ \r\n\r\n_attributes : JSON representation of the Password Policy attributes\
        \ to be set. This is an optional parameter. Below are the attributes than\
        \ can be used. \r\n\r\nerpolicyitemname : Name of the password policy. If\
        \ this parameter is specified, then a value must be entered. \r\n\r\nerscope\
        \ : Scope of the password policy. Allowed value are 2(this business unit and\
        \ sub units) and 1(this business unit only). If this parameter is specified,\
        \ then a value must be entered. \r\n\r\nerenabled : Specifies whether the\
        \ password policy will be enabled or disabled as soon as the policy is created.\
        \ Allowed values are true and false. If this parameter is specified, then\
        \ a value must be entered. \r\n\r\ndescription : Description of the password\
        \ policy. It is an optional parameter. \r\n\r\nerlabel : Specifies a caption\
        \ for the password policy. It is an optional parameter. \r\n\r\nerkeywords\
        \ : Specifies keywords for the password policy. It is an optional parameter.\
        \ \r\n"
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique identifier for the password policy to be modified.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPasswordPolicyRequestBeanSwagger'
      responses:
        "202":
          description: OK. The request was successful
    delete:
      tags:
      - Password Policy Management
      summary: Password Policy Delete
      description: Removes the specified password policy.
      parameters:
      - name: passwordPolicyId
        in: path
        description: Unique identifier for the password policy to be deleted.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}:
    get:
      tags:
      - System User Management
      summary: System User lookup
      description: Returns information about the specified Identity Governance system
        account.
      parameters:
      - name: systemUserId
        in: path
        description: A unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return the system\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. If the excludeAttributeFromResponse property in the rest.properties\
          \ is set to some attribute value, that attribute is excluded from the response\
          \ though it is specified in the attribute list. Specifying a value \"*\"\
          \ returns all of attributes except those that are specified in the excludeAttributeFromResponse\
          \ property. By default, all attributes other than those that are specified\
          \ in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid,eraccountstatus"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return a reference\
          \ attribute of the system user. For example, owner. The specified attributes\
          \ are returned in the \"_embedded\" section of the response. Specifying\
          \ a value \"*\" after a reference attribute returns all properties of the\
          \ reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNTM1NzA0Mjg2MzMyMTI1MTk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: asmith
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                  tasks:
                  - href: /itim/rest/tasks/me/servicecenter
                    title: servicecenter
                  - href: /itim/rest/tasks/me/selfservice
                    title: selfservice
                _attributes:
                  owner: "erglobalid=25357042863321251,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountcompliance: "1"
                  eruid: asmith
                  eraccountownershiptype: Individual
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/assignments:
    get:
      tags:
      - Search
      summary: Access Assignment Search
      description: "Returns all Access Assignments for the specified requestee. \n\
        If Header parameter Access-Categories-List is specified , the complete list\
        \ of access categories associated with the user assignments are returned."
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ access item. Specifying * returns all attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation,roleAssignmentAttributeValues"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) for sorting the \"\r\n\t\t\t\t\t+ \"returned list\
          \ of accesses. ?sort=%2BaccessName, ?sort=%2BaccessCategory, Example - ?sort=%2Ddescription\"\
          \r\n\t\t\t\t\t+ \"(%2B and %2D is UTF-8 encoding for + and - sign respectively)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the\
          \ client that specify the same search criteria are satisfied via the cache.\
          \ The 'no-cache' \"\r\n\t\t\t\t\t+ \"option specifies performs the search\
          \ without referencing any cache. The 'delete-cache' option deletes the \"\
          \r\n\t\t\t\t\t+ \"cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Permission-List
        in: header
        description: "Specifies whether the API returns the list of actions that can\
          \ be performed on the returned assignments. By default, the permissions\
          \ list is not returned. Example - Permission-List=get-permissions "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  account:
                    _links:
                      self:
                        href: /itim/rest/accounts/ZXJnbG9iYWxpZD00NjkzMTIzMjc1NjA3ODQ3MjU2LG91PTAsb3U9YWNjb3VudHMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: asmith7
                    _attributes:
                      eraccountcompliance: "1"
                      eruid: asmith7
                      eraccountstatus: "0"
                _links:
                  access:
                    href: /itim/rest/access/4693112079467885909
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: ausintranet(asmith7)
                _attributes:
                  badges: []
                  accessName: ausintranet
                  entityType: 2
                  description: Austin intranet
                  status: FULFILLED
                  tags: []
              - _links:
                  access:
                    href: /itim/rest/access/4693112079467885909
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Manager
                _attributes:
                  badges: []
                  roleAssignmentAttributes:
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: StartDate
                      assignmentAttributeLabel: StartDate
                      assignmentAttributeValue:
                        values:
                        - 12/21/2020
                        name: startdate
                      definedRoleName: Manager
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: EndDate
                      assignmentAttributeLabel: EndDate
                      assignmentAttributeValue:
                        values:
                        - 10/21/2020
                        name: enddate
                      definedRoleName: Manager
                  accessName: Manager
                  entityType: 3
                  description: Allows end user a manager role.
                  accessCategory: Application
                  status: FULFILLED
                  tags: []
                  isEditRoleAssignmnetAttributeAllowedForPerson: true
                  isViewRoleAssignmnetAttributeAllowedForPerson: true
    post:
      tags:
      - Access Administration Batch Submit
      summary: Access Assignment Batch Requests
      description: "\r\n[Access Assignment Batch Addition](/itim/swaggerdoc/Access_Assignment_Batch_Addition.html)\
        \ - Add access assignments in a batch. \n\r\n[Access Assignment Batch Deletion](/itim/swaggerdoc/Access_Assignment_Batch_Deletion.html)\
        \ - Delete access assignments in a batch. \n\r\n[Access Assignment Batch Modify](/itim/swaggerdoc/Access_Assignment_Batch_Modify.html)\
        \ - Modify access assignments in a batch. \n\r\n[Access Assignment Batch Validation](/itim/swaggerdoc/Access_Assignment_Batch_Validation.html)\
        \ - Validate access assignments in a batch. \n\r\n[Access Assignment Batch\
        \ Check Compliance](/itim/swaggerdoc/Access_Assignment_Batch_Check_Compliance.html)\
        \ - Check the compliance of access assignments in a batch. \r\n\r\nClick link\
        \ to see more details for each request\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pasns the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'check-compliance' to check a batch of access assignments\
          \ for compliance. Example - X-HTTP-Method-Override=check-compliance \n\r\
          \nUse 'validate-full' to validate access assignments in a batch. Example\
          \ - X-HTTP-Method-Override=validate-full \n\r\nUse 'submit-in-batch' to\
          \ submit access assignments for addition, deletion and modification in a\
          \ batch. Example - X-HTTP-Method-Override=submit-in-batch"
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAssignCheckComplianceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
        "202":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/me:
    get:
      tags:
      - System User Management
      summary: Current System User Lookup
      description: Returns information about a user who is logged in to the Identity
        Governance system account.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return the current\
          \ Identity Governance account. The specified attributes are returned in\
          \ the \"_attributes\" section of the response. If the excludeAttributeFromResponse\
          \ property in the rest.properties is set to some attribute value, that attribute\
          \ is excluded from the response though it is specified in the attribute\
          \ list. Specifying a value \"*\" returns all of attributes except those\
          \ that are specified in the excludeAttributeFromResponse property. By default,\
          \ all attributes other than those that are specified in excludeAttributeFromResponse\
          \ property are returned. Example - ?attributes=eruid,eraccountstatus"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return a reference\
          \ attribute of the system user. For example, owner. The specified attributes\
          \ are returned in the \"_embedded\" section of the response. Specifying\
          \ a value \"*\" after a reference attribute returns all properties of the\
          \ reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          headers:
            CSRFToken:
              description: "To prevent cross-site request forgery (CSRF) attacks,\
                \ a user must pass the valid CSRF token in the request header. When\
                \ a new PUT, POST, or DELETE request is created, the request header\
                \ must contain CSRF token that is received to the authorized user."
              style: simple
              schema:
                type: string
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: ITIM Manager
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                  tasks:
                  - href: /itim/rest/tasks/me/console
                    title: console
                  - href: /itim/rest/tasks/me/servicecenter
                    title: servicecenter
                  - href: /itim/rest/tasks/me/selfservice
                    title: selfservice
                _attributes:
                  owner: "erglobalid=00000000000000000007,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=00000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountcompliance: "1"
                  erobjecttype: "1"
                  eruid: ITIM Manager
                  erroles: "erglobalid=00000000000000000003,ou=sysRoles,erglobalid=00000000000000000000,ou=org,dc=com"
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles/{systemRoleId}:
    get:
      tags:
      - Search
      summary: System Role (ITIM Group) Lookup
      description: Returns information about the specified system role (ITIM Group).
      parameters:
      - name: systemRoleId
        in: path
        description: Unique Identifier for system role (ITIM Group).
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma- separated attributes to return for the system\
          \ role. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default all the attributes are returned. Example - ?attributes=errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for the reference
          attributes of system role (eg. erparent). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erparent.*
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA2MixvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Auditor
                _embedded:
                  erparent:
                    _links:
                      self:
                        href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: JKEnterprise
                    _attributes:
                      erorgstatus: "0"
                      description: J K Enterprise
                      o: JKEnterprise
                _attributes:
                  errolename: Auditor
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/constraints:
    get:
      tags:
      - System User Management
      summary: System User Contraints Lookup
      description: "Returns the constraints for the specified system user \r\n\nThe\
        \ \"passwordRules\" property is an array listing of each rule for the password.\
        \ \r\n\nIf there are no password rules, an empty array is returned."
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated constraints toe return for the
          specified link. The specified constraints are returned in the "_embedded"
          property of the constraint object. Example - ?embedded=passwordConstraints
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  passwordConstraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints/password
                    title: Password Constraints
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints
                    title: Constraints
                  systemuser:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: criegle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/{accessId}:
    get:
      tags:
      - Access Management
      summary: Access Lookup
      description: Returns information about the specified access.
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for an access\
          \ item. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. Example.\
          \ ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconAccessRoleAccess.gif
                  self:
                    href: /itim/rest/access/6892757478197795306
                    title: FTP Server
                  owners:
                    href: /itim/rest/access/6892757478197795306/owners
                _attributes:
                  badges:
                  - style: red
                    designation: Critical
                  - style: green
                    designation: JK Enterprise
                  accessName: FTP Server
                  entityType: 1
                  entityProfile: PosixLinuxProfile
                  accessCategory: Application
                  isCommon: true
                  description: FTP Server
    put:
      tags:
      - Access Management
      summary: Modify Access
      description: "\r\nModifies access information for the entity \r\n\r\n Required\
        \ attributes\r\nenableAccess - Value should be true if access needs to be\
        \ enabled otherwise false if access needs to be disabled \r\n\r\nentityType\
        \ - Value should be 3 as currently this API only supports creating access\
        \ for the role \r\n\r\nProvide list attributes(if any) that needs to be updated\
        \ e.g. badges, tags, additionalInformation, accessName, accessCategory, description,\
        \ isCommon, icon\r\n"
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAccessBean'
      responses:
        "204":
          description: No Content
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entitlements/assignments/{assignmentId}:
    get:
      tags:
      - Entitlement Assignments
      summary: Assignment Lookup
      description: Returns assignment details of a specified assignment ID.
      parameters:
      - name: assignmentId
        in: path
        description: Specifies the assignment ID for a lookup. It is the encoded value
          that is returned by the /assignments/search API
        required: true
        schema:
          type: string
        example: MTk5OTczMzYyNDk0Mjk2NDcxNw
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/json:
              example:
                code:
                  href: /itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA
                assignmentAttributes:
                - values:
                  - 12/16/2022
                  name: enddate
                - values:
                  - in-person
                  name: method
                - values:
                  - 08/15/2022
                  name: startdate
                - values:
                  - chris.miller
                  name: instructors
                entitlement:
                  href: /itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  title: Java Programming
                user:
                  href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                  title: John Doe
                properties:
                  rightsRef: ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn
                entitlementName: Java Programming
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /serviceprofiles:
    get:
      summary: Get All
      description: Get details of all installed service types
      parameters:
      - name: limit
        in: query
        description: enter a limit for search
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: "Returns serviceProfiles whose names contain the string specified\
          \ in the filter. Example: name=WinLocalProfile"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-30 "
        schema:
          type: string
      responses:
        "200":
          description: Fetched all details
        "404":
          description: Not Found. A general failure occurred while searching through
            the repository.
    post:
      summary: Add ServiceProfile
      description: Upload a Service profile jar
      parameters:
      - name: uuid
        in: query
        description: The product uuid to be used while adding serviceProfile
        required: false
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: choose ServiceProfile jar
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartBodyBean'
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/me:
    get:
      tags:
      - Person Management
      summary: Current Person Lookup
      description: Returns the information about the currently logged in user.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the current\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. Example\
          \ - ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for a reference\
          \ attribute of a user (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section of the response. Specifying a value of '*'\
          \ after reference attribute returns all properties of the reference attribute.\
          \ Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JjPWNvbQ
                    title: Alan Smith
                _embedded:
                  manager:
                    _links:
                      self:
                        href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Chuck Riegle
                    _attributes:
                      name: Chuck Riegle
                _attributes:
                  uid: asmith
                  telephonenumber: 919-224-1234
                  givenname: Alan
                  erpersonstatus: ACTIVE
                  name: Alan Smith
                  mobile: 919-123-4567
                  cn: Alan Smith
                  sn: Smith
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/bulk:
    post:
      tags:
      - Access Management
      summary: performAccessBulkOperation
      description: "\r\n\r\nEnable/ Disable access for Role Entities \r\n\r\n Required\
        \ attributes: \r\n\r\nenableAccess - Value should be true or false depending\
        \ on whether access is to be enabled or disabled \r\n\r\nentityRef - Value\
        \ should be uuid of the role for which access needs to be created. \r\n\r\n\
        accessCategory - Is considered only when enableAccess is true\r\n\r\nIn case\
        \ of providing accessSubtype value for accessCategory hierarchy of accessType\
        \ should be provided \r\n\r\ne.g. If Application has subtype ApplicationSubtype\
        \ and ApplicationSubtype has subtype ApplicationSubtypeChild\r\n\r\nthen to\
        \ add ApplicationSubtypeChild as accessCategory value should be provided as\
        \ Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\nNote: commonAccess\
        \ attribute considered only when enableAccess is true and is only applicable\
        \ for static roles not for dynamic roles. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAccessRequestBean'
      responses:
        "200":
          description: Success
        "207":
          description: "There was a problem with one or more entities in the list,\
            \ error details will be available in the response"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - result: "true"
                operation: update access of the role
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /roles/orgroles:
    get:
      tags:
      - Search
      summary: Organizational Role Search
      description: "Returns information about the organizational role that matches\
        \ the specified search criteria. \nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes to be returned in the \"_attributes\" property of each static\
        \ role. \nA requested attribute is not returned if the client does not have\
        \ permission to retrieve the attribute or if the value of the attribute is\
        \ null. \nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \n"
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for each static
          role. The specified attributes are returned in the "_attributes" property
          of each static role. Specifying a value of "*" returns all attributes. Example-
          ?attributes=errolename
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned static role. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example- ?sort=%2Berrolename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: type
        in: query
        description: Specifies the type of role to search for. Example. ?type=static
        schema:
          default: static
          enum:
          - static
          - dynamic
          - all
      - name: Cache-Control
        in: header
        description: "Specifies the caching options. By default, search results are\
          \ cached for each client so that subsequent requests by the client that\
          \ specify the same search criteria are satisfied via the cache. The 'no-cache'\
          \ option performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example- Cache-Control=no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example- items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: terminator Role
                _attributes:
                  errolename: terminator Role
              - _links:
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: supervisor Role
                _attributes:
                  errolename: supervisor Role
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /serviceprofiles/{uuid}:
    get:
      summary: Get by uuid
      description: Get details of a service profile
      parameters:
      - name: uuid
        in: path
        description: enter a uuid for search
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      summary: Update ServiceProfile
      description: "Upload a Service profile jar Note: The customer is responsible\
        \ for providing the correct UUID and the appropriate profile JAR file to be\
        \ updated"
      parameters:
      - name: uuid
        in: path
        description: The product uuid to be used while adding serviceProfile
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: choose ServiceProfile jar
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartBodyBean'
      responses:
        "200":
          description: OK
    delete:
      summary: delete a service profile
      description: Deletes a service profile when a valid uuid is provided.
      parameters:
      - name: uuid
        in: path
        description: The product uuid to delete for
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
        "204":
          description: No Content. Deleted the service Profile.
        "404":
          description: Not Found. A general failure occurred while searching through
            the repository.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/{personId}/accounts:
    get:
      tags:
      - Person Management
      summary: Person Account search
      description: Returns the accounts of a specified user.
      parameters:
      - name: personId
        in: path
        description: The person ID to retrieve accounts for.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the account.\
          \ The specified attributes are returned in the \"_attributes\" section.\
          \ Specifying a value of \"*\" returns all attributes. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of the accounts (eg. erservice). The specified attributes are
          returned in the "_embedded" section of the response. Specifying a value
          of '*' after reference attribute returns all the properties of the reference
          attribute. Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which the returned people are sorted. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  erservice:
                    _links:
                      statusDetails:
                        href: /itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20/statusdetails
                        title: statusDetails
                      self:
                        href: /itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                        title: ITIM Service
                    _attributes:
                      erservicename: ITIM Service
                _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: asmith
                _attributes:
                  eruid: asmith
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/configuration:
    get:
      tags:
      - Password Management
      summary: Password Configuration
      description: Return the Password configuration for Identity Governance.
      parameters:
      - name: attributes
        in: query
        description: Specifies if the password synch property is returned. Example
          - ?attributes=isSynchPassword
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/password/configuration
                    title: Challenge response configuration resource
                _attributes:
                  responseMinLength: -1
                  isSSOEnabled: false
                  challengeNumberRequired: 1
                  challengeResponseEnabled: true
                  responseMatchQuestion: false
                  responseDisallowUserID: false
                  isChallengeUserDefined: true
                  responseUniqueAnswer: false
                  isSynchPassword: true
                  isChallengeResponseEnforced: false
                  responseNumberConfigured: 1
                  applicationURL: /itim/self/Login/ChallengeResponse.do
                  responseMaxRepeatChar: -1
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/count:
    get:
      tags:
      - Activity Management
      summary: Pending Count of Activities For Current User
      description: Returns the count of pending requests for a user.
      parameters:
      - name: status
        in: query
        description: "Specifies the status of activities whose count is to be returned.\
          \ Currently, only the status PENDING is supported."
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                count: 30
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/assignments/{assignmentId}:
    delete:
      tags:
      - Access Management
      summary: Access Assignment Delete
      description: Deletes the specified access assignment.
      parameters:
      - name: assignmentId
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAssignmentSingleRequestBean'
      responses:
        "202":
          description: "Accepted. The request was accepted for processing, but the\
            \ processing is not complete."
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  result:
                    href: /itim/rest/requests/7655357092010861510
                requestID: "7655357092010861510"
                results:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    assingment:
                      href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVv
                  status: SUCCESS
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    accesses: []
                  status: SUCCESS
                overallStatus: SUBMITTED
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                results:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    assingment:
                      href: /itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAs
                  messages:
                  - text: com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID
                    key: com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID
                  status: ERROR
                overallStatus: ERROR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse:
    get:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup For Current User
      description: Returns the list of forgotten password questions configured for
        the currently logged in user.
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
                challengeResponses:
                - response: SHA-256:Y2hrdGMzOXBiOTN1:PdLrmAtsfC0u0zluEZ0u6lV0Ev0FmnY2cyuGmYKw/aw=
                  challenge: What is the name of your first company?
                - response: SHA-256:bnhqaXIwaDMxNWl6:TjBvQJnvo4BD3JGPTsGRtwvtIIBjsg/Zmthrdxf4mmM=
                  challenge: What is your favorite color?
                - response: SHA-256:a2I0dm9rOTI5MTI1:oCepu5gwY8YzcLhGJLnGck7XGhsNyJ8nIKIg5onXVEI=
                  challenge: How many siblings do you have?
    put:
      tags:
      - Password Management
      summary: Forgotten Password Challenge Response Question Update
      description: "Specifies that the currently logged in user can update the forgotten\
        \ password questions and answers. Users can modify the response for an existing\
        \ challenge or create a new challenge response. \r\nNote : The 'password'\
        \ attribute of the request payload must contain the Identity Manager System\
        \ account password of the current user."
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger'
      responses:
        "200":
          description: Challenge response questions are submitted successfully.
          content:
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
        "400":
          description: "Bad Request. This might happen if challenges are empty, a\
            \ response is not provided for a challenge, the password is invalid, and\
            \ et cetera."
          content:
            application/json:
              example:
                severity: E
                text: CTGIMH066E The value entered for Identity Governance Password
                  field is not correct. Enter the correct password.
                id: CTGIMH066
                key: com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD
    post:
      tags:
      - Password Management
      summary: Forgotten Password Challenge Response Question Submit
      description: Specifies that the currently logged in user can create forgotten
        passwordquestions and answers. The 'password' attribute of the request payload
        mustcontain the Identity Governance System account password of the current
        user.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger'
      responses:
        "201":
          description: Challenge response questions are submitted successfully.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
        "400":
          description: "Bad Request. This might happen if challenges are empty, a\
            \ response is not provided for a challenge, password is invalid, and et\
            \ cetera."
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMH066E The value entered for Identity Governance Password
                  field is not correct. Enter the correct password.
                id: CTGIMH066
                key: com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/bpperson:
    get:
      tags:
      - Person Management
      summary: People Search for Business Partner Person
      description: "Returns information for the specified user that belongs to a Business\
        \ Partner Person category. \r\n\r\nThe \"name\" of the user is returned in\
        \ the _links.self.title property. \r\n\r\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes that are returned in the \"_attributes\" property of each user.\
        \ \r\n\r\nA requested attribute is not returned if the client does not have\
        \ permission to retrieve the attribute or if the value of the attribute is\
        \ null. \r\n\r\nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ iser. The specified attributes are returned in the \"_attributes\" property\
          \ of each person. Specifying a value of \"*\" returns all attributes. Example\
          \ - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma separated attributes to return for a reference
          attribute of a user (eg. manager). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=manager.cn
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that should be returned
          by the search. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned result. Note: The client is responsible\
          \ for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is\
          \ UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options . By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Mark Stevens
                _attributes:
                  sn: Stevens
                  cn: Mark Stevens
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: James Parch
                _attributes:
                  sn: Parch
                  cn: James Parch
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entities:
    get:
      tags:
      - Search
      summary: Widget Filter Search
      description: "Returns the search results that are based on the filter configured\
        \ for a widget . This API is used with the form template REST API. Identity\
        \ Governance forms consist of some widgets that contain an LDAP search filter\
        \ that is configured by System Administrator. \r\n\nThis configured search\
        \ filter is returned by \"form tempalate\" REST API in an encrypted format.\
        \ The LDAP search API decrypts this filter and returns the search result.\
        \ \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the attribute that must be returned as part of search.\
          \ Only one attribute can be specified. If you specify a comma-separated\
          \ list of attributes, then no attributes are returned. Example - ?attributes=cn"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to be returned. Note : The range\
          \ uses a zero-based index. Example - items=0-99 "
        schema:
          type: string
      - name: com.ibm.isim.rest.accesstoken
        in: header
        description: This mandatory header parameter contains the encrypted filter
          on which search is executed. This token is generated by the "form template"
          REST API.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _id: ZXJnbG9iYWxpZD0yNDk5MjUzNTY5NjU4OTcxMTg1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Alan Smith
              - _id: ZXJnbG9iYWxpZD0yNDk5MjUzNTc0NjU3MTkyNzM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Chuck Riegle
              - _id: ZXJnbG9iYWxpZD0yNDk5MjU0NjU2NjczNDE2OTMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Dan Gosling
              - _id: ZXJnbG9iYWxpZD0yNDk5MjU0OTg3MjMzOTU0NjEyLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                _attributes:
                  cn: Danny Guthrie
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /identitypolicy:
    get:
      tags:
      - Search
      summary: Search All Identity Policies
      description: Returns list of all the Identity Policies.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ identity policy. By default, no attributes are returned. The client must\
          \ specify the \"attributes\" query parameter to request the attributes to\
          \ be returned in the \"_attributes\" property of each identity policy. A\
          \ requested attribute is returned if the client does not have permission\
          \ to retrieve the attribute or if the value of the attribute is null. Specifying\
          \ a value of \"*\" will return all of the attributes. Example. ?attributes=l"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Berpolicyitemname\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ
                    title: Default identity policy for ITIM (Person)
                _attributes:
                  eruserclass: Person
                  erenabled: "true"
                  erglobalid: "00000000000000000006"
                  erkeywords: Person
                  erscope: "2"
                  description: Default identity policy for all services and for Person
                    class.
                  erlabel: ITIM's default identity policy (Person)
                  erjavascript: "function createIdentity() { \n var EXISTING_CASE=0;\
                    \ \n var UPPER_CASE=1; \n var LOWER_CASE=2; \n var tf = false;\
                    \ \n var identity = \"\"; \n var baseidentity = \"\"; \n var counter\
                    \ = 0; \n var locale = subject.getProperty(\"erlocale\"); \n var\
                    \ fAttrKey = \"uid\"; \n var sAttrKey = \"\"; \n var idx1 = 0;\
                    \ \n var idx2 = 0; \n var fCase = 2; \n var sCase = 2; \n if ((locale\
                    \ != null) && (locale.length > 0)) { \n locale = locale[0]; \n\
                    \ }\n if (locale == null || locale.length == 0)\n locale = \"\"\
                    ; \n var firstAttribute = \"\"; \n var secondAttribute = \"\"\
                    ; \n if (((fAttrKey != null) && (fAttrKey.length > 0)) || ((sAttrkey\
                    \ != null) && (sAttrkey.length > 0))) {\n if ((fAttrKey != null)\
                    \ && (fAttrKey.length > 0)) { \n firstAttribute = subject.getProperty(fAttrKey);\
                    \ \n if (((firstAttribute != null) && (firstAttribute.length >\
                    \ 0))) \n firstAttribute = firstAttribute[0]; \n if (firstAttribute\
                    \ == null || firstAttribute.length == 0) \n firstAttribute = \"\
                    \"; \n else { \n firstAttribute=IdentityPolicy.resolveAttribute(fAttrKey,firstAttribute);\
                    \ \n if ((idx1>firstAttribute.length) || (idx1==0)) \n idx1=firstAttribute.length;\
                    \ \n firstAttribute = firstAttribute.substring(0,idx1); \n } \n\
                    \ if (fCase == UPPER_CASE) \n firstAttribute = firstAttribute.toUpperCase(locale);\
                    \ \n else if (fCase == LOWER_CASE) \n firstAttribute = firstAttribute.toLowerCase(locale);\
                    \ \n } \n if ((sAttrKey != null) && (sAttrKey.length > 0)) { \n\
                    \ secondAttribute = subject.getProperty(sAttrKey); \n if (((secondAttribute\
                    \ != null) && (secondAttribute.length > 0))) \n secondAttribute\
                    \ = secondAttribute[0]; \n if (secondAttribute == null || secondAttribute.length\
                    \ == 0) \n secondAttribute = \"\"; \n else { \n secondAttribute=IdentityPolicy.resolveAttribute(sAttrKey,secondAttribute);\
                    \ \n if ((idx2>secondAttribute.length) || (idx2==0)) \n idx2=secondAttribute.length;\
                    \ \n secondAttribute = secondAttribute.substring(0,idx2); \n }\
                    \ \n if (sCase == UPPER_CASE) \n secondAttribute = secondAttribute.toUpperCase(locale);\
                    \ \n else if (sCase == LOWER_CASE) \n secondAttribute = secondAttribute.toLowerCase(locale);\
                    \ \n } \n baseidentity = firstAttribute + secondAttribute; \n\
                    \ } \n if ((baseidentity == null) || (baseidentity.length == 0))\
                    \ { \n var givenname = subject.getProperty(\"givenname\"); \n\
                    \ if (((givenname != null) && (givenname.length > 0))) \n givenname\
                    \ = givenname[0]; \n if(givenname == null || givenname.length\
                    \ == 0) \n givenname = \"\"; \n else \n givenname = givenname.substring(0,1);\
                    \ \n baseidentity = givenname + subject.getProperty(\"sn\")[0];\
                    \ \n } \n if (baseidentity == null) {\n baseidentity = \"\";\n\
                    \ }\n tf = IdentityPolicy.userIDExists(baseidentity, false, false);\
                    \ \n if (!tf) \n return baseidentity; \n while (tf) { \n counter+=1;\
                    \ \n identity = baseidentity + counter; \n tf = IdentityPolicy.userIDExists(identity,\
                    \ false, false); \n } \n return identity; \n } \n \n return createIdentity();"
                  erpolicytarget: 2;*
                  objectclass:
                  - top
                  - erIdentityPolicy
                  - erPolicyBase
                  - erPolicyItemBase
                  - erManagedItem
                  erpolicyitemname: Default identity policy for ITIM (Person)
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
    post:
      tags:
      - Identity Policy Management
      summary: Identity Policy Create
      description: "Creates a new Identity Policy with the given attributes. \r\n\
        orgID : The ID of the Organization container in which this Identity Policy\
        \ is to be created. This parameter is required. \r\n_attributes : JSON representation\
        \ of the Identity Policy attributes to be set. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdentityPolicyRequestBeanSwagger'
      responses:
        "201":
          description: Created
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /acis:
    get:
      tags:
      - ACI Management
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: name
        in: query
        description: filter ACIs by name
        schema:
          type: string
      - name: orgID
        in: query
        description: filter ACIs by organization
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: target
        in: query
        description: filter ACIs by type
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIResponseBean'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
        "206":
          description: partial content when range parameter is used
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIResponseBean'
    post:
      tags:
      - ACI Management
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must containCSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIRequestBean'
      responses:
        "201":
          description: OK. The changes were accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIResponseBean'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles/{uuid}:
    get:
      tags:
      - ITIM Group Management
      summary: Lookup System Role
      description: Returns information about the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma- separated attributes to return for the system\
          \ role. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default all the attributes are returned. Example - ?attributes=errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for the reference
          attributes of system role (eg. erparent). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erparent.*
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/systemroles/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: AdminRole1111
                  ersystemrolecategory:
                    href: /itim/rest/v1.2/views/1
                    title: "1"
                  erparent:
                    href: /itim/rest/v1.2/organizationcontainers/organizations/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: isvgim
                _attributes:
                  errolename: AdminRole1111
                  description: new updated description for the systemrole
                  ersystemrolecategory: "1"
                  uuid: cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                  parentUUID: cc7ec53b-3305-41bb-9c6f-ce7b67115d9b
    put:
      tags:
      - ITIM Group Management
      summary: System Role Update
      description: Updates the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySystemRoleRequestSwagger'
      responses:
        "204":
          description: OK. The request was successful.
    delete:
      tags:
      - ITIM Group Management
      summary: System Role Delete
      description: Deletes the specified system role.
      parameters:
      - name: uuid
        in: path
        description: Unique identifier for a system role.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories:
    get:
      tags:
      - Access Management
      summary: Access Categories Search
      description: Returns all access categories defined in Identity Governance.
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BY2Nlc3NSb2xlLG91PWFjY2Vzc1R5cGUsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: Role
                _attributes:
                  name: Role
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1NYWlsR3JvdXAsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: E-mail group
                _attributes:
                  name: MailGroup
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1TaGFyZWRGb2xkZXIsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: Shared folder
                _attributes:
                  name: SharedFolder
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Application
                _attributes:
                  name: Application
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1CdXNpbmVzcyxvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Business
                _attributes:
                  name: Business
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/delegations:
    get:
      tags:
      - Delegation Management
      summary: Delegations Lookup
      description: "Returns information about the delegations, if any, for the specified\
        \ user."
      parameters:
      - name: systemUserId
        in: path
        description: Unique Identifier for a system user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                links:
                  delegatee:
                    href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                  self:
                    href: itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations/JGVydWlkPWNyaWVnbGUsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20kMTQyNDEzNjYwMDAwMCQxNDI0MjIzMDAwMDAw
                _attributes:
                  endDate: 1424223000000
                  startDate: 1424136600000
    post:
      tags:
      - Delegation Management
      summary: Delegation Add
      description: Adds delegation for the specified user.
      parameters:
      - name: systemUserId
        in: path
        description: Unique Identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateRequestBean'
      responses:
        "201":
          description: The delegation schedule is successfully created.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts:
    get:
      tags:
      - Search
      summary: Account Search
      description: "Returns information about accounts that match the specified search\
        \ criteria if there are any. \nBy default, no attributes are returned. The\
        \ client must specify the \"attributes\" query parameter to request the attributes\
        \ to be returned in the \"_attributes\" property of each account. \nIf wild-card\
        \ is used, the list of returned attributes is different for different account\
        \ profiles. \nIf a particular type is searched, the client knows the exact\
        \ value to pass so that a profile can be searched(Ex.PosixLinuxAccount, ITIMAccount\
        \ etc.). \n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes that are returned for\
          \ each account. The specified attributes are returned in the \"_attributes\"\
          \ property of each account. Specifying a value of \"*\" returns all attributes.\
          \ Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of accounts (eg. erservice). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned account. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Deruid\
          \ (%2D is UTF-8 encoding for - sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: criegle
                _attributes:
                  eruid: criegle
              - _links:
                  self:
                    href: /itim/rest/accounts/ZXJ1aWQ9YWF1c3RpbixvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: aaustin
                _attributes:
                  eruid: aaustin
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/{activityId}:
    get:
      tags:
      - Activity Management
      summary: Activity Lookup
      description: Returns information about the specified activity.
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: participantLimit
        in: query
        description: Specifies the maximum number of participants for an activity.
          Specifying a zero (0) indicates that there is no limit.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                request:
                  id: "2461570965242287130"
                  justification: ghyrh
                  submittedDate: 1428649755392
                _links:
                  requester:
                    href: /itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: James Pearch
                  request:
                    href: /itim/rest/requests/2461570965242287130
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
                  workitem:
                    href: /itim/rest/workitems/2461578203364444755
                  self:
                    href: /itim/rest/activities/2461577992772412588
                    title: Approval activity
                  dependentAccesses: []
                  participants:
                  - href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                subject:
                  _links:
                    icon:
                      href: custom/ui/images/access/iconApplicationAccess.gif
                    self:
                      href: /itim/rest/access/2460300160735116790
                      title: GSA
                  _attributes:
                    name: GSA
                    accessCategory: Application
                    description: GSA repository.
                    serviceName: GSA
                    type: ACCESS
                    accountUserId: asmith
                uiProperties:
                - name: ui.activities.displayJustification
                  value: true
                - name: ui.activities.displayUserComments
                  value: true
                _attributes:
                  requesteeName: Alan Smith
                  workitemId: "2461578203364444755"
                  instructions: Request for Approval
                  totalNumberOfParticipants: 1
                  requesterName: James Pearch
                  dueDate: 1428736156784
                  escalated: false
                  name: Approval activity
                  id: "2461577992772412588"
                  type: APPROVAL
                  status:
                    text: Pending
                    key: RequestAuditDataActivity.Status.PENDING
                  dueDateWarning: true
                actions:
                  approve:
                    code: AA
                    inProgressLabel:
                      text: Approving
                      key: AA_inProgress
                    label:
                      text: Approve
                      key: AA
                  reject:
                    code: AR
                    inProgressLabel:
                      text: Rejecting
                      key: AR_inProgress
                    label:
                      text: Reject
                      key: AR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access:
    get:
      tags:
      - Search
      summary: Access Search
      description: Returns all accesses for the specified user.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ access item. The specified attributes are returned in the \"_attributes\"\
          \ property of each access item. Specifying a value of \"*\" returns all\
          \ attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: searchForCommonAccess
        in: query
        description: Decides whether default search for common access should be executed
          in request access flow.
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) by which the returned list of accesses should be\
          \ sorted. Sorting is currently supported on the following attributes- accessName,\
          \ accessCategory, description and additionalInformation. Any other attribute\
          \ will be ignored and the sorting attribute and order will be chosen by\
          \ the underlying data store (in the case of access it is RDBMS). Example\
          \ - ?sort=%2BaccessName, ?sort=%2BaccessCategory, ?sort=%2Ddescription,\
          \ ?sort=%2DadditionalInformation (%2B and %2D is UTF-8 encoding for + and\
          \ - sign respectively)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ searches without referencing any cache. The 'delete-cache' option deletes\
          \ the cache. In this case, empty search results are returned. Example -\
          \ Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplications~BusinessApplications~FinanceAccess.gif
                  self:
                    href: /itim/rest/access/376511431976528341
                    title: Accounting Plus
                  owners:
                    href: /itim/rest/access/376511431976528341/owners
                _attributes:
                  badges: []
                  additionalInformation: ' '
                  accessName: Accounting Plus
                  entityType: 2
                  entityProfile: LdapGroupProfile
                  accessCategory: Applications:BusinessApplications:Finance
                  isCommon: false
                  description: "Accounts payable, receivable and more..."
                  tags: "Require manager approval |testing 1,2,3"
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif
                  self:
                    href: /itim/rest/access/376511317273827596
                    title: Business Partner Connect
                  owners:
                    href: /itim/rest/access/376511317273827596/owners
                _attributes:
                  badges: []
                  additionalInformation: ' '
                  accessName: Business Partner Connect
                  entityType: 2
                  entityProfile: LdapGroupProfile
                  accessCategory: Applications:SupportApplications
                  isCommon: false
                  description: Allows business partners to access project manuals
                    and support documentation.
                  tags: Customer data
              - _links:
                  assignments:
                    href: /itim/rest/access/assignments
                  icon:
                    href: custom/ui/images/access/iconApplicationAccess.gif
                  self:
                    href: /itim/rest/access/3383957381996504114
                    title: Manager
                  owners:
                    href: /itim/rest/access/3383957381996504114/owners
                _attributes:
                  badges: []
                  roleAssignmentAttributes:
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: StartDate
                      assignmentAttributeLabel: StartDate
                      definedRoleName: Manager
                  - _attributes:
                      definedRole: /itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0
                      assignmentAttributeKey: EndDate
                      assignmentAttributeLabel: EndDate
                      definedRoleName: Manager
                  additionalInformation: ' '
                  accessName: Manager
                  entityType: 3
                  entityProfile: Organization role
                  description: Allows end user a manager role.
                  isCommon: false
                  tags: Customer data
                  isEditRoleAssignmnetAttributeAllowedForPerson: true
    post:
      tags:
      - Access Management
      summary: Create Access
      description: "\r\n\r\nCreates access for the entity \r\n\r\n Required attributes:\
        \ \r\n\r\nentityType - Value should be 3 as currently this API only supports\
        \ creating access for the role \r\n\r\nentityRef - Value should be uuid of\
        \ the role for which access needs to be created. \r\n\r\naccessCategory -\
        \ \r\n\r\nIn case of providing accessSubtype value for accessCategory hierarchy\
        \ of accessType should be provided \r\n\r\ne.g. If Application has subtype\
        \ ApplicationSubtype and ApplicationSubtype has subtype ApplicationSubtypeChild\r\
        \n\r\nthen to add ApplicationSubtypeChild as accessCategory value should be\
        \ provided as Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\
        \nNote: isCommon attribute is only applicable for static roles not for dynamic\
        \ roles. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessBean'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                accessId: "5065865355324288496"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/constraints/password:
    get:
      tags:
      - Password Management
      summary: System User password constraints Lookup
      description: "Returns the password constraints for the specified system user.\
        \ \r\nThe \"passwordRules\" property is an array listing of each rule for\
        \ the password. If there are no password rules, an empty array is returned."
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated constraints to return for the specified
          link. The specified constraints are returned in the "_embedded" property
          of the constraint object. Example - ?embedded=passwordConstraints
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints/password
                    title: Password Constraints
                passwordRules:
                - text: The minimum number of characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories/{accessCategoryID}:
    get:
      tags:
      - Access Management
      summary: Access Category Lookup
      description: Returns information about a specified access category.
      parameters:
      - name: accessCategoryID
        in: path
        description: Unique Identifier for an access category.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  children:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/childaccesscategories
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                _attributes:
                  name: Application
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /workitems/{workitemId}:
    put:
      tags:
      - Activity Management
      summary: WorkItem Modify
      description: "Modifies a work item by executing an action provided for the activity.\r\
        \n\r\nRequest Body Parameters:\r\n\r\nA decision based activity eg. approvals,\
        \ separation of duty violations, simple user recertifications:\r\n\r\nEither\
        \ of the following action code should be specified in the request body:\r\n\
        \r\nFor an activity approval : AA\r\n\r\nFor an activity rejection : AR\r\n\
        \r\n\r\n\r\nCompleting a work order request:\r\n\r\nEither of the following\
        \ action code should be specified in the request body:\r\n\r\nFor an activity\
        \ success : SS  if you complete the work order.\r\n\r\nFor an activity warning\
        \ : SW  if the work order is only partially complete.\r\n\r\nFor an activity\
        \ failure : SF  if you cannot complete the work order.\r\n\r\n\r\n\r\nCompleting\
        \ a global alert policy enforcement:\r\n\r\nThe following action code should\
        \ be specified in the request body:\r\n\r\nFor an activity success: SS if\
        \ you want to correct the noncompliance.\r\n\r\nYou must set attribute deferActivity\
        \ to false.\r\n\r\n\r\n\r\nDeferring a global alert policy enforcement:\r\n\
        \r\nThe action code should be specified as SS in the request body:\r\n\r\n\
        You must set attribute deferActivity to true.\r\n\r\nYou must specify deferDate,\
        \ which is in milliseconds since the standard base time known as \"the epoch\"\
        , namely January 1, 1970, 00:00:00 GMT.\r\n\r\n\r\n\r\nProviding request for\
        \ information:\r\n\r\nThe following action code should be specified in the\
        \ request body:\r\n\r\nFor an activity request submission: RS.\r\n\r\nYou\
        \ can specify the value for RFI attributes in rfiAttributeValues.\r\n\r\n\r\
        \n\r\n\r\n\r\n[See request examples](/itim/swaggerdoc/workItemModify.html)"
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkItemUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
    post:
      tags:
      - Activity Management
      summary: User Re-certification Check Impact
      description: Evaluates the user re-certification impact
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: 'Specifies the HTTP method override. The value of this parameter
          is - "check-recertification" '
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRecertificationDetailsBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                rolesImpactTarget:
                - ownershipType: ""
                  name: Developers
                  impactedBy: ""
                  description: Developers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                - ownershipType: ""
                  name: Managers
                  impactedBy: ""
                  description: Managers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                accountsImpactTarget:
                - ownershipType: Individual
                  name: vm on linux service
                  impactedBy: ""
                  description: ""
                  dependentRecertificationTodoTargets:
                  - ownershipType: ""
                    name: apache access
                    impactedBy: ""
                    description: Apache access to xyz application
                    dependentRecertificationTodoTargets: []
                    dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                    impactType: explicit
                  dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: ""
                - ownershipType: Individual
                  name: vm on aix service
                  impactedBy: Developers
                  description: ""
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                  impactType: implicit
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities:
    get:
      tags:
      - Activity Management
      summary: Activities Search
      description: Returns information about activities that match the specified search
        criteria.
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example. ?limit=1000
        schema:
          type: string
      - name: participantLimit
        in: query
        description: Specifies the maximum number of participants to return. Example.
          ?participantLimitParm=10
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned account."
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - request:
                  id: "2461570965242287130"
                  justification: ghyrh
                  submittedDate: 1428649755392
                _links:
                  requester:
                    href: /itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: James Pearch
                  request:
                    href: /itim/rest/requests/2461570965242287130
                  requestee:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
                  workitem:
                    href: /itim/rest/workitems/2461578203364444755
                  self:
                    href: /itim/rest/activities/2461577992772412588
                    title: Approval activity
                  dependentAccesses: []
                  participants:
                  - href: /itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Chuck Riegle
                subject:
                  _links:
                    icon:
                      href: custom/ui/images/access/iconApplicationAccess.gif
                    self:
                      href: /itim/rest/access/2460300160735116790
                      title: GSA
                  _attributes:
                    name: GSA
                    accessCategory: Application
                    description: GSA repository.
                    serviceName: GSA
                    type: ACCESS
                    accountUserId: asmith
                _attributes:
                  requesteeName: Alan Smith
                  workitemId: "2461578203364444755"
                  instructions: Request for Approval
                  totalNumberOfParticipants: 1
                  requesterName: James Pearch
                  dueDate: 1428736156784
                  escalated: false
                  name: Approval activity
                  id: "2461577992772412588"
                  type: APPROVAL
                  status:
                    text: Pending
                    key: RequestAuditDataActivity.Status.PENDING
                  dueDateWarning: true
                actions:
                  approve:
                    code: AA
                    inProgressLabel:
                      text: Approving
                      key: AA_inProgress
                    label:
                      text: Approve
                      key: AA
                  reject:
                    code: AR
                    inProgressLabel:
                      text: Rejecting
                      key: AR_inProgress
                    label:
                      text: Reject
                      key: AR
              - {}
              - {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/{requestId}:
    get:
      tags:
      - Search
      summary: Request Lookup
      description: Returns information about the specified request.
      parameters:
      - name: requestId
        in: path
        description: Unique Identifier for a request.
        required: true
        schema:
          format: int64
          type: integer
      - name: activityID
        in: query
        description: Specifies the activity ID that requires request information.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  requester:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                  self:
                    href: /itim/rest/requests/9170709815227290417
                obligations:
                - _auditattributes: {}
                  action: MODIFY_PERSON
                  id: obligation1
                  _attributes:
                    manager: "erglobalid=7641180504304689103,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                requests:
                - _links:
                    requestee:
                      href: /itim/rest/people
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Chuck Riegle
                      erparent:
                        href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD04ODE1MzI3OTYxODY1NjE5ODk3LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    _attributes:
                      mail: criegle@ibm.com
                      erparent: "erglobalid=8815327961865619897,ou=orgChart,erglobalid=00000000000000000000,ou=org,dc=com"
                  obligations:
                  - $ref: obligation1
                  _attributes:
                    action:
                      text: Edit profile
                      key: RequestAuditData.Action.MODIFY
                    status:
                      text: Fulfilled
                      key: RequestAuditData.Status.FULFILLED
                _attributes:
                  action:
                    text: Edit profile
                    key: RequestAuditData.Action.MODIFY
                  justification: Updating manager
                  id: "9170709815227290417"
                  submittedDate: 1430211848230
                  completedDate: 1430211859884
                  status:
                    text: Fulfilled
                    key: RequestAuditData.Status.FULFILLED
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{category}:
    get:
      tags:
      - Search
      summary: Organization Container Search
      description: Returns information about the organization container that matches
        the specified search criteria if any.
      parameters:
      - name: category
        in: path
        description: "Specifies the type of organization container to look up. Valid\
          \ values are - \"admindomains\", \"bporganizations\", \"organizationunits\"\
          , \"locations\", and \"organizations\". The values are case-insensitive."
        required: true
        schema:
          enum:
          - admindomains
          - bporganizations
          - organizationunits
          - locations
          - organizations
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ organizational container. By default, no attributes are returned. The\
          \ client must specify the \"attributes\" query parameter to request the\
          \ attributes to be returned in the \"_attributes\" property of each person.\
          \ A requested attribute is returned if the client does not have permission\
          \ to retrieve the attribute or if the value of the attribute is null. Specifying\
          \ a value of \"*\" will return all of the attributes. Example. ?attributes=l"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that search returns. Example.
          ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned location. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example. ?sort=%2Bl\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  l: Raleigh
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services:
    get:
      tags:
      - Service Management
      summary: Search Service
      description: "Returns information about services matching the specified search\
        \ criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"name\" of the service is\
        \ returned in the _links.self.title property. \r\n\r\nThe \"statusDetails\"\
        \ of the service is returned as the _links.statusDetails.href link. \r\n\r\
        \nBy default, no attributes are returned. The client must specify the \"attributes\"\
        \ query parameter to request the attributes to be returned in the \"_attributes\"\
        \ property of each service. \r\n\r\nIf a wild-card is used, the list of attributes\
        \ returned is different for different service profiles. \r\n\r\nTo search\
        \ a particular type, the client must know the exact value to pass to search\
        \ that profile(Ex.PosixLinuxProfile). \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ service. The specified attributes are returned in the \"_attributes\"\
          \ property of each service. Specifying a value of \"*\" returns all attributes.\
          \ Example - ?attributes=erservicename,owner,erparent"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned service. Note: The client is\
          \ responsible for performing URL encoding if necessary. Example - ?sort=%2Berservicename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ specifies performs the search without refererencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: GSA
                _attributes:
                  description: GSA hosted on Linux server.
                  erservicename: GSA
              - _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Fileshare on solaris
                _attributes:
                  description: Fileshare on solaris.
                  erservicename: Fileshare on solaris
    post:
      tags:
      - Service Management
      summary: Service Create
      description: "Creates a new service with the given attributes. \r\nprofileName:\
        \ Name of the service profile. This is a required parameter. \r\norgID: The\
        \ ID of the Organization container in which this service is to be created.\
        \ This parameter is required. \r\n_attributes : JSON representation of the\
        \ service attributes to be set. \r\n \r\nOptional request body parameters:\r\
        \n manualWorkOrderRequest: This is applicable only when service is to be created\
        \ in manual connection mode.\r\n If you request service in manual connection\
        \ mode and do not provide the details for the manualWorkOrderRequest, then\
        \ the service will\r\n be created with a default data for manual work order.\r\
        \n The manualWorkOrderRequest should be specified in following format : \r\
        \n\r\n \"manualWorkOrderRequest\": {\r\n\r\n      \"participant\": {\r\n \
        \           \t\"type\":\"USER\",\r\n             \t\"id\":\"ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVy\r\
        \n                Z2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ\"\
        \r\n       },\r\n      \"escalationParticipant\": {\r\n            \t\"type\"\
        :\"ADMINISTRATOR\"\r\n       },\r\n     \t\"escalationPeriod\":\"10\",\r\n\
        \     \t\"defaultNotification\":\"true\"\r\n }\r\n \r\n Supported values for\
        \ participant and escalationParticipant \"type\":\r\n 1) ADMINISTRATOR, SERVICE_OWNER,\
        \ MANAGER : id value does not required.\r\n 2) USER, ORGANIZATIONAL_ROLE,\
        \ GROUP : id value required.\r\n \r\n defaultProvisioningPolicyRequest: Should\
        \ be specified only when you want a default provisioning policy to be created\
        \ after\r\n the service is created.\r\n If you request service without providing\
        \ any details for defaultProvisioningPolicyRequest then request does not create\
        \ default\r\n provisioning policy for a service.\r\n \r\n This should be specified\
        \ in the following format :\r\n \"defaultProvisioningPolicyRequest\": {\r\n\
        \r\n \t\t\"enabled\":\"true\",\r\n \t\t\"provisioningMode\":\"Automatic\"\r\
        \n }\r\n \r\n \"provisioningMode\" mode, which specifies the provisioning\
        \ policy mode, should be Automatic or Manual.\r\n\r\n[See more request examples](/itim/swaggerdoc/serviceCreate.html)"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/password:
    put:
      tags:
      - Password Management
      summary: Change Password (System Accounts)
      description: Changes password for the Identity Governance System account.
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID to retrieve constraints for.
        required: true
        schema:
          type: string
      - name: maxWaitTime
        in: query
        description: Maximum time (in milliseconds) after which the call returns if
          request is not complete. A value less than 0 is not considered. Example
          - ?maxWaitTime=5000
        schema:
          type: string
      - name: pollingTime
        in: query
        description: Frequency (in milliseconds) to check if the request completed.
          A value less than 0 is not considered. Example - ?pollingTime=1000
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: Specifying "validate" requests validation of the password. Example
          - X-HTTP-Method-Override=validate
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordSwaggerBean'
      responses:
        "202":
          description: OK. The request was successful
        "400":
          description: Bad request. This response is returned if the request header
            or query parameters are not formatted correctly.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - severity: E
                text: CTGIMH001E The password does not meet the requirements of the
                  password rules.
                id: CTGIMH001
                key: com.ibm.passwordrules.ONE_OR_MORE_RULES_VIOLATED
                supportingData:
                  _links:
                    self:
                      href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password
                    systemuser:
                      href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                      title: ITIM Manager
                  passwordRules:
                  - text: The minimum number of characters in the password is 1.
                    inserts:
                    - "1"
                    key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
                    passedValidation: true
                  - text: The maximum number of characters in the password is 5.
                    inserts:
                    - "5"
                    key: com.ibm.isim.rest.passwordrules.MAX_LENGTH
                    passedValidation: false
                  - text: The maximum repeated characters in the password is 1.
                    inserts:
                    - "1"
                    key: com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL
                    passedValidation: true
                  - text: The password must not include the characters "!@#$".
                    inserts:
                    - '!@#$'
                    key: com.ibm.isim.rest.passwordrules.INVALID_CHAR
                    passedValidation: true
    post:
      tags:
      - Password Management
      summary: Validate password (System Account)
      description: Validates password for the Identity Governance System account.
      parameters:
      - name: systemUserId
        in: path
        description: The System User ID for which you want to retrieve constraints.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: Specifying a value of "validate" indicates a request to validate
          the password. Example - X-HTTP-Method-Override=validate
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePasswordSwaggerBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: '/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password '
                  systemuser:
                    href: '/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t '
                    title: ITIM Manager
                passwordRules:
                - text: The minimum number of characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MIN_LENGTH
                  passedValidation: true
                - text: The maximum number of characters in the password is 5.
                  inserts:
                  - "5"
                  key: com.ibm.isim.rest.passwordrules.MAX_LENGTH
                  passedValidation: false
                - text: The maximum repeated characters in the password is 1.
                  inserts:
                  - "1"
                  key: com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL
                  passedValidation: false
                - text: The password must not include the characters "!@#$".
                  inserts:
                  - '!@#$'
                  key: com.ibm.isim.rest.passwordrules.INVALID_CHAR
                  passedValidation: true
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /roles/{roleId}:
    get:
      tags:
      - Search
      summary: Role Lookup
      description: Returns information about the specified role.
      parameters:
      - name: roleId
        in: path
        description: Unique Identifier for a role.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies comma-separated attributes to return for the role.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default\
          \ all attributes are returned. Example - ?attributes=owner,errolename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of role (eg. owner). The specified attributes are returned in
          the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=owner.cn.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/roles/fdd7091a-2b90-425a-951c-042878e35ffc
                    title: ITIM Administrators
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  owner: "erglobalid=6892768069536854,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  errolename: ITIM Administrators
                  description: Predefined system administrator role
                  eraccessname: ITIM Administrators
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/enforcepolicy/{serviceId}:
    post:
      tags:
      - Service Management
      summary: Enforce Policy for Service
      description: "Enforce a policy on the specified service. \r\n\r\nscheduledTime\
        \ is optional. The scheduled time should be specified in following format\
        \ : MM/dd/yyyy HH:mm \r\n\r\nIf you want to enforce the policy immediately\
        \ then provide the null or empty contents (i.e. null or {}) in request body.\r\
        \n"
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnforcePolicyRequestBeanSwagger'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/person:
    get:
      tags:
      - Person Management
      summary: People Search for Person Category
      description: "Returns information for the specified user that belongs to a Person\
        \ category. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title\
        \ property. \r\n\r\nBy default, no attributes are returned. The client must\
        \ specify the \"attributes\" query parameter to request the attributes that\
        \ are returned in the \"_attributes\" property of each user. \r\n\r\nA requested\
        \ attribute is not returned if the client does not have permission to retrieve\
        \ the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute\
        \ has multiple values, the value of the corresponding property is an array\
        \ of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each person. The specified attributes are returned in the \"_attributes\"\
          \ property of each person. Specifying a value of \"*\" will return all of\
          \ the attributes. Example - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for a reference
          attribute of a user (eg. manager). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=manager.cn
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned result. Note: The client is responsible\
          \ for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is\
          \ UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  manager:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3UdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: Chuck Riegle
                    _attributes:
                      cn: Chuck Riegle
                _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Alan Smith
                _attributes:
                  sn: Smith
                  cn: Alan Smith
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: Chuck Riegle
                _attributes:
                  sn: Riegle
                  cn: Chuck Riegle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/profiles:
    get:
      tags:
      - Person Management
      summary: Person profile search
      description: Returns all profile types for Person.
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                profiles:
                - Person
                - BPPerson
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms/people/{profileName}:
    get:
      tags:
      - Search
      summary: Form Template Person Profile Lookup
      description: Returns the form of the specified person profile
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body:
                      tabbedForm:
                        tab:
                        - image: true
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                            - parameter: "true"
                              type: REQUIRED
                            - type: INVALID_CHARS
                            - parameter: "true"
                              type: NO_WHITE_SPACE
                            label: User ID
                            required: "true"
                          - input:
                              size: "50"
                              name: data.erposixgecos
                              type: text
                            editable: true
                            name: data.erposixgecos
                            label: Gecos (comments)
                          - input:
                              size: "50"
                              name: data.erposixuid
                              type: text
                            editable: true
                            name: data.erposixuid
                            constraint:
                            - parameter: "true"
                              type: INTEGER_ONLY
                            - parameter: "0"
                              type: MIN_VALUE
                            label: UID number
                          - editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixdupuid
                            label: Allow duplicate UIDs?
                          - isHiddenOnModify: "true"
                            editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixprivategroup
                            label: Do Not Create User Private Group
                          - editable: true
                            name: data.erposixsudoprivileges
                            isReadOnlyOnModify: "true"
                            label: sudo privileges
                            editableTextList:
                              comboItem:
                                size: true
                                width: "300"
                                name: data.erposixsudoprivileges
                                label: sudo privileges
                            direction: inherit
                          index: "0"
                          title: Account information
                          selected: "true"
                          url: "javascript:switchTabs (document.forms['body'],0);"
                        - image: true
                          formElement: []
                          index: "1"
                          title: Access information
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],1 );"
                        - image: true
                          formElement: []
                          index: "3"
                          title: Pre Exec and Post Exec Choices
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],3 );"
                _links:
                  resourcebundle:
                    href: /itim/rest/forms/resourcebundle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts/{accountId}:
    get:
      tags:
      - Search
      summary: Account Lookup
      description: Returns information about the specified account.
      parameters:
      - name: accountId
        in: path
        description: Unique Identifier for an account.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the account.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" returns all attributes. By default,\
          \ all the attributes are returned. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of accounts (eg. erservice). The specified attributes are returned
          in the "_embedded" section of the response. Specifying a value of '*' after
          reference attribute returns all the properties of the reference attribute.
          Example - ?embedded=erservice.erservicename.
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  owner:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY3NDYwMzI3MDc1MzQ5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  erservice:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3NDc4MTk3Nzk1MzA2LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  self:
                    href: /itim/rest/accounts/ZXJnbG9iYWxpZD02ODkyNzY3NjE1NTUxODgzNjQzLG91PTAsb3U9YWNjb3VudHMsZXJnbG9MDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                    title: asmith
                _attributes:
                  owner: "erglobalid=6892767460327075,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  erservice: "erglobalid=6892757478197795,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  eruid: asmith
                  eraccountstatus: "0"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/complianceDetails/{activityId}:
    get:
      tags:
      - Activity Management
      summary: Compliance Issues Lookup
      description: Returns compliance issues to be resolved for the specified todo
        activity.
      parameters:
      - name: activityId
        in: path
        description: Unique identifier for a activity.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _attributes:
                  name: Local Groups
                  label: Local Groups
                  newValues: Guest
              - _attributes:
                  name: Description
                  label: Description
                  oldValues: Distributed Users
              - _attributes:
                  name: Description
                  label: Description
                  newValues: Common Users
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse/user:
    post:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup
      description: Returns the list of forgotten password questions configured for
        the user.
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeRequestUserBean'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/user
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
        "400":
          description: "Bad Request. This could happen if the forgotten passwordconfiguration\
            \ is not enabled or the user has not providedanswers to the forgotten\
            \ password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM049E The password challenge response function is disabled.
                  Contact the Identity Governance administrator for more information.
                id: CTGIMM049
                key: com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /access/{accessId}/owners:
    get:
      tags:
      - Access Management
      summary: Access Owners Search
      description: Returns users who are owners of the specified access.
      parameters:
      - name: accessId
        in: path
        description: Unique identifier for an access.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ user. Example - ?attributes=cn,sn"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma separated attributes to return for a user\
          \ reference attribute (eg. manager). The specified attributes are returned\
          \ in the \\\"_embedded\\\" section. Example - ?embedded=manager.name,manager.telephoneNumber."
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and its order (\"+\" for ascending,\
          \ \"-\" for descending) for sorting the returned users. Example - ?sort=+cn"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the\
          \ client that specify the same search criteria are satisfied via the cache.\
          \ The 'no-cache' \"\r\n\t\t\t\t\t+ \"option performs the search without\
          \ referencing any cache. The 'delete-cache' option deletes the cache. \"\
          \r\n\t\t\t\t\t+ \"In this case, empty search results are returned. Example\
          \ - Cache-Control = no-cache"
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Alan Smith
              - _links:
                  formTemplate:
                    href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAcGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch
                  self:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Chuck Reigle
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accesscategories/{accessCategoryID}/childaccesscategories:
    get:
      tags:
      - Access Management
      summary: Child Access Categories Lookup
      description: Returns all sub-categories of a specified access category.
      parameters:
      - name: accessCategoryID
        in: path
        description: Unique Identifier for an access category.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The request is successfully processed.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbkhpZXIxLGVyb2JqZWN0cHJvZmlsZW5hbWU9QXBwbGljYXRpb24sb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: Finance
                _attributes:
                  name: Finance
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbjg3NjY4Um9sZTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: HumanResource
                _attributes:
                  name: HumanResource
              - _links:
                  self:
                    href: /itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1zdWJjYXRlZ29yeTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ
                    title: Marketing
                _attributes:
                  name: Marketing
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms/resourcebundle:
    get:
      tags:
      - Search
      summary: Resource Bundle Lookup
      description: Returns resource bundle which contains all the labels for Identity
        Governance attributes.
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/forms/resourcebundle
                _attributes:
                  "0": Active
                  erservicepassword: Administrator password
                  "1": Inactive
                  street: Street
                  reconciliation.monthly: Monthly
                  eraccessoption: Access Options
                  erlastoperation: Last Operation
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /accounts/password:
    put:
      tags:
      - Password Management
      summary: Get Password Rules/Submit Change Password/Validate Change Password
      description: "This endpoint can be used to perform following operations:\n\n\
        [Get Password Rules](/itim/swaggerdoc/Get_Password_Rules.html) - Retrieve\
        \ password policies that tell users how to create a compliant password. \n\
        [Submit Change Password](/itim/swaggerdoc/Submit_Change_Password.html) - Submit\
        \ a password to update it. \n[Validate Change Password](/itim/swaggerdoc/Validate_Change_Password.html)\
        \ - Validate whether the provided password complies with password rules. \n\
        \nClick link to see more details for each request"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Use 'cumulate' to gather password rules. Example - X-HTTP-Method-Override\
          \ = cumulate \nUse 'submit-in-batch' to set new password. Example - X-HTTP-Method-Override\
          \ = submit-in-batch \nUse 'validate-error-check-only' to validate the password\
          \ against rules. Example - X-HTTP-Method-Override = validate-error-check-only "
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers/{orgContainerId}:
    put:
      tags:
      - Organizational Management API
      summary: Transfer Organization unit
      description: Moves the organization unit from the current parent container to
        a new parent
      parameters:
      - name: orgContainerId
        in: path
        description: "Unique identifier for an organization, organization unit, location,\
          \ admin domain, busines partner unit."
        required: true
        schema:
          type: string
      - name: parentOrg
        in: query
        description: Unique identifier of the new parent container
        required: true
        schema:
          type: string
      - name: schedule
        in: query
        description: "The scheduled time should be specified in following format:\
          \ MM/dd/yyyy HH"
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2531483138088579374"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/rfiformdetails/{workitemId}:
    get:
      tags:
      - Activity Management
      summary: RFI Form Details Lookup
      description: Returns RFI form details to be resolved for the specified todo
        activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a activity.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body: {}
                container: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                processName: Person Add
                defaultAttrValues:
                  uid:
                  - Sachin
                  employeetype:
                  - empType1
                  manager:
                  - "erglobalid=7784750119600149440,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                  givenname:
                  - Sachin Babar
                id: CREATE_PERSON
                operation: add
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /authz/v1.0/entitlements/{entitlement}:
    post:
      tags:
      - Entitlement Management
      summary: Grant and Revoke an Entitlement to one or multiple users
      description: "\r\n\r\nGrant and Revoke an Entitlement to one or multiple users\
        \ \r\n\r\n Required attributes: \r\n\r\n user - Value should be Person ID\
        \ \r\n"
      parameters:
      - name: entitlement
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke'
      responses:
        "200":
          description: Success
          content:
            application/json:
              example:
              - code: 44e5e3f9-1e6e-4c34-83db-546ddf8cd693
                success: true
                operation: grant
              - code: 44e5e3f9-1e6e-4c34-83db-546ddf8cd693
                success: true
                operation: revoke
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /formtemplates/{profileName}:
    get:
      tags:
      - Form Designer APIs v1.2
      summary: Get Formtemplate
      description: This API is used to get formtemplate for a profile.
      parameters:
      - name: profileName
        in: path
        description: "Select profileName. Example values: WinLocalAccount, BPPerson,\
          \ BPOrganization, WinLocalGroupProfile, Location, Organization, OrganizationalUnit,\
          \ Person, DefaultRole, AdminDomain, ADFeed, CSVFeed, DSML2Service, DSMLInfo,\
          \ HostedService, ITIMService, RFC2798Feed, WinLocalProfile, SystemRole,\
          \ ITIMAccount"
        required: true
        schema:
          type: string
          example: Person
      responses:
        "200":
          description: Success
          content:
            application/xml:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/formtemplates/Person
                _attributes:
                  formTemplate:
                    tabbedForm:
                      tab:
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.sn
                            type: text
                          name: data.sn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $sn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.cn
                            type: text
                          name: data.cn
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $cn
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.uid
                            type: text
                          name: data.uid
                          constraint:
                          - parameter: "true"
                            type: REQUIRED
                          label: $uid
                          required: "true"
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "128"
                            name: data.givenname
                            type: text
                          name: data.givenname
                          constraint:
                          - parameter: "128"
                            type: MAX_LENGTH
                          label: $givenname
                          direction: inherit
                        - input:
                            size: "50"
                            maxlength: "20"
                            name: data.initials
                            type: text
                          name: data.initials
                          constraint:
                          - parameter: "20"
                            type: MAX_LENGTH
                          label: $initials
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homepostaladdress
                            type: text
                          name: data.homepostaladdress
                          label: $homepostaladdress
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.sharedsecret
                            type: text
                          name: data.ersharedsecret
                          label: $ersharedsecret
                          direction: inherit
                        - name: data.erroles
                          searchMatch:
                            orgSubTreeSearch: "true"
                            multiple: "true"
                            _class: DefaultRole
                            comboItem:
                              size: "4"
                              name: data.erroles
                              label: $erroles
                            category: Role
                            type: select
                          label: $erroles
                          direction: inherit
                        - input:
                            size: ""
                            name: data.erlocale
                            type: text
                            value: ""
                          helpText: ""
                          hintText: ""
                          isHiddenOnModify: ""
                          name: data.erlocale
                          isReadOnlyOnModify: ""
                          label: $erlocale
                          required: ""
                          direction: inherit
                        index: "0"
                        title: $personal
                        selected: "true"
                        url: "javascript:switchTabs(document.forms['body'],0);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.roomnumber
                            type: text
                          name: data.roomnumber
                          label: $roomnumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.employeenumber
                            type: text
                          name: data.employeenumber
                          label: $employeenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.title
                            type: text
                          name: data.title
                          label: $title
                          direction: inherit
                        - name: data.manager
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.manager
                              label: $manager
                            category: Person
                            type: input
                          label: $manager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.postaladdress
                            type: text
                          name: data.postaladdress
                          label: $postaladdress
                          direction: inherit
                        - name: data.secretary
                          searchControl:
                            orgSubTreeSearch: "true"
                            comboItem:
                              name: data.secretary
                              label: $secretary
                            category: Person
                            type: input
                          label: $secretary
                          direction: inherit
                        index: "1"
                        title: $corporate
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],1);"
                      - image: ' '
                        formElement:
                        - input:
                            size: "50"
                            name: data.mail
                            type: text
                          name: data.mail
                          constraint:
                          - parameter: "true"
                            type: EMAIL
                          label: $mail
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.telephonenumber
                            type: text
                          name: data.telephonenumber
                          label: $telephonenumber
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.mobile
                            type: text
                          name: data.mobile
                          label: $mobile
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.pager
                            type: text
                          name: data.pager
                          label: $pager
                          direction: inherit
                        - input:
                            size: "50"
                            name: data.homephone
                            type: text
                          name: data.homephone
                          label: $homephone
                          direction: inherit
                        - name: data.eraliases
                          label: $eraliases
                          editableTextList:
                            comboItem:
                              size: "4"
                              name: data.eraliases
                              label: $eraliases
                          direction: inherit
                        index: "2"
                        title: $communications
                        selected: "false"
                        url: "javascript:switchTabs(document.forms['body'],2);"
                  ercustomclass: inetOrgPerson
                  erformname: inetOrgPerson
        "400":
          description: Bad Request
          content:
            application/xml: {}
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/xml: {}
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/xml: {}
            application/json: {}
        "404":
          description: Not Found
          content:
            application/xml: {}
            application/json: {}
    put:
      tags:
      - Form Designer APIs v1.2
      summary: Update Formtemplates
      description: "This API is used to update a formtemplate for a profile. Required\
        \ attributes: profileName"
      parameters:
      - name: profileName
        in: path
        description: "Select profileName. Example values: WinLocalAccount, BPPerson,\
          \ BPOrganization, WinLocalGroupProfile, Location, Organization, OrganizationalUnit,\
          \ Person, DefaultRole, AdminDomain, ADFeed, CSVFeed, DSML2Service, DSMLInfo,\
          \ HostedService, ITIMService, RFC2798Feed, WinLocalProfile, SystemRole,\
          \ ITIMAccount"
        required: true
        schema:
          type: string
          example: Person
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignFormBean'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Success
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json: {}
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people:
    get:
      tags:
      - Person Management
      summary: Person Search
      description: "Returns information about users that match the specified search\
        \ criteria if any. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title\
        \ property. \r\n\r\nBy default, no attributes are returned. The client must\
        \ specify the \"attributes\" query parameter to request the attributes to\
        \ return in the \"_attributes\" property of each person. \r\n\r\nA requested\
        \ attribute is not returned if the client does not have permission to retrieve\
        \ the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute\
        \ has multiple values, the value of the corresponding property is an array\
        \ of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each person. The specified attributes are returned in the \"_attributes\"\
          \ section. Specifying a value of \"*\" returns all attributes. Example -\
          \ ?attributes=mail,telephoneNumber"
        schema:
          type: string
      - name: embedded
        in: query
        description: "Specifies the comma-separated attributes to return for a user\
          \ reference attribute (eg. manager). The specified attributes are returned\
          \ in the \"_embedded\" section. Example - ?embedded=manager.name,manager.telephoneNumber"
        schema:
          type: string
      - name: forms
        in: query
        description: "Specifies the boolean. If true, then form are returned for the\
          \ user."
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items for the search to return.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) by which to sort the returned users. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: subordinateFilter
        in: query
        description: "Specifies the boolean. If true, then the returned users are\
          \ filtered to narrow the search to a logged in users subordinates."
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Judith Hall
                _attributes:
                  telephoneNumber:
                  - 555-1111
                  - 555-2222
                  mail: jhall@jkenterprises.com
              - _links:
                  self:
                    href: http://localhost:9080/itim/rest/people/ABCnbG8iDFxpTR01Ngh4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjWQVdlZ
                    title: Chuck Riegle
                _attributes:
                  telephoneNumber: 555-3333
                  mail: criegle@jkenterprises.com
    post:
      tags:
      - Person Management
      summary: Person Create
      description: "\r\n\r\nCreates a new person with the given attributes \r\n\r\n\
        profileName, orgID is required . \r\n\r\nscheduledTime is optional. The scheduled\
        \ time should be specified in following format : MM/dd/yyyy HH:mm \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRequestBean'
      responses:
        "202":
          description: The requested was accepted.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                requestId: "2565810057541954463"
                changeComplete: false
                status: 0
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /ui/api/v1.0/user/preferences/customization:
    get:
      responses:
        "200":
          description: OK
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/challengeresponse/{userid}:
    get:
      tags:
      - Password Management
      summary: Forgotten Password Questions Lookup (Deprecated)
      description: "Returns the list of forgotten password questions configured for\
        \ the user. \nThis API has been deprecated to restrict passing userId in a\
        \ URL. For secure lookup of Forgotten Password Questions, use 'Forgotten Password\
        \ Questions Lookup' API with POST method.\n"
      parameters:
      - name: userid
        in: path
        description: Specifies the name of the user's Identity Governance System account.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/itim%20manager
                challenge:
                - What is the name of your first company?
                - What is your favorite color?
                - How many siblings do you have?
        "400":
          description: "Bad Request. This could happen if the forgotten passwordconfiguration\
            \ is not enabled or the user has not providedanswers to the forgotten\
            \ password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM049E The password challenge response function is disabled.
                  Contact the Identity Governance administrator for more information.
                id: CTGIMM049
                key: com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED
      deprecated: true
    put:
      tags:
      - Password Management
      summary: Submit Responses for Forgotten Password Questions
      description: Submit responses for forgotten password questions to recover password.
      parameters:
      - name: userid
        in: path
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordSubmitResponseBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/password/challengeresponse/criegle
                _attributes:
                  transactionid: "283367112556274689"
                  status: SUCCESS
        "400":
          description: "Bad Request. This might happen if the user providedincorrect\
            \ responses to forgotten password questions.\r\n"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMM036E The response is incorrect. Enter correct response.
                id: CTGIMM036
                key: com.ibm.itim.apps.ejb.home.HomeBean.INVALID_ANSWERS
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /authz/v1.0/access/assignments/assignment-attributes:
    put:
      tags:
      - Entitlement Management
      summary: Create assignment attributes value for a role type entitlement
      description: "\r\n\r\nCreate assignment attribute value for one or multiple\
        \ users \r\n\r\n Required attributes: \r\n\r\n Entitlement,User and AssignmentAttributeValue\
        \ \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAssignementAttributeValueGrant'
      responses:
        "200":
          description: Success
        "207":
          description: "There was a problem with one or more entities in the list,\
            \ error details will be available in the response"
          content:
            application/json:
              example:
              - result: "true"
                operation: update role assignment attribute values
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /identitypolicy/{identityPolicyId}:
    get:
      tags:
      - Identity Policy Management
      summary: Identity Policy Lookup
      description: Returns information about the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique Identifier for a Identity Policy.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the identity\
          \ policy. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. Specifying a value of \"*\" returns all attributes. By\
          \ default, all the attributes are returned. Example - ?attributes=erscope,erlabel"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ
                    title: Default identity policy for ITIM (Person)
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9RGl2eWE
                    title: Organization
                _attributes:
                  eruserclass: Person
                  erpolicytarget: 2;*
                  erpolicyitemname: Default identity policy for ITIM (Person)
    put:
      tags:
      - Identity Policy Management
      summary: Identity Policy Modify
      description: Modifies information for the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique identifier for a Identity Policy
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyIdentityPolicyBeanSwagger'
      responses:
        "202":
          description: OK. The request was successful
    delete:
      tags:
      - Identity Policy Management
      summary: Identity Policy Delete
      description: Deletes the specified Identity Policy.
      parameters:
      - name: identityPolicyId
        in: path
        description: Unique identifier for a Identity Policy.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /forms:
    get:
      tags:
      - Search
      summary: Form Template Lookup
      description: Returns the form of the specified entity.
      parameters:
      - name: access
        in: query
        description: Specifies the unique identifier of the access. Use this attribute
          with the requestee parameter to return the form of the account.
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma-separated attributes to return for reference
          attributes of forms. The parameter allows user to read the resource bundle
          details. Example - ?embedded=form.resourcebundle
        schema:
          type: string
      - name: requestee
        in: query
        description: Specifies the unique identifier of the person for whom the form
          must be looked up.
        required: true
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                template:
                  page:
                    body:
                      tabbedForm:
                        tab:
                        - image: true
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                            - parameter: "true"
                              type: REQUIRED
                            - type: INVALID_CHARS
                            - parameter: "true"
                              type: NO_WHITE_SPACE
                            label: User ID
                            required: "true"
                          - input:
                              size: "50"
                              name: data.erposixgecos
                              type: text
                            editable: true
                            name: data.erposixgecos
                            label: Gecos (comments)
                          - input:
                              size: "50"
                              name: data.erposixuid
                              type: text
                            editable: true
                            name: data.erposixuid
                            constraint:
                            - parameter: "true"
                              type: INTEGER_ONLY
                            - parameter: "0"
                              type: MIN_VALUE
                            label: UID number
                          - editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixdupuid
                            label: Allow duplicate UIDs?
                          - isHiddenOnModify: "true"
                            editable: true
                            checkbox:
                              name: checkbox
                              value: "false"
                            name: data.erposixprivategroup
                            label: Do Not Create User Private Group
                          - editable: true
                            name: data.erposixsudoprivileges
                            isReadOnlyOnModify: "true"
                            label: sudo privileges
                            editableTextList:
                              comboItem:
                                size: true
                                width: "300"
                                name: data.erposixsudoprivileges
                                label: sudo privileges
                            direction: inherit
                          index: "0"
                          title: Account information
                          selected: "true"
                          url: "javascript:switchTabs (document.forms['body'],0);"
                        - image: true
                          formElement: []
                          index: "1"
                          title: Access information
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],1 );"
                        - image: true
                          formElement: []
                          index: "3"
                          title: Pre Exec and Post Exec Choices
                          selected: "false"
                          url: "javascript:switchTabs (document.forms['body'],3 );"
                _links:
                  self:
                    href: /itim/rest/forms?access=/itim/rest/access/6892757478197795306&filterId=formSearch
                  resourcebundle:
                    href: /itim/rest/forms/resourcebundle
    post:
      tags:
      - Search
      summary: Label Lookup
      description: Returns label information about an attribute. For example - label
        of attribute "cn" is "Full Name".
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        description: "Default value : cn,sn,mail"
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - Full name
              - Last name
              - E-mail address
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /lifecyclerule:
    get:
      tags:
      - Search
      summary: Search All LifecycleRules
      description: Returns information about the lifecycle Rule that match the specified
        search criteria.
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for the LifecycleRule.
          The specified attributes are returned in the "_attributes" section of the
          response. Specifying a value of "*" returns all attributes.
        schema:
          type: string
      - name: ruleType
        in: query
        description: Specifies the rule type to be searched.
        required: true
        schema:
          enum:
          - PROFILE_TYPE
          - CATEGORY_TYPE
          - RECERT_POLICY_TYPE
          type: string
      - name: typeInfo
        in: query
        description: " String representing the type info to be searched. The values\
          \ that can be specified for typeInfo depends on ruleType and is summarized\
          \ below.To search rules at Global or other entity type level specify ruleType=CATEGORY_TYPE\
          \ and typeInfo = Global, Account, Person or BPPerson. To search rules for\
          \ a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile\
          \ name of the entity, like ADProfile, ITIMAccount, Person etc. To search\
          \ rules for a specific recertification policy, specify ruleType=RECERT_POLICY_TYPE\
          \ and typeInfo = the DN of the recertification policy."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxDQVRFR09SWV9UWVBFfEFjY291bnQ
                    title: Delete Person LCR
                _attributes:
                  filter: ""
                  name: Delete Person LCR
                  description: Lifecycle Rule to delete terminated person
                  ruleid: 9088349764208198280
                  operation: delete
    post:
      tags:
      - LifecycleRule Management
      summary: Add LifecylceRule
      description: "Create a new LifecylceRule with the given attributes. Following\
        \ is the description of attributes that are supported. \r\n\r\nruleType :\
        \ Mandatory Parameter in request body. Specifies the rule type. Allowed values\
        \ for different rule types are PROFILE_TYPE, CATEGORY_TYPE and RECERT_POLICY_TYPE.\
        \ \r\n\r\ntypeInfo : Mandatory Parameter in request body. String representing\
        \ the type info for different rule types. The values that can be specified\
        \ for typeInfo depends on ruleType and is summarized below. \r\n\r\nTo add\
        \ a rule at Global or other entity type level specify ruleType=CATEGORY_TYPE\
        \ and typeInfo = Global, Account, Person or BPPerson \r\n\r\nTo add a rule\
        \ for a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile\
        \ name of the entity, like ADProfile, ITIMAccount, Person etc. \r\n\r\n_attributes\
        \ : JSON representation of the lifecycle attributes to be set. Following attributes\
        \ can be specified. \r\n\r\nname : It is a mandatory attribute and specifies\
        \ the name of the lifecycle rule to be created. \r\n\r\ndescription : It is\
        \ an optional attribute that can be used to set the description of the lifecycle\
        \ Rule. \r\n\r\nOperationName : It is mandatory attribute that specifies the\
        \ name of the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter\
        \ : It is an optional attribute and can be used to set the lifecycle rule\
        \ filter. Filter is not set for typeInfo (Global). \r\n\r\nschedules : JSON\
        \ representation of array of lifecycle schedules to be set. It is an optional\
        \ attribute. In each schedule you can specify hour, minute, month, day of\
        \ the week, days of the week, day of the month, quarterly, and semi-annually.\
        \ Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour\
        \ of the schedule. Allowed values are 0-23. To specify hourly schedule set\
        \ hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59.\
        \ \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This\
        \ attribute is exclusive with dayOfWeek. To set the dayOfMonth value other\
        \ than -1(daily), the month value must be set either to specific month or\
        \ -1(monthly). Allowed values are 1-28, if the schedule is set to monthly,\
        \ otherwise the allowed value varies according to the month value. \r\n\r\n\
        month : month of the schedule (-1 if every month). Allowed values are 1-12\
        \ (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the\
        \ schedule (-1 if every day). This attribute is deprecated for weekly schedule.\
        \ This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 =\
        \ Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly\
        \ schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple\
        \ values are specified in pipe-separated format (1|2 = Sunday and Monday).\
        \ Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0\
        \ to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive\
        \ with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter\
        \ is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual\
        \ : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual\
        \ is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLifecycleRuleRequestBeanSwagger'
      responses:
        "201":
          description: Created
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  self:
                    href: /itim/rest/lifecyclerule/MTI3NzcwMDUxODgxOTE5ODYwNnxDQVRFR09SWV9UWVBFfEFjY291bnQ
                    title: Suspend Dormant Account LCR
                _attributes:
                  Filter: (cn=*)
                  schedules:
                    dayOfWeek: 0
                    hour: 12
                    month: 0
                    dayOfMonth: -1
                    minute: 0
                  name: Suspend Dormant Account LCR
                  description: LCR to suspend dormant accounts
                  ruleid: 1277700518819198606
                  operation: suspend
        "400":
          description: Bad Request.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                severity: E
                text: CTGIMZ052E HTTP POST request data has a missing data for required
                  field "name".
                id: CTGIMZ052
                inserts:
                - name
                key: com.ibm.isim.rest.data.MISSING_DATA_FOR
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /organizationcontainers:
    get:
      tags:
      - Search
      summary: Search All Organization Containers
      description: Returns list of all the organization containers.
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for each\
          \ organizational container. By default, no attributes are returned. The\
          \ client must specify the \"attributes\" query parameter to request the\
          \ attributes to be returned in the \"_attributes\" property of each organizational\
          \ container. A requested attribute is returned if the client does not have\
          \ permission to retrieve the attribute or if the value of the attribute\
          \ is null. Specifying a value of \"*\" will return all of the attributes.\
          \ Example. ?attributes=l"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The 'no-cache' option\
          \ performs the search without referencing any cache. The 'delete-cache'\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                    title: Raleigh
                  erparent:
                    href: /itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                _attributes:
                  l: Raleigh
                  erparent: "erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /activities/userrecertdetails/{workitemId}:
    get:
      tags:
      - Activity Management
      summary: User Re-certification Details Lookup
      description: Returns User re-certification details for the specified todo activity.
      parameters:
      - name: workitemId
        in: path
        description: Unique identifier for a work item.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                accountsToCertify:
                - ownershipType: Individual
                  decision: true
                  name: vm on linux service
                  description: ""
                  dependentRecertificationTodoTargets:
                  - ownershipType: ""
                    decision: true
                    name: apache access
                    description: Apache access to xyz application
                    dependentRecertificationTodoTargets: []
                    dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                  dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                - ownershipType: Individual
                  decision: true
                  name: vm on aix service
                  description: ""
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                comment: ""
                justification: ""
                rolesToCertify:
                - ownershipType: ""
                  decision: true
                  name: Developers
                  description: Developers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                - ownershipType: ""
                  decision: true
                  name: Managers
                  description: Managers in Costa Mesa location
                  dependentRecertificationTodoTargets: []
                  dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /people/selfregister:
    post:
      tags:
      - Person Management
      summary: Person Self Register
      description: "Creates a person in the provisioning platform without accessing\
        \ the system with an Identity Governance account login and password. \r\n\r\
        \nprofileName, orgID is required.\r\n"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfRegisterPersonRequestBean'
      responses:
        "202":
          description: Accepted.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests:
    get:
      tags:
      - Search
      summary: Requests Search
      description: "Returns information about requests matching the specified search\
        \ criteria, if any. \r\nBy default, all information is returned for each entry\
        \ in the array, which makes each search entry identical to a Request Lookup\
        \ API. \r\nA request is not returned if the client does not have permission\
        \ to access it. \r\n"
      parameters:
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search returns.
          Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the order (\"+\" for ascending, \"-\" for descending)\
          \ for sorting the returned requests. Note: The client is responsible for\
          \ performing URL encoding if necessary. The valid attributes used in the\
          \ sort are - requestee, status, date. By default, the entries are sorted\
          \ by date in descending order. Example - ?sort=%2Brequestee (%2B is UTF-8\
          \ encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99 "
        schema:
          type: string
      responses:
        "200":
          description: "OK. The request was successful\r\n\r\n[Please click here to\
            \ view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  requester:
                    href: /itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                  self:
                    href: /itim/rest/requests/2186821305970425066
                obligations:
                - form:
                    page:
                      body:
                        form:
                          formElement:
                          - input:
                              size: "50"
                              name: data.eruid
                              type: text
                            editable: true
                            name: data.eruid
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: User ID
                            required: "true"
                            direction: inherit
                          - input:
                              size: "50"
                              name: data.cn
                              type: text
                            editable: true
                            name: data.cn
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: Full name
                            required: "true"
                            direction: inherit
                          - input:
                              size: "50"
                              name: data.sn
                              type: text
                            editable: true
                            name: data.sn
                            constraint:
                              parameter: "true"
                              type: REQUIRED
                            label: Last name
                            required: "true"
                            direction: inherit
                          - editable: true
                            name: data.description
                            loginHours:
                              orientation: landscape
                              interval: onehour
                            label: Authorized hours
                            direction: inherit
                          action: formvalidator0
                  action: CREATE_ACCOUNT
                  id: obligation1
                  _attributes:
                    employeenumber: Z456123
                    mail: criegle@jke.test
                    telephonenumber: 1-512-456-3451
                    givenname: Chuck
                    initials: ""
                    eruid: criegle
                    cn: Chuck Riegle
                    sn: Riegle
                    title: Senior Manager Accounting
                    erldappwdreset: "true"
                requests:
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      icon:
                        href: custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif
                      self:
                        href: /itim/rest/access/376511317273827596
                    _attributes:
                      accessName: Business Partner Connect
                      description: Allows business partners to access project manuals
                        and support documentation.
                      serviceName: Application Server
                  obligations:
                  - $ref: obligation1
                  _attributes:
                    action:
                      text: New access request
                      key: AccessRequestAuditDataAccess.Action.ADD
                    status:
                      text: Pending
                      key: AccessRequestAuditDataAccess.Status.PENDING
                - _links:
                    requestee:
                      href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                      title: Chuck Riegle
                    workitem:
                      href: /itim/rest/workitems/2958404487582489586
                  subject:
                    _links:
                      icon:
                        href: custom/ui/images/access/iconFilesharesAccess.gif
                      self:
                        href: /itim/rest/access/376511866909527916
                    _attributes:
                      accessName: North Region File Share
                      description: File share containing region project files including
                        confidential data.
                      serviceName: GSA
                  obligations: []
                  _attributes:
                    action:
                      text: New access request
                      key: AccessRequestAuditDataAccess.Action.ADD
                    status:
                      text: Pending
                      key: AccessRequestAuditDataAccess.Status.PENDING
                _attributes:
                  action:
                    text: Manage Access
                    key: RequestAuditData.Action.ACCESS_BATCH_REQUEST
                  justification: User Need access
                  id: "2186821305970425066"
                  submittedDate: 1430733268995
                  status:
                    text: Pending
                    key: RequestAuditData.Status.PENDING
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/{serviceId}/statusdetails:
    get:
      tags:
      - Service Management
      summary: Lookup Service Status
      description: "Returns information about the status of the service. Service status\
        \ can be : \r\n\r\nALIVE - Last attempt to contact the service was successful.\
        \ \r\n\r\nFAILED - Last attemp to contact the service failed. \r\n\r\nLOCKED_RECON_IN_PROGRESS\
        \ - System is currently reconciling the service. \r\n\r\nATTEMPTING_RECOVERY\
        \ - System is trying to recover the service. \r\n\r\nUNKNOWN - Status is unknown.\
        \ \r\n"
      parameters:
      - name: serviceId
        in: path
        description: Unique Identifier for a service.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _attributes:
                  status: ALIVE
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers/{systemUserId}/delegations/{delegateId}:
    put:
      tags:
      - Delegation Management
      summary: Delegation Modify
      description: Modifies the delegations for the specified user.
      parameters:
      - name: delegateId
        in: path
        description: Unique identifier for a delegation.
        required: true
        schema:
          type: string
      - name: systemUserId
        in: path
        description: Unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateRequestBean'
      responses:
        "200":
          description: OK. The request was successful
          content: {}
    delete:
      tags:
      - Delegation Management
      summary: Delegation Delete
      description: Deletes the delegation for the specified user.
      parameters:
      - name: delegateId
        in: path
        description: Unique identifier for a delegation.
        required: true
        schema:
          type: string
      - name: systemUserId
        in: path
        description: Unique identifier for a system user.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /entities/attributeslist:
    get:
      tags:
      - Search
      summary: Attribute Names Lookup
      description: "Returns the list of attributes configured for an objectclass .\
        \ This API is used in conjunction with form template REST API. ISIM forms\
        \ contains widgets in which the object class is configured by System Administrator.\
        \ \r\nThis object class is returned by \"form tempalate\" REST API in an encrypted\
        \ format. The API decrypts this object class and returns the list of attributes.\r\
        \n"
      parameters:
      - name: com.ibm.isim.rest.accesstoken
        in: header
        description: This mandatory header parameter contains the encrypted object
          class whose attributes are to be listed. This token will be generated by
          the "form template" REST API.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - attributeLabel: Administrative assistant
                _attributes:
                  name: secretary
                  label: Administrative assistant
              - attributeLabel: Business category
                _attributes:
                  name: businesscategory
                  label: Business category
              - attributeLabel: E-mail address
                _attributes:
                  name: mail
                  label: E-mail address
              - attributeLabel: Employee number
                _attributes:
                  name: employeenumber
                  label: Employee number
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemusers:
    get:
      tags:
      - System User Management
      summary: System User Search
      description: "Returns information about any system user that matches the specified\
        \ search criteria. \r\n\nThe \"name\" of the system user is returned in the\
        \ _links.self.title property. \r\n\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes that are returned in the \"_attributes\" property of each system\
        \ user. \r\n\nA requested attribute is not returned if the client does not\
        \ have permission to retrieve the attribute or if the value of the attribute\
        \ is null. \r\n\nIf an attribute has multiple values, the value of the corresponding\
        \ property is an array of the attribute's values. \r\n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return each system\
          \ user. The specified attributes are returned in the \"_attributes\" section\
          \ of the response. If the excludeAttributeFromResponse property in the rest.properties\
          \ is set to some attribute value, that attribute is excluded from the response\
          \ though it is specified in the attribute list. Specifying a value \"*\"\
          \ returns all of attributes except those that are specified in the excludeAttributeFromResponse\
          \ property. By default, all attributes other than those that are specified\
          \ in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that the search operation
          returns. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order for sorting the returned system\
          \ users. \"+\" represents ascending order while \"-\" represents descending\
          \ order. Note: The client is responsible to perform URL encoding if necessary.\
          \ Example - ?sort=%2Beruid (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing any cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control=no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    title: ITIM Manager
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints
                    title: Constraints
                _attributes:
                  eruid: ITIM Manager
              - _links:
                  expiredPassword:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/password
                    title: Expired Password
                  self:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20
                    title: chuck
                  delegates:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/delegations
                  constraints:
                    href: /itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/constraints
                    title: Constraints
                _attributes:
                  eruid: chuck
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /services/{serviceId}:
    get:
      tags:
      - Service Management
      summary: Lookup Service
      description: Returns information about the specified service.
      parameters:
      - name: serviceId
        in: path
        description: Unique Identifier for a service.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: "Specifies the comma-separated attributes to return for the service.\
          \ The specified attributes are returned in the \"_attributes\" section of\
          \ the response. Specifying a value of \"*\" will return all of the attributes.\
          \ By default all the attributes are returned. Example - ?attributes=erservicename,description"
        schema:
          type: string
      - name: embedded
        in: query
        description: Specifies the comma separated attributes that should be returned
          for a reference attribute of service (eg. owner). The specified attributes
          are returned in the "_embedded" section of the response. Specifying a value
          of '*' after reference attribute returns all the properties of the reference
          attribute. Example - ?embedded=owner.cn
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
                _links:
                  statusDetails:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG/statusdetails
                    title: statusDetails
                  self:
                    href: /itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG
                    title: GSA
                _embedded:
                  owner:
                    _links:
                      formTemplate:
                        href: /itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                        title: Judith Hill
                    _attributes:
                      cn: Judith Hill
                _attributes:
                  erservicename: GSA
    put:
      tags:
      - Service Management
      summary: Service Modify
      description: "Modifies information for the specified service.\r\n\r\nBy using\
        \ this rest API you can perform following different operations along with\
        \ modification\r\nof the service information.\r\n1) Switch the connection\
        \ mode of the existing service from Automatic to Manual and vice versa.\r\n\
        2) Modify information for the manual work order details.\r\n3) If you trying\
        \ to switch the existing service from Automatic to Manual and do not provide\
        \ the\r\ndetails for the manualWorkOrderRequest then request adds the default\
        \ data for manual work order.\r\n"
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyServiceRequestBeanSwagger'
      responses:
        "200":
          description: OK. The request was successful.
    delete:
      tags:
      - Service Management
      summary: Service Delete
      description: Deletes the specified service.
      parameters:
      - name: serviceId
        in: path
        description: Unique identifier for a service.
        required: true
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful.
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /systemroles:
    get:
      tags:
      - Search
      summary: System Role (ITIM Group) Search
      description: "Returns information about any system roles that match the specified\
        \ search criteria. \r\nThe \"name\" of the system role is returned in the\
        \ _links.self.title property. \r\nBy default, no attributes are returned.\
        \ The client must specify the \"attributes\" query parameter to request the\
        \ attributes to return in the \"_attributes\" property of each system role.\
        \ \r\nA requested attribute is not returned if the client does not have permission\
        \ to retrieve the attribute or if the value of the attribute is null. \r\n\
        If an attribute has multiple values, the value of the corresponding property\
        \ is an array of the attribute's values.\r\n"
      parameters:
      - name: attributes
        in: query
        description: Specifies the comma-separated attributes to return for each system
          role. The specified attributes are returned in the "_attributes" property
          of each system role. Specifying a value of "*" returns all attributes. Example
          - ?attributes=errolename
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of items that should be returned
          by the search. Example - ?limit=1000
        schema:
          type: string
      - name: sort
        in: query
        description: "Specifies the attribute and order (\"+\" for ascending, \"-\"\
          \ for descending) for sorting the returned system roles. Note: The client\
          \ is responsible for performing URL encoding if necessary. Example - ?sort=%2Berrolename\
          \ (%2B is UTF-8 encoding for + sign)"
        schema:
          type: string
      - name: Cache-Control
        in: header
        description: "Specifies caching options. By default, search results are cached\
          \ for each client so that subsequent requests by the client that specify\
          \ the same search criteria are satisfied via the cache. The \"no-cache\"\
          \ option performs the search without referencing cache. The \"delete-cache\"\
          \ option deletes the cache. In this case, empty search results are returned.\
          \ Example - Cache-Control = no-cache "
        schema:
          type: string
      - name: Range
        in: header
        description: "Specifies the range of items to return. Note: The range uses\
          \ a zero-based index. Example - items=0-99"
        schema:
          type: string
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Help Desk Assistant
                _attributes:
                  errolename: Help Desk Assistant
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA0OCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: Manager
                _attributes:
                  errolename: Manager
              - _links:
                  self:
                    href: /itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMyxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                    title: System Administrator
                _attributes:
                  errolename: System Administrator
    post:
      tags:
      - ITIM Group Management
      summary: System Role Creation
      description: Creates a new system role with the specified attributes
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSystemRoleRequestBeanSwagger'
      responses:
        "201":
          description: OK. The request was successful
          content:
            application/json:
              example:
                _links:
                  self:
                    href: /itim/rest/v1.2/systemroles/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: AdminRole1111
                  ersystemrolecategory:
                    href: /itim/rest/v1.2/views/1
                    title: "1"
                  erparent:
                    href: /itim/rest/v1.2/organizationcontainers/organizations/cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                    title: isvgim
                _attributes:
                  errolename: AdminRole1111
                  description: new updated description for the systemrole
                  ersystemrolecategory: "1"
                  uuid: cc7ec53b-3305-41bb-9c6f-ce7b67115d7a
                  parentUUID: cc7ec53b-3305-41bb-9c6f-ce7b67115d9b
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /password/retrieve:
    put:
      tags:
      - Password Management
      summary: Retrieve Password
      description: "Retrieves the password of an account if the enrole.workflow.notifypasswordproperty\
        \ is set to false. This API needs the transaction ID to retrieve password.To\
        \ return the account password to the user, the shared secret has been validated."
      parameters:
      - name: transactionid
        in: query
        description: Specifies the transaction ID that is required to retrieve the
          password retrieval info.
        schema:
          type: string
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must passthe valid CSRF token in the request header. When a new PUT, POST,\
          \ orDELETE request is created, the request header must contain CSRF tokenthat\
          \ is received to the authorized user. Authorized users must get thevalid\
          \ CSRF token in the response header by running the 'Current System User\
          \ Lookup' REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrievePasswordSwagger'
      responses:
        "200":
          description: OK. The request was successful
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _embedded:
                  accounts:
                  - _embedded:
                      service:
                        _attributes:
                          description: ""
                          erservicename: ITIM Service
                    _links:
                      self:
                        href: /itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
                    _attributes:
                      erUid: person1
                _links:
                  self:
                    href: /itim/rest/password/retrieve?transactionid=7347766403446710787
                _attributes:
                  password: password
        "400":
          description: Bad request. Invalid Transaction ID
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - severity: E
                text: CTGIMZ058E The transaction identifier that is referred in the
                  URI is invalid or expired.
                id: CTGIMZ058
                key: com.ibm.isim.rest.server.INVALID_TRANSACTION_ID
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /views:
    get:
      tags:
      - View Management
      summary: Search View
      description: "Returns information about Views that match the specified search\
        \ pattern in filter if any.\r\nAll Views are returned in response in case\
        \ no filter provided.\r\n\r\n By default, all attributes are returned. Use\
        \ attributes query string paramter to return specific attributes for View.\r\
        \n"
      parameters:
      - name: attributes
        in: query
        description: "Specifies the comma separated attributes that should be returned\
          \ for each view. The specified attributes are returned in the \"_attributes\"\
          \ section. Example: attributes=id,name"
        schema:
          type: string
      - name: filter
        in: query
        description: "Specifies the search pattern for searching specific views. Example:\
          \ filter=Manager"
        schema:
          type: string
      responses:
        "200":
          description: OK.
          content:
            application/json:
              example:
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/1
                    title: End User View
                _attributes:
                  name: End User View
                  id: "1"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/2
                    title: Manager View
                _attributes:
                  name: Manager View
                  id: "2"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/4
                    title: Help Desk View
                _attributes:
                  name: Help Desk View
                  id: "4"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/5
                    title: Service Owner View
                _attributes:
                  name: Service Owner View
                  id: "5"
              - _links:
                  self:
                    href: /itim/rest/v1.2/views/6
                    title: Auditor View
                _attributes:
                  name: Auditor View
                  id: "6"
    post:
      tags:
      - View Management
      summary: Create View
      description: "This API is used to create View. Required attributes: name, Optional\
        \ attributes: description, tasks"
      parameters:
      - name: CSRFToken
        in: header
        description: "To prevent cross-site request forgery (CSRF) attacks, a user\
          \ must pass the valid CSRF token in the request header. When a new PUT,\
          \ POST, or DELETE request is created, the request header must contain CSRF\
          \ token that is received to the authorized user. Authorized users must get\
          \ the valid CSRF token in the response header by running the \"Current System\
          \ User Lookup\" REST API."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewRequestBean'
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResponseBean'
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /requests/quicksearches:
    get:
      tags:
      - Search
      summary: Request Quick Searches
      description: "Quick search categories help you to narrow the scope of your search\
        \ so that you can locate the request that you want to view.\r\nReturns limited\
        \ results based on search query."
      parameters:
      - name: limit
        in: query
        description: "Specifies the maximum number of items per category to return.\
          \ If unspecified, the limit is system defined. A value of 0 means unlimited,\
          \ which is constrained by a system limit. Example - ?limit=5"
        schema:
          type: string
      responses:
        "200":
          description: "OK. The request was successful \r\n\r\n[Please click here\
            \ to view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)"
          content:
            application/vnd.ibm.isim-v1+json:
              example:
              - _links:
                  self:
                    href: /itim/rest/requests/quicksearches?limit=5
                _attributes:
                  requestees:
                  - _links:
                      self:
                        href: /itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
                        title: Chuck Riegle
                  statuses:
                  - text: Pending
                    value: PENDING
                    key: RequestAuditData.Status.PENDING
                  accesses:
                  - _links:
                      self:
                        href: /itim/rest/access/376511317273827596
                        title: Business Partner Connect
                  - _links:
                      self:
                        href: /itim/rest/access/376511866909527916
                        title: North Region File Share
                  actions:
                  - text: Manage Access
                    value: ACCESS_BATCH_REQUEST
                    key: RequestAuditData.Action.ACCESS_BATCH_REQUEST
    servers:
    - url: /itim/rest/v1.2
    - url: /itim/rest
  /itim/cm/v1.0/system/tenant/{id}:
    delete:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Remove all campaign metadata of a specific tenant.
      description: "The api to remove all campaign metadata of a specific tenant v1.0\
        \ (v1.0/system/tenant/{id}) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: DELETE /v2.0/system/tenant/{id}<br/>Internal\
        \ usage."
      operationId: deleteTenant
      parameters:
      - name: id
        in: path
        description: Tenant ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant where request for deletion of all campaign metadata
          is submitted.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "204":
          description: Tenant Cleaned Up
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific campaign instance.
      description: "The api to get a specific campaign instance v1.0 (v1.0/admin/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}<br/>Get a specific campaign instance.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminGetCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Modify specific campaign instance.
      description: "The api to modify a specific campaign instance v1.0 (v1.0/admin/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/instances/{id}<br/>Modify a specific campaign instance. If\
        \ called by application owner, the API can modify only instances that the\
        \ owner created or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: replacev1
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign instance payload details:<br><br>- <strong>id</strong>:\
          \ Campaign instance ID.<br>- <strong>event</strong>: The action to apply\
          \ to the campaign instance.<br><br><br>Allowable values for <strong>event</strong>\
          \ are: delete, pause, restart, runnow.<br><strong>delete</strong>: Transitions\
          \ the campaign instance to a cancelled state, indicating it is no longer\
          \ active.<br><strong>pause</strong>: Temporarily halts a running campaign\
          \ instance, putting it in a paused state.<br><strong>restart</strong>: Resumes\
          \ a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignInstanceInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific assignment.
      description: "The api to get a specific assignment v1.0 (v1.0/self/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/{id}<br/>Get a specific assignment for a campaign\
        \ reviewer OR supervisor.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: selfGetAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given assignment.
      description: "The api to modify a specific assignment v1.0 (v1.0/self/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/assignments/{id}<br/>API for a reviewer to modify a specific\
        \ assignment.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: selfReplace
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>reviewer</strong>: Details about\
          \ the campaign reviewer. Required when redirecting an assignment to another\
          \ user.<br>- <strong>operation</strong>: The operation to be executed.<br><br><br>Allowable\
          \ values for <strong>operation</strong> are: approved, rejected, redirected,\
          \ escalated.<br><strong>approved</strong>: Approve an assignment.<br><strong>rejected</strong>:\
          \ Reject an assignment.<br><strong>redirected</strong>: Redirect an assignment.<br><strong>escalated</strong>:\
          \ Escalate an assignment.<br><br>- <strong>justification</strong>: A justification\
          \ for the action taken on the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{id}/preview:
    post:
      tags:
      - Certification Campaign instances v2.0
      summary: Creates a preview campaign configuration for the specified tenant.
      description: "The API is used to create a preview campaign configuration for\
        \ the specific tenant.<br/>The administrator managing a specific tenant can\
        \ create a preview campaign configurations for that tenant.<br/>The owners\
        \ of the application can only create a preview campaign configuration for\
        \ their owned applications.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: generatePreviewCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve instances corresponding to a specific campaign
        configuration.
      description: "The api to get instances to a specific campaign configuration\
        \ v1.0 (v1.0/admin/campaigns/{id}/instances) is deprecated. The end of life\
        \ is 31-Dec-2025. Use the following alternative API: GET /v2.0/campaigns/{id}/instances<br/>Get\
        \ campaign instances corresponding to a given campaign configuration. If called\
        \ by application owner, the API can only get instances that the owner created\
        \ or which contain at least one Application owned by the owner.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves statistics of specific assignments within a given instance
        from the specific tenant.
      description: "The API is used to retrieve aggregated statistics of assignments\
        \ in a given campaign instance for a reviewer or supervisor. Filters can be\
        \ applied against the assignments.</br>The owners of the application can retrieve\
        \ aggregated statistics of the campaign instance that is created by them or\
        \ includes at least one application owned by them.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: assignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseAssignmentStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v1.0/self/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve instances corresponding to a specific campaign
        configuration.
      description: "The api to get instances of a specific campaign v1.0 (v1.0/self/campaigns/{id}/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/{id}/instances<br/>Get campaign instances corresponding\
        \ to a given campaign configuration for a reviewer or supervisor. At least\
        \ one record must be associated with the reviewer or supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve specific campaign instance.
      description: "The api to get specific campaign instance v1.0 (v1.0/self/instances/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}<br/>Get a specific campaign instance with\
        \ at least one record associated with a reviewer or supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfGetCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/self/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments.
      description: "The api to get statistics of specific assignments v1.0 (v1.0/self/assignments/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/stats<br/>Get aggregated statistics about assignments\
        \ in a specific instance for a reviewer OR supervisor. Filters could be applied\
        \ to refine the entities, to use, for generating statistics.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfAssignmentsStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/swagger.{type}:
    get:
      parameters:
      - name: type
        in: path
        required: true
        schema:
          pattern: json|yaml
          type: string
      responses:
        "200":
          description: OK
  /itim/cm/v1.0/admin/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific campaign instances.
      description: "The api to get statistics of specific campaign instances v1.0\
        \ (v1.0/admin/instances/stats) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: GET /v2.0/instances/stats<br/>Get aggregated\
        \ statistics about campaign instances depending on the specified filter. If\
        \ called by an application owner, the API returns statistics of the instances\
        \ that the owner created or that contain at least one application that the\
        \ owner owns.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: adminInstancesStats
      parameters:
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/clean/staleinstances:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        clean the stale instances in certification manager schema.
      operationId: rundeckJobtoCleanStaleInstances
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/campaigns/{id}:
    get:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific campaign configuration.
      description: "The api to get a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/{id}<br/>Get a specific campaign configuration\
        \ and manage it. If called by an application owner, the API can retrieve only\
        \ configurations that the owner created or that contain at least one  application\
        \ that the owner owns.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminGetCampaignById
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfigurationOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Edit specific campaign configuration.
      description: "The api to modify a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/campaigns/{id}<br/>Modify a specific campaign configuration.\
        \ If called by an application owner, the API can modify only campaigns that\
        \ the owner created or that the associated applications are all owned by the\
        \ owner.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: replace
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration payload details:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low ).<br>- <strong>name</strong>: Name of the campaign.<br>-\
          \ <strong>description</strong>: Description of the campaign.<br>- <strong>reviewer</strong>:\
          \ Information about the campaign reviewer.<br>- <strong>applications</strong>:\
          \ List of applications the campaign certifies.<br>Note: This is a required\
          \ field, however, in case of User entitlement campaigns, either the 'Applications'\
          \ or 'Entitlement' or both must be specified. <br>- <strong>allowlist</strong>:\
          \ List of users or groups allowed for the certification. You cannot specify\
          \ the block list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts.<br>- <strong>creationDate</strong>: Creation date of the campaign\
          \ configuration.<br>- <strong>duration</strong>: The duration (in milliseconds)\
          \ for which each campaign instance remains open.<br>- <strong>frequency</strong>:\
          \ Frequency of campaign instance.<br>- <strong>runEvery</strong>: Frequency\
          \ unit for campaign instance (days or months).<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br>- <strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br>- <strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br>- <strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>:A flag indicating that the\
          \ campaign is continuous.<br>- <strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>id</strong>: Campaign configuration\
          \ ID.<br>- <strong>rev</strong>: Campaign configuration revision.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfigurationInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfigurationOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
    delete:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Delete specific campaign configuration.
      description: "The api to delete a specific campaign configuration v1.0 (v1.0/admin/campaigns/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: DELETE /v2.0/campaigns/{id}<br/>Delete a specific campaign configuration.\
        \ If called by an application owner, the API can delete only  campaigns that\
        \ the owner created or that the associated applications are all owned by the\
        \ owner.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: deletev1
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
        "204":
          description: Campaign Configuration is deleted
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve a specific assignment.
      description: "The api to get a specific assignment v1.0 (v1.0/admin/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/{id}<br/>Get a specific assignment. If called\
        \ by application owner, the API can retrieve assignments only for the campaigns\
        \ he created or that contain at least one Application he owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminGetAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given assignment.
      description: "The api to modify a specific assignment v1.0 (v1.0/admin/assignments/{id})\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/assignments/{id}<br/>Modify a specific assignment. If called\
        \ by an application owner, the API can modify assignments only for campaigns\
        \ that the owner created or that contain at least one application that the\
        \ owner owns.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: adminReplace
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>reviewer</strong>: Details about\
          \ the campaign reviewer. Required when redirecting an assignment to another\
          \ user.<br>- <strong>operation</strong>: The operation to be executed.<br><br><br>Allowable\
          \ values for <strong>operation</strong> are: approved, rejected, redirected,\
          \ escalated.<br><strong>approved</strong>: Approve an assignment.<br><strong>rejected</strong>:\
          \ Reject an assignment.<br><strong>redirected</strong>: Redirect an assignment.<br><strong>escalated</strong>:\
          \ Escalate an assignment.<br><br>- <strong>justification</strong>: A justification\
          \ for the action taken on the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the assignment statistics of the campaign instance from the
        specific tenant.
      description: "The API is used to retrieve aggregated statistics of assignments\
        \ in a given campaign instance. Filters could be applied to refine the entities\
        \ to use for generating statistics.</br>The owners of the application can\
        \ retrieve aggregated statistics of the campaign instance that is created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: assignmentsStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseAssignmentStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves a list of campaign configurations from the specific tenant.
      description: "The API is used to retrieve list of campaign configurations from\
        \ the specific tenant.<br/> The administrator managing a specific tenant can\
        \ see the list of all campaign configurations created for that tenant.<br/>\
        \ The owners of the application can access the list of campaign configurations\
        \ that are created by them or includes at least one application owned by them.<br/>Unspecified\
        \ filter parameters are treated as having the default values.<br/>Every provided\
        \ parameter value is considered as an extra filter for the search criteria.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: campaignConfigurationFind
      parameters:
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign configuration: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: draft
        in: query
        description: "The filter for getting campaign configuration in draft mode:\
          \ yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "A generic filter which filters response containing the passed\
          \ string in any of the following attribute: name (Campaign configuration\
          \ name)."
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign configuration: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign configuration priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign configuration that is used to\
          \ sort results. The possible values are: owner, launchdate, name, type,\
          \ priority, createdOn.<br><br><br>When you provide,<br><strong>owner</strong>:The\
          \ owner's fullName is used for sorting.<br><strong>launchdate</strong>:The\
          \ campaign configuration launchDate timestamp is used for sorting.<br><strong>name</strong>:\
          \ The campaign configuration name is used for sorting.<br><strong>type</strong>:The\
          \ campaign configuration type is used for sorting.<br><strong>priority</strong>:The\
          \ campaign configuration priority is used for sorting.<br><strong>createdOn</strong>:\
          \ The campaign configuration creationDate timestamp is used for sorting."
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: type
        in: query
        description: "This is a deprecated campaign configuration type filter. Use\
          \ 'types' query parameter instead. If both the 'type' and 'types' query\
          \ parameter are used, then the 'types' selected value is considered."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
        deprecated: true
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignConfig'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign configurations v2.0
      summary: Creates a campaign configuration for the specific tenant.
      description: "The API is used to create a campaign configuration for the specific\
        \ tenant.<br/>The administrator managing a specific tenant can create campaign\
        \ configurations for that tenant.<br/>The application owners can create a\
        \ campaign configuration only for their owned applications.<br/>The optional\
        \ reviewer, if specified, can be any existing userId present for that tenant.<br/>\
        \ Allowlist or blocklist must specify only groups in case of groupassignment\
        \ campaign.<br/>Entitlements required: manageAccessCertification [Manage Access\
        \ Certification]."
      operationId: createCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          $ref: '#/components/schemas/CampaignConfiguration'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant for which campaign configuration creation request
          is submitted.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration create request payload details:<br><br>-\
          \ <strong>owner</strong>: Information about the campaign owner. <br>This\
          \ is a required field.<br>- <strong>type</strong>: Type of campaign (For\
          \ example, userassignment, groupassignment, account, groupmembership). Default\
          \ type is userassignment.<br>- <strong>priority</strong>: Priority of the\
          \ campaign (For example, high, medium, low ). Default priority is medium.<br>-\
          \ <strong>name</strong>: Name of the campaign. <br>This is a required field\
          \ with maximum length of 256 characters.<br>- <strong>description</strong>:\
          \ Description of the campaign.<br>- <strong>reviewer</strong>: Information\
          \ about the campaign reviewer.<br>- <strong>applications</strong>: List\
          \ of applications that the campaign certifies.<br>Note: This is a required\
          \ field for Group entitlement and Account campaign, however, in case of\
          \ User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. This is not required for Group Membership.<br>-\
          \ <strong>userFilter</strong>: It is set to filter the list of included\
          \ or excluded users or groups for certification. <br><br><br>In case of\
          \ user entitlement campaign, you can either specify userConditionSet or\
          \ userInclusionList or userExclusionList in userFilter.<br><br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts. <br>The launchDate must be in the future, including the time,\
          \ relative to the current date and time. <br>This field is required when\
          \ runNow is false.<br>- <strong>creationDate</strong>: Creation date of\
          \ the campaign configuration. Default value is the current Date.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open. <br>Duration should not be added when \"continuous\" is true. <br>Duration\
          \ should be greater than 30 seconds if \"continuous\" is false. <br>Duration\
          \ must be less than the frequency if campaign scheduled (\"runNow\" is false).<br>-\
          \ <strong>frequency</strong>: Frequency of campaign instance. <br>Frequency\
          \ should not be added when the \"runNow\" flag is set to true. <br>This\
          \ field is required when \"runNow\" flag is set to false.<br>It should contain\
          \ a valid cron expression<br>Valid cron expression: must follow cron syntax\
          \ (e.g., \"*/5\", \"0 0 * * *\"). The valid range for each field within\
          \ the frequency pattern is as follows:<br>&emsp; - Minute: 0-59<br>&emsp;\
          \ - Hour: 0-23<br>&emsp; - Day of Month: 1-31<br>&emsp; - Month: 1-12 (or\
          \ JAN-DEC)<br>&emsp; - Day of Week: 0-6 (or SUN-SAT)<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately. Default value for runNow is true.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes. <br>Allowable values for <strong>overdueAction</strong>\
          \ are: rejectAll, approveAll, doNothing. <br>Default overdueAction is doNothing.<br>-\
          \ <strong>mitigationAction</strong>: Action after a campaign closes to avoid\
          \ open records. <br>Allowable value for <strong>type</strong> in <strong>mitigationAction</strong>\
          \ are: none, reminder. <br>reminderInterval should be shorter than durantion.<br>Default\
          \ value is { type = none, reminderInterval=0 }.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments in the absence of a suitable reviewer.<br>-\
          \ <string>preview</strong>: A flag indicating that the campaign is in preview\
          \ mode and not open to reviewers. Default value for preview is false.<br>-\
          \ <strong>continuous</strong>: A flag indicating that the campaign is continuous.\
          \ Default value for continuous is 'false'.<br>- <strong>continuousCampaignMetaData</strong>:\
          \ Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;Default\
          \ overdueAction is 'doNothing'<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff). <br>signOff should be auto when \"continuous\"\
          \ is true.<br>Default signOff policy is eoc.<br><br><br>Allowable values\
          \ for <strong>signOff</strong> are: auto, manual, eoc or no_signoff.<br><strong>auto</strong>:\
          \ This setting would mean immediate sign-off. Actions taken by the approver\
          \ in terms of approval or rejection are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ This setting would mean a manual sign-off. The certifier can decide whether\
          \ to enforce the action immediately OR at the end of the campaign).<br><strong>eoc</strong>:\
          \ The setting would mean sign-off towards the end of the campaign. Actions\
          \ taken by the approver in terms of approval or rejection are persisted\
          \ till the Due date of the campaign and then rolled out together).<br><strong>no_signoff</strong>:\
          \ Actions are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign. <br>The field is required\
          \ when allowSupervisorEscalation is true.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>- <strong>reviewerType</strong>:\
          \ The Reviewer identifer for the campaign.<br>Following are the values corresponding\
          \ to the campaign types:<br>1.userassignment - usermanager, specific, self,\
          \ applicationowner<br>2.groupassignment - applicationowner, specific<br>3.account\
          \ - usermanager, specific, self, applicationowner<br>4.groupmembership -\
          \ usermanager, specific<br>In case you are specifying the reviewer explicitly,\
          \ then provide the value as <strong>specific</strong> in the reviewerType\
          \ field.<br>In case you are creating a self certification campaign, then\
          \ provide the value as <strong>self</strong> in the reviewerType field.\
          \ reviewerType value as self is applicable only for userassignment and account\
          \ type of campaigns.<br><br>Allowable values for <strong>reviewerType</strong>\
          \ are: usermanager, applicationowner, specific, self.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: true
      responses:
        "201":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign configurations v2.0
      summary: Perform operations on a list of campaign configurations that belong
        to a specified tenant.
      description: "The API is used to perform operations on a list of campaign configurations\
        \ that belong to a specific tenant.<br/>The administrator managing a specified\
        \ tenant can perform operations on a list of all campaign configurations created\
        \ for that tenant.<br/>The owners of the application can update a list of\
        \ campaign configurations that are created by them or includes at least one\
        \ application owned by them.<br/>Entitlements required: tenantadmin [Tenant\
        \ Administrator]."
      operationId: bulkReplacev2
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            description: Representation of a generic payload of a Bulk REST API.
            required:
            - op
            - path
            type: object
            properties:
              op:
                enum:
                - replace
                - remove
                - delete
                type: string
              path:
                type: string
              value:
                $ref: '#/components/schemas/JsonNode'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign configurations on which to execute specified\
          \ operations:<br>Request payload details:<br><br><strong>op</strong>: Operation\
          \ to be performed on the given campaign configuration.<br>Allowable values\
          \ for <strong>op</strong> are: replace, remove, delete, cancel.<br><strong>replace</strong>:\
          \ Update the campaign configuration.<br><strong>remove</strong>: Mark the\
          \ campaign configuration to removal from the database.<br><strong>delete</strong>:\
          \ Delete the campaign configuration immediately from the database.<br><strong>cancel</strong>:\
          \ Cancel running and all future instances of this campaign.<br><br><strong>path</strong>:\
          \ Campaign configuration ID.<br><br><strong>value</strong>: Campaign configuration\
          \ details. The field is required when executing the 'replace' operation.<br><strong>owner</strong>:\
          \ Information about the campaign owner.<br><strong>type</strong>: Type of\
          \ campaign (For example, userassignment, groupassignment, account, groupmembership).<br><strong>priority</strong>:\
          \ Priority of the campaign (For example, high, medium, low ).<br><strong>name</strong>:\
          \ Name of the campaign.<br><strong>description</strong>: Description of\
          \ the campaign.<br><strong>reviewer</strong>: Information about the campaign\
          \ reviewer.<br>- <strong>applications</strong>: List of applications that\
          \ the campaign certifies.<br>Note: This is a required field for Group entitlement\
          \ and Account campaign, however, in case of User entitlement campaigns,\
          \ either the 'Applications' or 'Entitlement' or both must be specified.\
          \ This is not required for Group Membership. <br>- <strong>userFilter</strong>:\
          \ It is set to filter the list of included or excluded users or groups for\
          \ certification. <br><br><br>In case of user entitlement campaign, you can\
          \ either specify userConditionSet or userInclusionList or userExclusionList\
          \ in userFilter.<br><br>- <strong>entitlementFilter</strong>: It is set\
          \ to filter the list of included or excluded entitlements for certification.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br><strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br><strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br><strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br><strong>frequency</strong>: Frequency of campaign instance.<br><strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br><strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br><strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br><strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br><strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br><strong>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br><strong>continuous</strong>:A flag indicating that the campaign\
          \ is continuous. Default value for continuous is 'false'.<br><strong>continuousCampaignMetaData</strong>:\
          \ Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br><strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br><strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br><strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkOperationCampaign'
        required: true
      responses:
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestResponse'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the list of all assignments associated with the specified
        campaign instance from the specific tenant.
      description: "The API is used to retrieve the list of all assignments associated\
        \ with the specified campaign instance from the specific tenant.</br>The owners\
        \ of the application can retrieve the list of all assignments associated with\
        \ the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: campaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name .<br> groupmembership: provide group name. <br> account: Provide\
          \ account userName.<br><br>Provide multiple values in new lines or separated\
          \ by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName, entitlement.name"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the group Ids.<br>For following campaign types:\
          \ <br>userassignment: The results are filtered based on the discretionary\
          \ groups .<br> groupassignment/groupmembership: The results are filtered\
          \ based on the groups that are attached to the campaign. <br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ entitlementname, accountstatus, reviewer, lastaction, type, creationdate,\
          \ groupsid.<br><br><br>When you provide,<br><strong>application</strong>:\
          \ The application name is used for sorting.<br><strong>assignee</strong>:\
          \ The assignee fullName is used for sorting.<br><strong>accountname</strong>:\
          \ The account userName is used for sorting.<br><strong>entitlementname</strong>:\
          \ The entitlement name is used for sorting.<br><strong>accountstatus</strong>:\
          \ The account finerStatus is used for sorting.<br><strong>reviewer</strong>:\
          \ The reviewer name is used for sorting.<br><strong>lastaction</strong>:\
          \ The last_action is used for sorting.<br><strong>type</strong>: The entitlement\
          \ type is used for sorting.<br><strong>creationdate</strong>: The campaign\
          \ assignment creationDate timestamp is used for sorting.<br><strong>groupsid</strong>:\
          \ The campaign assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the list of a assignments associated with the specified campaign
        instance from the specific tenant.
      description: "The API is used to retrieve the list of a assignments associated\
        \ with the specified campaign instance from the specific tenant.</br>The owners\
        \ of the application can retrieve the list of a assignments associated with\
        \ the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: campaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter'
        required: false
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v2.0/reviewer/types/{campaigntype}:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves the details of the Reviewer Types available for the specific
        Campaign Type.
      description: "The API is used to retrieve the campaign Reviewer Types based\
        \ on the Campaign Type.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getReviewerTypesByCampaignType
      parameters:
      - name: campaigntype
        in: path
        description: "The valid unique identifier of type campaign. Allowed values\
          \ are 'userassignment', 'groupassignment', 'account' and 'groupmembership'."
        required: true
        schema:
          type: string
      - name: continuous
        in: query
        description: 'The filter for retrieving the details of the Reviewer Types
          available for the continuous campaign configuration:'
        schema:
          default: "no"
          enum:
          - "yes"
          - "no"
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign instances.
      description: "The api to get campaign instances v1.0 (v1.0/admin/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances<br/>Get a list of campaign instances. If called\
        \ by an application owner, the API can get only instances associated to configurations\
        \ he created or containing at least one Application he owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "To filter based on the overall state of the campaign instance.\
          \ This filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: supervisorsId
        in: query
        description: "The filter for the campaign supervisor.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Modify campaign instances.
      description: "The api to Modify campaign instances v1.0 (v1.0/admin/instances)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instances<br/>Modify a set of campaign instances. If called\
        \ by application owner, the API can modify only instances that the owner created\
        \ or that the associated applications are all owned by the owner.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: bulkReplacev1
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceInput'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign instances to modify:<br>Campaign instance payload\
          \ details:<br><br>- <strong>id</strong>: Campaign instance ID.<br>- <strong>event</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>event</strong> are: delete, pause, restart, runnow, end, harddelete.<br><strong>delete</strong>:\
          \ Transitions the campaign instance to a cancelled state, indicating it\
          \ is no longer active.<br><strong>pause</strong>: Temporarily halts a running\
          \ campaign instance, putting it in a paused state.<br><strong>restart</strong>:\
          \ Resumes a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance.<br><strong>end</strong>:\
          \ Transitions a running campaign to a completion state, before the designated\
          \ completion date. This is mainly to enforce the campaign closure based\
          \ actions immediately.<br><strong>harddelete</strong>: Delete the campaign\
          \ instance immediately from the database.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignInstanceInput'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaign/{id}/assignments:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Add new assignments to a continuous campaign.
      description: "The api to add new assignments v1.0 (v1.0/admin/campaign/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>API for adding new assignments\
        \ in a continuous campaign. If called by application owner, API can add only\
        \ assignments for campaigns he created or pertaining to applications he owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access  Work Flows]."
      operationId: adminBulkAdditionByConfig
      parameters:
      - name: id
        in: path
        description: Campaign configuration Id.
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of new assignments to be added to a continuous campaign\
          \ instance:<br>Add campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>applicationId</strong>: Application\
          \ identifier<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAssignment'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: "Deprecated - Retrieve all assignments, in a given campaign instance."
      description: "The api to get a specific assignment v1.0 (v1.0/self/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance for a reviewer OR supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name.<br> account: Provide account userName.<br><br>Provide multiple values\
          \ in new lines or separated by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the discretionary groups.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting.<br><strong>groupsid</strong>: The campaign\
          \ assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance.
      description: "The api to get all assignments for a campaign instance v1.0 (v1.0/self/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance for a reviewer OR supervisor.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter1'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign statistics.
      description: "The api to get campaign statistics v1.0 (v1.0/admin/campaigns/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns/stats<br/>Get campaign statistics. If called by\
        \ an application owner, the API returns the details for campaigns that the\
        \ owner created or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application."
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/update/campaignconfigschema:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        add reviewerType field and it's values in json for certification manager configuration
        schema.
      operationId: rundeckJobtoUpdateCampaignConfigSchema
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/campaign/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the statistics for the specified type of resource from the
        specific tenant.
      description: "The API is used to retrieve the statistics for the specific type\
        \ of resource from the specific tenant.</br>The owners of the application\
        \ can retrieve the statistics of the resource that is created by them or includes\
        \ at least one application owned by them.Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: campaignStatsv2
      parameters:
      - name: resourceType
        in: query
        description: Filter by the resource type.
        schema:
          default: all
          enum:
          - all
          - configuration
          - instance
          type: string
      - name: state
        in: query
        description: Filter for campaign state.
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - draft
          type: array
          items:
            type: string
      - name: types
        in: query
        description: "The filter for the campaign resource type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/instances/{id}/preview:
    post:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Create a preview campaign.
      description: "The api to create a preview campaign v1.0 (v1.0/admin/instances/{id}/preview)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/preview<br/>Create a preview campaign from\
        \ the specified campaign instance.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminGeneratePreviewCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instance/{id}/assignments:
    patch:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates the list of assignments on a specified campaign instance that
        belong to a specified tenant.
      description: "The API is used to update the list of assignments on a specified\
        \ campaign instance that belong to a specified tenant.</br>The owners of the\
        \ application can update the list of assignments on a campaign that is created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Work Flows]."
      operationId: bulkReplacev2
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for <strong>operation</strong>\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentUpdateAction'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instance/{id}/assignments:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Add new assignments to a continuous campaign instance.
      description: "The api to add new assignments v1.0 (v1.0/admin/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>API for adding new assignments\
        \ in a specific instance of a continuous campaign. If called by an application\
        \ owner, the API can add assignments only for campaigns that the owner created\
        \ or that contain at least one application that the owner owns.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Work Flows]."
      operationId: adminBulkAddition
      parameters:
      - name: id
        in: path
        description: Campaign instance Id
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of new assignments to be added to a continuous campaign\
          \ instance:<br>Add campaign assignment payload details:<br><br>- <strong>id</strong>:\
          \ Campaign assignment ID.<br>- <strong>applicationId</strong>: Application\
          \ identifier<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAssignment'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given set of assignments.
      description: "The api to modify a given set of assignments v1.0 (v1.0/admin/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instance/{id}/assignments<br/>API to make bulk update of\
        \ the specified assignments. If called by an application owner, the API can\
        \ modify only assignments for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessWorkflow [Manage Access Work Flows]."
      operationId: adminBulkReplace
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for operation\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instance/{id}/assignments/refresh:
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Refresh assignments in a continuous campaign.
      description: "The api to refresh assignments v1.0 (v1.0/admin/instance/{id}/assignments/refresh)\
        \ is deprecated. The end of life is 31-Dec-2025.<br/>API for refreshing assignments\
        \ in a continuous campaign.<br/>Entitlements required: manageAccessWorkflow\
        \ [Manage Access  Work Flows]."
      operationId: refreshAssignments
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v2.0/update/reactivateDeleted:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Reactivate deleted campaigns for which scheduled or running instances
        are present.
      description: This API will be invoked through rundeck environment.This API will
        add reviewerType field and it's values in json for certification manager configuration
        schema.
      operationId: rundeckJobtoEnableDeletedBadCampaign
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RundeckOperationResponse'
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/assignments/{id}:
    get:
      tags:
      - Certification Campaign assignments v2.0
      summary: Retrieves the details of the assignment from the specific tenant.
      description: "The API is used to retrieve the assignment details from the specific\
        \ tenant.<br/>The owners of the application can retrieve the details of the\
        \ assignment of the campaign that is created by them or includes at least\
        \ one application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getAssignmentById
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates a specified assignment from the specific tenant.
      description: "The API is used to update a specific assignment from the specific\
        \ tenant.<br/>The owners of the application can update a specific assignment\
        \ of the campaign that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: manageAccessWorkflow [Manage Access\
        \ Work Flows]."
      operationId: replacev2
      parameters:
      - name: id
        in: path
        description: Campaign Assignment ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign assignment payload details:<br><br>- <strong>reviewer</strong>:\
          \ Details about the campaign reviewer. Required when redirecting an assignment\
          \ to another user.<br>- <strong>operation</strong>: The operation to be\
          \ executed.<br><br><br>Allowable values for <strong>operation</strong> are:\
          \ approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssignmentActionReplaceInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRecord'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v1.0/clean/staleinstances:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Update the certification manager schema.
      description: "The api to clean stale instances in the certification manager\
        \ schema v1.0 (v1.0/clean/staleinstances) is deprecated. The end of life is\
        \ 31-Dec-2025. Use the following alternative API: PUT /v2.0/clean/staleinstances<br/>This\
        \ API will be invoked through rundeck environment.This API will clean the\
        \ stale instances in certification manager schema."
      operationId: rundeckJobtoCleanStaleInstancesv1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: Tenant
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will receive the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/self/instance/{id}/assignments:
    patch:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Modify a given set of assignments.
      description: "The api to modify a given set of assignments v1.0 (v1.0/self/instance/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/instance/{id}/assignments<br/>API for a reviewer to make\
        \ bulk update of the specified assignments.<br/>Entitlements required: manageAccessWorkflow\
        \ [Manage Access Work Flows]."
      operationId: selfBulkReplace
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns were assigned to the calling user:\
          \ assigned, delegated"
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign assignments to modify:<br>Campaign assignment\
          \ payload details:<br><br>- <strong>id</strong>: Campaign assignment ID.<br>-\
          \ <strong>reviewer</strong>: Details about the campaign reviewer. Required\
          \ when redirecting an assignment to another user.<br>- <strong>operation</strong>:\
          \ The operation to be executed.<br><br><br>Allowable values for operation\
          \ are: approved, rejected, redirected, escalated.<br><strong>approved</strong>:\
          \ Approve an assignment.<br><strong>rejected</strong>: Reject an assignment.<br><strong>redirected</strong>:\
          \ Redirect an assignment.<br><strong>escalated</strong>: Escalate an assignment.<br><br>-\
          \ <strong>justification</strong>: A justification for the action taken on\
          \ the assignment by the reviewer.<br>- <strong>doImmediateFulfillment</strong>:\
          \ Immediate action on the assignment when signOff is manual and doImmediateFulfillment\
          \ is set to true."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentInput'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/campaigns:
    get:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Retrieve the campaign configurations.
      description: "The api to get a campaign configurations v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/campaigns<br/>Get campaign configurations and manage them.\
        \ The administrator can see all the campaign configurations for the specified\
        \ tenant. Application owner can see only the campaigns he created OR those\
        \ containing at least one Application he owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignConfigurationFind
      parameters:
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign configurations: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign configurations that\
          \ contain the passed string in one of the following attributes: name (Campaign\
          \ configuration name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign configurations: yes,\
          \ no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign configuration priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign configuration that is used to\
          \ sort results. The possible values are: owner, launchdate, name, type,\
          \ priority.<br><br><br>When you provide,<br><strong>owner</strong>:The owner's\
          \ fullName is used for sorting.<br><strong>launchdate</strong>:The launchDate\
          \ timestamp is used for sorting.<br><strong>name</strong>: The campaign\
          \ configuration name is used for sorting.<br><strong>type</strong>:The campaign\
          \ configuration type is used for sorting.<br><strong>priority</strong>:The\
          \ campaign configuration priority is used for sorting.<br><strong>createdOn</strong>:\
          \ The campaign configuration creationDate timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: type
        in: query
        description: "The filter for the campaign configuration type: userassignment,\
          \ groupassignment, or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListResponseCampaignConfig'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Create a campaign configuration.
      description: "The api to create a campaign configuration v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/campaigns<br/>Create a campaign configuration. The optional\
        \ reviewer, if specified, can be any existing userId. For account campaign,\
        \ blocklist contains default \"unmatched\" account statuses. If you want to\
        \ retrieve unmatched accounts as well, you must explicitly add them into the\
        \ allowlist.<br/>Entitlements required: manageAccessCertification [Manage\
        \ Access Certification]."
      operationId: adminCreateCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          $ref: '#/components/schemas/CampaignConfigurationInput'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant for which campaign configuration creation request
          is submitted.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration payload details:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low ).<br>- <strong>name</strong>: Name of the campaign.<br>-\
          \ <strong>description</strong>: Description of the campaign.<br>- <strong>reviewer</strong>:\
          \ Information about the campaign reviewer.<br>- <strong>applications</strong>:\
          \ List of applications the campaign certifies.<br>Note: This is a required\
          \ field, however, in case of User entitlement campaigns, either the 'Applications'\
          \ or 'Entitlement' or both must be specified. <br>- <strong>allowlist</strong>:\
          \ List of users or groups allowed for the certification. You cannot specify\
          \ the block list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br>-\
          \ <strong>launchDate</strong>: Date when the first instance of the campaign\
          \ starts.<br>- <strong>creationDate</strong>: Creation date of the campaign\
          \ configuration.<br>- <strong>duration</strong>: The duration (in milliseconds)\
          \ for which each campaign instance remains open.<br>- <strong>frequency</strong>:\
          \ A UNIX or Linux Cron-compatible string that defines the start of subsequent\
          \ instances. It must be a valid cron expression.<br>Valid cron expression:\
          \ must follow cron syntax (e.g., \"*/5\", \"0 0 * * *\"). The valid range\
          \ for each field within the frequency pattern is as follows:<br>&emsp; -\
          \ Minute: 0-59<br>&emsp; - Hour: 0-23<br>&emsp; - Day of Month: 1-31<br>&emsp;\
          \ - Month: 1-12 (or JAN-DEC)<br>&emsp; - Day of Week: 0-6 (or SUN-SAT)<br>-\
          \ <strong>runEvery</strong>: Frequency unit for campaign instance (days\
          \ or months).<br>- <strong>runNow</strong>: Flag to start the campaign immediately.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes.<br>- <strong>mitigationAction</strong>: Action\
          \ after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>:A flag indicating that the\
          \ campaign is continuous.<br>- <strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are: auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfigurationInput'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Edit campaign configurations.
      description: "The api to modify a set of campaign configurations v1.0 (v1.0/admin/campaigns)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PATCH /v2.0/campaigns<br/>Modify a set of campaign configurations.\
        \ If called by an application owner, the API can modify campaigns that the\
        \ owner created or whose associated applications are all owned by him.<br/>Entitlements\
        \ required: tenantadmin [Tenant Administrator]."
      operationId: bulkReplace
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            description: Representation of a generic payload of a Bulk REST API.
            required:
            - op
            - path
            type: object
            properties:
              op:
                enum:
                - replace
                - remove
                - delete
                type: string
              path:
                type: string
              value:
                $ref: '#/components/schemas/JsonNode'
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign configurations to modify:<br>Campaign configuration\
          \ payload details:<br><br>- <strong>op</strong>: Operation to be performed\
          \ on the given campaign configuration.<br>Allowable values for <strong>op</strong>\
          \ are: replace, remove, harddelete, cancel.<br><br><br><strong>replace</strong>:\
          \ Modify the campaign configuration.<br><strong>remove</strong>: Mark the\
          \ campaign configuration for removal from the database.<br><strong>harddelete</strong>:\
          \ Delete the campaign configuration immediately from the database.<br><strong>cancel</strong>:\
          \ Cancel running and all future instances of this campaign.<br><br><br>-\
          \ <strong>path</strong>: Campaign configuration ID.<br>- <strong>value</strong>:\
          \ Campaign configuration details.<br><br><br><strong>owner</strong>: Information\
          \ about the campaign owner.<br><strong>type</strong>: Type of campaign (For\
          \ example, userassignment, groupassignment, account).<br><strong>priority</strong>:\
          \ Priority of the campaign (For example, high, medium, low ).<br><strong>name</strong>:\
          \ Name of the campaign.<br><strong>description</strong>: Description of\
          \ the campaign.<br><strong>reviewer</strong>: Information about the campaign\
          \ reviewer.<br>- <strong>applications</strong>: List of applications the\
          \ campaign certifies.<br>Note: This is a required field, however, in case\
          \ of User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. <br>- <strong>allowlist</strong>: List of users\
          \ or groups allowed for the certification. You cannot specify the block\
          \ list with the allow list in the User/Group scope. <br>- <strong>blocklist</strong>:\
          \ List of users or groups excluded from the certification. You cannot specify\
          \ the allow list with the block list in the User/Group scope.<br>- <strong>entitlementFilter</strong>:\
          \ It is set to filter the list of included or excluded entitlements for\
          \ certification.<br><br><br>You can either specify entitlementInclusionList\
          \ or entitlementExclusionList in <strong>entitlementFilter</strong>.<br><strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br><strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br><strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br><strong>frequency</strong>: Frequency of campaign instance.<br><strong>runEvery</strong>:\
          \ Frequency unit for campaign instance (days or months).<br><strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br><strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br><strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br><strong>mitigationAction</strong>:\
          \ Action after a campaign closes to avoid open records.<br><strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br><string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br><strong>continuous</strong>:A flag indicating that the campaign\
          \ is continuous.<br><strong>automaticRefreshContinuousCampaign</strong>:A\
          \ flag, valid for continuous campaigns only, saying that campaign should\
          \ refresh the existing filter for building dataset.<br><strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br><strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br><strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br><strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkOperationCampaign'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The operation was successful.
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulk'
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments within a given
        instance.
      description: "The api to get statistics of specific assignments within a given\
        \ instance v1.0 (v1.0/admin/instances/{instanceId}/assignments/resources)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{instanceId}/assignments/resources<br/>Get statistics\
        \ about assignment resources, for a specific campaign instance, depending\
        \ on the specified filter. If called by application owner, the API returns\
        \ statistics for the instance, he created or at least has one application\
        \ he owns.<br/>Entitlements required: manageAccessCertification [Manage Access\
        \ Certification]."
      operationId: adminAssignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/instances:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the list of a campaign instances from the specific tenant.
      description: "The API is used to retrieve the list of a campaign instances from\
        \ the specific tenant.<br/>The owners of the application can access the list\
        \ of campaign instances that are created by them or includes at least one\
        \ application owned by them.<br/>Unspecified filter parameters are treated\
        \ as having the default values.<br/>Every provided parameter value is considered\
        \ as an extra filter for the search criteria.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: campaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance. This\
          \ filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: skipStatistics
        in: query
        description: "Filter for including aggregated data (that is, statistics, progress)\
          \ to the instance objects: dataonly, yes, or no."
        schema:
          default: "no"
          enum:
          - dataonly
          - "yes"
          - "no"
          type: string
      - name: sortDesc
        in: query
        schema:
          default: true
          type: boolean
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: supervisorsId
        in: query
        description: "The filter for the campaign supervisor.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "This is a deprecated campaign instance type filter. Use 'types'\
          \ query parameter instead. If both the 'type' and 'types' query parameter\
          \ are used, then the 'types' selected value is considered."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
        deprecated: true
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
    patch:
      tags:
      - Certification Campaign instances v2.0
      summary: Perform operations on a collection of campaign instances that belong
        to a specific tenant.
      description: "The API is used to perform operations on a collection of campaign\
        \ instances that belong to a specific tenant.<br/>The owners of the application\
        \ can perform operations on the list of campaign instances that are created\
        \ by them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: patchbulkReplace
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceAction'
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "List of campaign instances to modify:<br>Campaign instance payload\
          \ details:<br><br>- <strong>id</strong>: Campaign instance ID.<br>- <strong>eventType</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>eventType</strong> are: cancel, pause, restart, runnow, end,\
          \ delete.<br><strong>cancel</strong>: Transitions the campaign instance\
          \ to a cancelled state, indicating it is no longer active.<br><strong>pause</strong>:\
          \ Temporarily halts a running campaign instance, putting it in a paused\
          \ state.<br><strong>restart</strong>: Resumes a paused campaign instance,\
          \ continuing its execution.<br><strong>runnow</strong>: Triggers immediate\
          \ execution of a scheduled campaign instance.<br><strong>end</strong>: Transitions\
          \ a running campaign to a completion state, before the designated completion\
          \ date. It is mainly to enforce the campaign closure based actions immediately.<br><strong>delete</strong>:\
          \ Delete the campaign instance immediately from the database.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignInstanceAction'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/{id}/launch:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Launch the campaign using the provided configuration for the specified
        campaign that belong to a specified tenant.
      description: "The API is used to launch the campaign using the provided configuration\
        \ for the specified campaign that belong to a specified tenant. <br/>The administrator\
        \ managing a specified tenant can launch a draft campaign configuration created\
        \ for that tenant.<br/> The owners of the application can launch a draft campaign\
        \ configuration that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: launchCampaign
      parameters:
      - name: id
        in: path
        description: "The valid unique identifier of the campaign in draft mode. For\
          \ example, 7743f25b-6818-457e-b8b8-9e543dc6d10d"
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "Payload details for the campaign launch:<br><br>- <strong>owner</strong>:\
          \ Information about the campaign owner.<br>- <strong>type</strong>: Type\
          \ of campaign (For example, userassignment, groupassignment, account, groupmembership).<br>-\
          \ <strong>priority</strong>: Priority of the campaign (For example, high,\
          \ medium, low).<br>- <strong>name</strong>: Name of the campaign.<br>- <strong>description</strong>:\
          \ Description of the campaign.<br>- <strong>reviewer</strong>: Information\
          \ about the campaign reviewer.<br>- <strong>applications</strong>: List\
          \ of applications that the campaign certifies.<br>Note: This is a required\
          \ field for Group entitlement and Account campaign, however, in case of\
          \ User entitlement campaigns, either the 'Applications' or 'Entitlement'\
          \ or both must be specified. This is not required for Group Membership.<br>-\
          \ <strong>userFilter</strong>: List of users or groups for inclusion/exclusion\
          \ or filter for users allowed for the certification.<br><br><br>In case\
          \ of user entitlement campaign, you can either specify userConditionSet\
          \ or userInclusionList or userExclusionList in userFilter.<br><br>- <strong>entitlementFilter</strong>:\
          \ List of entitlements for inclusion/exclusion or filter for entitlements\
          \ allowed for the certification.<br>Note: For user assignment campaigns,\
          \ either 'Applications' or 'Entitlement Filter' must be specified, or both.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br><br>- <strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br>- <strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br>- <strong>frequency</strong>: Frequency of campaign instances\
          \ (Let's give an example UNIX or Linux Cron-compatible string).<br>- <strong>runNow</strong>:\
          \ Flag to start the campaign immediately.<br>- <strong>nextRunDate</strong>:\
          \ Forecasted Run Date for the next campaign instance.<br>- <strong>overdueAction</strong>:\
          \ Action for open records when a campaign closes.<br>- <strong>mitigationAction</strong>:\
          \ Action to be taken after a campaign closes to avoid open records.<br>-\
          \ <strong>defaultReviewer</strong>: Default reviewer for assignments in\
          \ absence of a suitable reviewer.<br>- <strong>continuous</strong>:A flag\
          \ indicating that the campaign is continuous. Default value for continuous\
          \ is 'false'.<br>- <strong>continuousCampaignMetaData</strong>: Details\
          \ of continuous campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;&nbsp;&nbsp;'reminderInterval' is the number\
          \ of days after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>overdueAction</strong>:\
          \ Default action on unreviewed entitlements after a specific period has\
          \ elapsed.<br>&nbsp;&nbsp;&nbsp;&nbsp;Allowable values are rejectAll, approveAll\
          \ or doNothing.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;&nbsp;&nbsp;This field is only applicable\
          \ for the <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;&nbsp;&nbsp;Default\
          \ value is 'true'<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>events</strong>: A\
          \ list of events thats needs to be monitored through the campaign.<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\"\
          : \"rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:Campaign\
          \ sign-off policy refers to the pre-determined approach  that governs when\
          \ and how campaign actions are officially approved or denied (auto, manual,\
          \ eoc, no_signoff).<br>Example: auto (The setting would mean immediate sign-off.\
          \ Actions taken by the approver in terms of approval or rejection are applied\
          \ on the assignment immediately).<br>Example: manual (The setting would\
          \ mean a manual sign-off. The certifier can decide whether to enforce the\
          \ action immediately OR at the end of the campaign).<br>Example: eoc (The\
          \ setting would mean sign-off towards the end of the campaign. Actions taken\
          \ by the approver in terms of approval or rejection are persisted till the\
          \ Due date of the campaign and then rolled out together)<br>Example: no_signoff\
          \ (Actions are not executed and only used for reporting)<br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>rev</strong>: Campaign revision.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: false
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: A conflict occurred during the launch operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorMessage'
      x-publicAPI: "false"
  /itim/cm/v2.0/instances/{id}:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the details of the campaign instance from the specific tenant.
      description: "The API is used to retrieve the campaign instance details from\
        \ the specific tenant.<br/>The owners of the application can retrieve the\
        \ campaign instances details that are created by them or includes at least\
        \ one application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getCampaignInstanceById
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign instances v2.0
      summary: Perform an operation on a specified campaign instance that belong to
        a specified tenant.
      description: "This API is used to perform an operation on a specified campaign\
        \ instance that belongs to a specified tenant.<br/>The owners of the application\
        \ can perform operation on a specified campaign instance that is created by\
        \ them or includes at least one application owned by them.<br/>Entitlements\
        \ required: manageAccessWorkflow [Manage Access Request Work Flows]."
      operationId: replaceput
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign instance payload details:<br><br>- <strong>eventType</strong>:\
          \ The action to apply to the campaign instance.<br><br><br>Allowable values\
          \ for <strong>eventType</strong> are: cancel, pause, restart, runnow.<br><strong>cancel</strong>:\
          \ Transitions the campaign instance to a cancelled state, indicating it\
          \ is no longer active.<br><strong>pause</strong>: Temporarily halts a running\
          \ campaign instance, putting it in a paused state.<br><strong>restart</strong>:\
          \ Resumes a paused campaign instance, continuing its execution.<br><strong>runnow</strong>:\
          \ Triggers immediate execution of a scheduled campaign instance."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignInstanceReplaceInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/update/entitlementSchema:
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Update the certification manager schema.
      description: This API will be invoked through rundeck environment.This API will
        convert entitlementAllowlist/entitlementBlocklist fields values in json from
        null to empty array or create entry in json if fields are not found for entire
        certification manager schema.
      operationId: rundeckJobtoUpdateEntitlementSchema
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "200":
          description: Operation is successful. Will return the required data.
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/utility/migratableTenants:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Check tenants which are migratable from this environment to other.
      description: This API is a utility API.This API will be used to check if a tenant
        or bunch of tenants are migratable or not.
      operationId: utilityForCheckingMigratableTenants
      parameters:
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
          Multiple tenants can be passed as comma-seperated list.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: Operation is successful. Will return the required data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RundeckOperationResponse'
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be performed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/{id}:
    get:
      tags:
      - Certification Campaign configurations v2.0
      summary: Retrieves the details of the campaign configuration from the specific
        tenant.
      description: "The API is used to retrieve the campaign configuration details\
        \ from the specific tenant.<br/>The owners of the application can retrieve\
        \ campaign configuration that is created by them or includes at least one\
        \ application owned by them.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: getCampaignById
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    put:
      tags:
      - Certification Campaign configurations v2.0
      summary: Updates the campaign configuration for a specified campaign configuration
        from the specific tenant.
      description: "The API is used to update the campaign configuration for a specified\
        \ campaign configuration from the specific tenant.<br/> The administrator\
        \ managing a specified tenant can update a campaign configuration created\
        \ for that tenant.<br/> The owners of the application can update a campaign\
        \ configuration that is created by them or includes at least one application\
        \ owned by them.<br/>Entitlements required: tenantadmin [Tenant Administrator]."
      operationId: putreplace
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      requestBody:
        description: "Campaign configuration update request payload details:<br><br>-\
          \ <strong>owner</strong>: Information about the campaign owner.<br>- <strong>type</strong>:\
          \ Type of campaign (For example, userassignment, groupassignment, account,\
          \ groupmembership).<br>- <strong>priority</strong>: Priority of the campaign\
          \ (For example, high, medium, low ).<br>- <strong>name</strong>: Name of\
          \ the campaign.<br>- <strong>description</strong>: Description of the campaign.<br>-\
          \ <strong>reviewer</strong>: Information about the campaign reviewer.<br>-\
          \ <strong>applications</strong>: List of applications that the campaign\
          \ certifies.<br>Note: This is a required field for Group entitlement and\
          \ Account campaign, however, in case of User entitlement campaigns, either\
          \ the 'Applications' or 'Entitlement' or both must be specified. This is\
          \ not required for Group Membership. <br>- <strong>userFilter</strong>:\
          \ It is set to filter the list of included or excluded users or groups for\
          \ certification. <br><br><br>In case of user entitlement campaign, you can\
          \ either specify userConditionSet or userInclusionList or userExclusionList\
          \ in userFilter.<br><br>- <strong>entitlementFilter</strong>: It is set\
          \ to filter the list of included or excluded entitlements for certification.<br><br><br>You\
          \ can either specify entitlementInclusionList or entitlementExclusionList\
          \ in <strong>entitlementFilter</strong>.<br>- <strong>launchDate</strong>:\
          \ Date when the first instance of the campaign starts.<br>- <strong>creationDate</strong>:\
          \ Creation date of the campaign configuration.<br>- <strong>duration</strong>:\
          \ The duration (in milliseconds) for which each campaign instance remains\
          \ open.<br>- <strong>frequency</strong>: Frequency of campaign instance.<br>-\
          \ <strong>runNow</strong>: Flag to start the campaign immediately.<br>-\
          \ <strong>nextRunDate</strong>: Forecasted Run Date for the next campaign\
          \ instance.<br>- <strong>overdueAction</strong>: Action for open records\
          \ when a campaign closes.<br>- <strong>mitigationAction</strong>: Action\
          \ after a campaign closes to avoid open records.<br>- <strong>defaultReviewer</strong>:\
          \ Default reviewer for assignments without a suitable reviewer.<br>- <string>preview</strong>:\
          \ A flag indicating that the campaign is in preview mode and not open to\
          \ reviewers.<br>- <strong>continuous</strong>: A flag indicating that the\
          \ campaign is continuous. Default value for continuous is 'false'.<br>-\
          \ <strong>continuousCampaignMetaData</strong>: Details of continuous campaign.<br>&nbsp;&nbsp;<strong>generateInitialDataSet</strong>:\
          \ A flag indicating whether to load the initial data set while creating\
          \ a continuous campaign.<br>&nbsp;&nbsp;Default value is 'false'<br>&nbsp;&nbsp;<strong>reminderAction</strong>:\
          \ Action for sending periodic reminders to reviewers for unreviewed assignments.<br>&nbsp;&nbsp;Default\
          \ value is { type = none, reminderInterval=0 }.<br>&nbsp;&nbsp;Allowable\
          \ value for <strong>type</strong> in <strong>reminderAction</strong> are:\
          \ none, reminder.<br>&nbsp;&nbsp;'reminderInterval' is the number of days\
          \ after sending periodic reminders to reviewers.<br>&nbsp;&nbsp;Default\
          \ value for reminderInterval is <strong>10</strong> (in days) when type\
          \ is <strong>reminder</strong><br>&nbsp;&nbsp;<strong>overdueThreshold</strong>:\
          \ Number of days after set default action on unreviewed entitlements.<br>&nbsp;&nbsp;Default\
          \ value is '30'<br>&nbsp;&nbsp;<strong>overdueAction</strong>: Default action\
          \ on unreviewed entitlements after a specific period has elapsed.<br>&nbsp;&nbsp;Allowable\
          \ values are rejectAll, approveAll or doNothing.<br>&nbsp;&nbsp;Default\
          \ overdueAction is 'doNothing'<br>&nbsp;&nbsp;<strong>automaticRefresh</strong>:\
          \ A flag indicating that campaign should refresh the existing filter for\
          \ building dataset.<br>&nbsp;&nbsp;This field is only applicable for the\
          \ <strong>continuous account campaign</strong>.<br>&nbsp;&nbsp;Default value\
          \ is 'true'<br>&nbsp;&nbsp;<strong>events</strong>: A list of events thats\
          \ needs to be monitored through the campaign.<br>&nbsp;&nbsp;<strong>example</strong>:<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\
          continuousCampaignMetaData\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          generateInitialDataSet\": false,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          reminderAction\": \"reminderAction\": { \"type\": \"reminder\", \"reminderInterval\"\
          : 10 },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueThreshold\"\
          : 30,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"overdueAction\": \"\
          rejectAll\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"events\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          type\":\"CHANGE_USER_PROFILE\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\
          monitoredAttributes\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"12\",\"name\":\"departmentNumber\"},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"\
          id\":\"30\",\"name\":\"gtwayManager\"}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<strong>continuousCampaignMetaData</strong>\
          \ should be added when \"continuous\" is true.<br>- <strong>signOff</strong>:\
          \ Campaign sign-off policy refers to the pre-determined approach  that governs\
          \ when and how campaign actions are officially approved or denied (auto,\
          \ manual, eoc, no_signoff).<br><br>Allowable values for <strong>signOff</strong>\
          \ are auto, manual, eoc or no_signoff.<br><strong>auto</strong>: The setting\
          \ would mean immediate sign-off. Actions taken by the approver in terms\
          \ of approve or reject are applied on the assignment immediately).<br><strong>manual</strong>:\
          \ The setting would mean a manual sign-off. The certifier can decide for\
          \ himself if he wants to enforce his action immediately OR at the end of\
          \ the campaign).<br><strong>eoc</strong>: The setting would mean sign-off\
          \ towards the end of the campaign. Actions taken by the approver in terms\
          \ of approval or rejection are persisted till the Due date of the campaign\
          \ and then rolled out together).<br><strong>no_signoff</strong>: Actions\
          \ are not executed and only used for reporting.<br><br><br>- <strong>supervisors</strong>:\
          \ List of supervisors identified for the campaign.<br>- <strong>allowSupervisorEscalation</strong>:\
          \ Allow escalation to supervisors.<br>- <strong>reviewerOverwritten</strong>:\
          \ Flag indicating if the reviewer is manually overwritten.<br>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignConfiguration'
        required: true
      responses:
        "200":
          description: The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignConfiguration'
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "409":
          description: A conflict occurred during the replace operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
    delete:
      tags:
      - Certification Campaign configurations v2.0
      summary: Deletes a campaign configuration from the specific tenant.
      description: "The API is used to delete a campaign configuration from the specific\
        \ tenant.<br/>The administrator managing a specified tenant can delete a campaign\
        \ configuration created for that tenant.<br/> The owners of the application\
        \ can delete a campaign configuration that is created by them or includes\
        \ at least one application owned by them.<br/>Entitlements required: tenantadmin\
        \ [Tenant Administrator]."
      operationId: delete
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "204":
          description: The request was successful.
      x-publicAPI: "false"
  /itim/cm/v2.0/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the campaign instance statistics from the specific tenant.
      description: "The API is used to retrieve the campaign instance statistics from\
        \ the specific tenant.</br>Unspecified filter parameters are treated as having\
        \ the default values.</br>Every provided parameter value is considered as\
        \ an extra filter for the search criteria.</br>If called by an application\
        \ owner, the API returns statistics of the instances that the owner created\
        \ or contains at least one application that the owner owns.<br/>If called\
        \ by user manager, the API returns statistics of instances, for which there\
        \ is at least one item to review.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: instancesStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns have been assigned to the calling\
          \ user: assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: types
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ account, groupmembership.<br><br>Multiple values can be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/cm/v1.0/admin/instances/{id}/assignments:
    get:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance
      description: "The api to get a specific assignment v1.0 (v1.0/admin/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance. If called by an application owner, the API\
        \ can get assignments only for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignAssignmentFindByInstanceID
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assigneesId
        in: query
        description: "The filter for the assignee.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentName
        in: query
        description: "The filter for the assignment names.<br>Here, for following\
          \ campaign types: <br>userassignment/groupassignment: Provide entitlement\
          \ name.<br> account: Provide account userName.<br><br>Provide multiple values\
          \ in new lines or separated by commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: assignmentStatus
        in: query
        description: "The filter for the assignment value type: compliant, non_compliant,\
          \ orphan, unmanaged, unmatched.<br><br>Multiple values can be selected."
        required: false
        schema:
          enum:
          - compliant
          - non_compliant
          - orphan
          - unmanaged
          - unmatched
          type: array
      - name: assignmentType
        in: query
        description: "The filter for the assignment type: role, permission, account.<br><br>Multiple\
          \ values can be selected."
        required: false
        schema:
          enum:
          - role
          - permission
          - account
          type: array
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignments that contain\
          \ the passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        schema:
          type: string
      - name: groupsId
        in: query
        description: "The filter for the discretionary groups.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 6160015WXY, 6270026WZY,\
          \ 50FEQX8SRD"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: reviewersId
        in: query
        description: "The filter for the campaign reviewer.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting.<br><strong>groupsid</strong>: The campaign\
          \ assignment discretionaryGroup name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. the error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
    post:
      tags:
      - Certification Campaign assignments v1.0 - Deprecated
      summary: Deprecated - Retrieve all assignments in a given campaign instance.
      description: "The api to get all assignments for a campaign instance v1.0 (v1.0/admin/instances/{id}/assignments)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: POST /v2.0/instances/{id}/assignments<br/>Get all the assignments for\
        \ a specific campaign instance. If called by an application owner, the API\
        \ can get assignments only for campaigns that the owner created or that contain\
        \ at least one application that the owner owns.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: adminCampaignAssignmentFindByInstanceIDv1
      parameters:
      - name: id
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results. The possible values are: application, assignee, accountname,\
          \ accountstatus, reviewer, lastaction, type, creationdate, groupsid.<br><br><br>When\
          \ you provide,<br><strong>application</strong>: The application name is\
          \ used for sorting.<br><strong>assignee</strong>: The assignee fullName\
          \ is used for sorting.<br><strong>accountname</strong>: The account userName\
          \ is used for sorting.<br><strong>accountstatus</strong>: The account finerStatus\
          \ is used for sorting.<br><strong>reviewer</strong>: The reviewer name is\
          \ used for sorting.<br><strong>lastaction</strong>: The last_action is used\
          \ for sorting.<br><strong>type</strong>: The entitlement type is used for\
          \ sorting.<br><strong>creationdate</strong>: The campaign assignment creationDate\
          \ timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      requestBody:
        description: "Supported assignment filters for search<br><strong>lastActions</strong>:\
          \ The filter for the reviewer action.<br>Possible values for reviewer actions\
          \ are: none, approved, rejected, redirected, escalated, noMoreOnTarget.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assigneesId</strong>:\
          \ The filter for the assignee.<br>Provide multiple values separated by commas.\
          \ For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>reviewersId</strong>:\
          \ The filter for the campaign reviewer.<br>Provide multiple values separated\
          \ by commas. For example, 607000JX53, 6050001F7Z, 50EEPX4TQC<br><br><strong>appsId</strong>:\
          \ The filter for the campaign application.<br>Provide multiple values separated\
          \ by commas. For example,7728662622850583652, 7729580475382480456<br><br><strong>assignmentTypes</strong>:\
          \ The filter for the assignment type: role, permission, account.<br>Provide\
          \ multiple values separated by commas.<br><br><strong>assignmentNames</strong>:\
          \ The filter for the assignment names.<br>Here, for following campaign types:\
          \ <br>userassignment/groupassignment: Provide entitlement name.<br> account:\
          \ Provide account userName.<br>Provide multiple values separated by commas.<br><br><strong>assignmentStatus</strong>:\
          \ The filter for the assignment status: compliant, non_compliant, orphan,\
          \ unmanaged, unmatched.<br>Provide multiple values separated by commas.<br><br><strong>groupsId</strong>:\
          \ The filter for the discretionary groups.<br>Provide multiple values separated\
          \ by commas. For example, 6160015WXY, 6270026WZY, 50FEQX8SRD<br><br><strong>filter</strong>:\
          \ The generic filter for returning campaign assignments that contain the\
          \ passed string in one of the following attributes: assignee.name, assignee.email,\
          \ assignee.fullName, assignee.firstName, assignee.lastName, application.name,\
          \ account.userName"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentFilter1'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/tenant/limits:
    get:
      tags:
      - Serviceability v2.0
      summary: Retrieve the maximum limits set for the specific tenant.
      description: "The API is used to retrieve the maximum tenant limits set for\
        \ the specific tenant.</br>The administrator managing a specified tenant can\
        \ retrieve the limits set for the specific tenant.</br>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: tenantLimits
      parameters:
      - name: resourceType
        in: query
        description: "The resource type to filter tenant limits: all, monitoredUserAttributes."
        schema:
          default: all
          enum:
          - monitoredUserAttributes
          - all
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant for which the limits are retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Your request cannot be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request cannot be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "false"
  /itim/cm/v1.0/self/instances/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific campaign instances.
      description: "The api to get statistics of specific campaign instances v1.0\
        \ (v1.0/self/instances/stats) is deprecated. The end of life is 31-Dec-2025.\
        \ Use the following alternative API: GET /v2.0/instances/stats<br/>Get aggregated\
        \ statistics about campaign instances depending on the specified filter. If\
        \ called by a user manager, the API returns statistics of instances, for which\
        \ the manager has at least one item to review.<br/>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: selfInstancesStats
      parameters:
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by how the campaigns have been assigned to the calling\
          \ user: assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaigns that contains the\
          \ passed string in one of the following attributes: name (Campaign instance\
          \ name) "
        required: false
        schema:
          type: string
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application"
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: overallState
        in: query
        description: "The filter for the overall state of the campaign instance: active,\
          \ inactive"
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/self/instances/{instanceId}/assignments/resources:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments within a given
        instance.
      description: "The api to get statistics of specific assignments within a given\
        \ instance v1.0 (v1.0/self/instances/{instanceId}/assignments/resources) is\
        \ deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances/{instanceId}/assignments/resources<br/>Get aggregated\
        \ statistics about assignments in a specific campaign instance for a reviewer\
        \ OR supervisor. Filters could be applied against the assignments. <br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: selfAssignmentsResourceStats
      parameters:
      - name: instanceId
        in: path
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: actions
        in: query
        description: "The filter for the reviewer action.<br><br>Possible values for\
          \ reviewer actions are: none, approved, rejected, redirected, escalated,\
          \ noMoreOnTarget.<br>Provide multiple values in new lines or separated by\
          \ commas."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign assignment resources\
          \ statistics:<br><br>Following is the list of resourceType and it's corresponding\
          \ filter attribute that contains the passed string in one of the attribute:<br><br><strong>assignee</strong>:\
          \ assignee.name, assignee.email, assignee.fullName, assignee.firstName,\
          \ assignee.lastName<br><strong>reviewer</strong>: reviewer.name, reviewer.email,\
          \ reviewer.fullName, reviewer.firstName, reviewer.lastName<br><strong>application</strong>:\
          \ application.name<br><strong>assignmentType</strong>: entitlement.type<br><strong>assignmentName</strong>:\
          \ entitlement.name<br><strong>accountStatus</strong>: account.finerStatus<br><strong>accountName</strong>:\
          \ account.userName<br><strong>entitledAs</strong>: discretionaryGroup.name"
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: resourceType
        in: query
        description: "The filter for the resource type to query statistics: assignee,\
          \ reviewer, application, assignmentType, assignmentName, assignmentSource,\
          \ accountStatus, accountName, entitledAs."
        schema:
          default: assignee
          enum:
          - assignee
          - reviewer
          - application
          - assignmentType
          - assignmentName
          - assignmentSource
          - accountStatus
          - accountName
          - entitledAs
          type: string
      - name: reviewerId
        in: query
        description: "The filter for the campaign reviewer.<br> For example,607000JX53"
        schema:
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign assignment that is used to sort\
          \ results.<br>Following is the list of resourceType and it's corresponding\
          \ attribute respectively that is used to sort results:<br><br><strong>assignee</strong>:\
          \ When you provide,<br><br>- <strong>firstname</strong>: Assignee firstName\
          \ is used for sorting.<br>- <strong>lastname</strong>: Assignee lastName\
          \ is used for sorting.<br>- <strong>count</strong>: Assignee's assignments\
          \ count is used for sorting.<br><br><strong>reviewer</strong>: When you\
          \ provide,<br><br>- <strong>reviewer</strong>: Reviewer firstName is used\
          \ for sorting.<br>- <strong>numapproveditems</strong>: Reviewer approved\
          \ items count is used for sorting.<br>- <strong>numrejecteditems</strong>:\
          \ Reviewer rejected items count is used for sorting.<br>- <strong>numunproceseditems</strong>:\
          \ Reviewer unprocessed items count is used for sorting.<br>- <strong>completion</strong>:\
          \ Reviewer completed items count is used for sorting.<br>- <strong>count</strong>:\
          \ Reviewer total items count is used for sorting.<br><br><strong>application</strong>:\
          \ When you provide,<br><br>- <strong>application</strong>: Application name\
          \ is used for sorting.<br>- <strong>count</strong>: Application's assignments\
          \ count is used for sorting.<br><br><strong>assignmentType</strong>: By\
          \ default entitlement type is used for sorting.<br><strong>assignmentName</strong>:\
          \ By default entitlement name is used for sorting.<br><strong>accountStatus</strong>:\
          \ By default account finerStatus is used for sorting.<br><strong>accountName</strong>:\
          \ By default account userName is used for sorting.<br><strong>entitledAs</strong>:\
          \ By default discretionary group name is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/update/entitlementSchema:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Update the certification manager schema.
      description: "The api to update the certification manager schema v1.0 (v1.0/update/schema)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/update/entitlementSchema<br/>This API will be invoked through\
        \ rundeck environment.This API will convert entitlementAllowlist/entitlementBlocklist\
        \ fields values in json from null to empty array or create entry in json if\
        \ fields are not found for entire certification manager schema."
      operationId: rundeckJobtoUpdateEntitlementSchemav1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: Operation is successful. Will receive the required data.
      x-publicAPI: "false"
  /itim/cm/v1.0/admin/assignments/stats:
    get:
      tags:
      - Certification Campaign statistics v1.0 - Deprecated
      summary: Deprecated - Retrieve statistics of specific assignments.
      description: "The api to get statistics of specific assignments v1.0 (v1.0/admin/assignments/stats)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/assignments/stats<br/>Get aggregated statistics about assignments\
        \ in a specific campaign instance. Filters could be applied to refine the\
        \ entities to use for generating statistics. If called by application owner,\
        \ the API returns statistics across all instances he created or containing\
        \ at least one application he owns.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: adminAssignmentsStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: reviewer, last_action, assignee, application,\
          \ ent_type, ent_name, account_status"
        schema:
          default: all
          enum:
          - reviewer
          - last_action
          - assignee
          - application
          - ent_type
          - ent_name
          - account_status
          - all
          type: string
      - name: instanceId
        in: query
        description: Campaign Instance ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStatsOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/launch:
    patch:
      tags:
      - Certification Campaign configurations v2.0
      summary: Launch the campaign configurations from the draft campaign configurations
        that belong to a specified tenant.
      description: "The API is used to launch the campaign configurations from the\
        \ draft campaign configurations that belong to a specified tenant. <br/>The\
        \ administrator managing a specific tenant can launch list of draft campaign\
        \ configurations created for that tenant.<br/> The owners of the application\
        \ can launch list of draft campaign configurations that are created by them\
        \ or includes at least one application owned by them.<br/>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: launchCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfigurationLaunchInput'
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "List of an existing draft campaign configurations to be launched:<br><br>-\
          \ <strong>campaignId</strong>: Campaign configuration ID.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignConfigurationLaunchInput'
        required: true
      responses:
        "400":
          description: A client-side status error occurred. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: The request was successful.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "409":
          description: A conflict occurred during the launch operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/clone:
    post:
      tags:
      - Certification Campaign configurations v2.0
      summary: Clone the campaign configurations from the source campaign configurations
        that belong to a specified tenant.
      description: "The API is used to clone the campaign configurations from the\
        \ source campaign configurations that belong to a specified tenant.<br/> The\
        \ administrator managing a specified tenant can clone a list of source campaign\
        \ configurations created for that tenant.<br/> The owners of the application\
        \ can clone a list of source campaign configurations that are created by them\
        \ or includes at least one application owned by them.<br/>Entitlements required:\
        \ tenantadmin [Tenant Administrator]."
      operationId: cloneCampaignConfiguration
      parameters:
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfigurationCloneInput'
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "List of an existing campaign configurations to be cloned:<br><br>-\
          \ <strong>sourceCampaignId</strong>: Campaign configuration ID.<br>"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CampaignConfigurationCloneInput'
        required: true
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageForBulkOp'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Server error
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "207":
          description: Partial success. The results are mixed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkOperationResult'
      x-publicAPI: "false"
  /itim/cm/v2.0/application/{id}/assignments:
    put:
      tags:
      - Certification Campaign assignments v2.0
      summary: Updates a list of assignment resources that belong to a specified tenant
        and match the application filter criteria.
      description: "Entitlements required: internalManageCerts [Internal Manage Certification]<br>The\
        \ REST API can be called only from internal microservices.<br>Creates an asynchronous\
        \ job in the job table to process the request from the other microcervice\
        \ for updating the application metadata."
      operationId: updateAssignmentsByApplication
      parameters:
      - name: id
        in: path
        description: The valid unique identifier of the application.
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      requestBody:
        description: "Request payload details:<br><br>Allowable op values : remove,\
          \ or replace<br><br>Allowable path values : application.owner.<br><br>The\
          \ \"value\" attribute is required for the \"replace\" operation.<br><br>\"\
          remove\" operation supported only for the application owner delete event.\
          \ { \"Operations\": [ { \"op\": \"remove\", \"path\": \"application.owner\"\
          \ } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateByApplication'
        required: true
      responses:
        "202":
          description: The request was successfully accepted.
        "400":
          description: Generic application error status. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: The REST API can be called only from internal microservices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "false"
  /itim/cm/swagger:
    get:
      responses:
        "200":
          description: OK
  /itim/cm/v1.0/self/instances:
    get:
      tags:
      - Certification Campaign instances v1.0 - Deprecated
      summary: Deprecated - Retrieve campaign instances.
      description: "The api to get campaign instances v1.0 (v1.0/self/instances) is\
        \ deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: GET /v2.0/instances<br/>Get campaign instances with at least one record\
        \ associated with a reviewer or supervisor.<br/>Entitlements required: manageAccessCertification\
        \ [Manage Access Certification]."
      operationId: selfCampaignInstanceFind
      parameters:
      - name: appsId
        in: query
        description: "The filter for the campaign application.<br><br>Provide multiple\
          \ values in new lines or separated by commas. For example,7728662622850583652,\
          \ 7729580475382480456"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: continuous
        in: query
        description: "The filter for getting continuous campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: overallState
        in: query
        description: "To filter based on the overall state of the campaign instance.\
          \ This filter is to logically 'group' the possible campaign instance states:\
          \ active,inactive."
        schema:
          default: all
          enum:
          - all
          - active
          - inactive
          type: string
      - name: ownersId
        in: query
        description: "The filter for the campaign owner.<br><br>Provide multiple values\
          \ in new lines or separated by commas. For example, 607000JX53, 6050001F7Z,\
          \ 50EEPX4TQC"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: preview
        in: query
        description: "The filter for getting preview campaign instances: yes, no."
        schema:
          default: all
          enum:
          - all
          - "yes"
          - "no"
          type: string
      - name: priority
        in: query
        description: "The filter for the campaign instance priority: high, medium,\
          \ or low."
        schema:
          default: all
          enum:
          - all
          - high
          - medium
          - low
          type: string
      - name: skipStatistics
        in: query
        description: "Filter for including aggregated data (that is, statistics, progress)\
          \ to the instance objects: dataonly, yes, or no."
        schema:
          default: "no"
          enum:
          - dataonly
          - "yes"
          - "no"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success.<br><br>Multiple values can be selected."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: array
          items:
            type: string
      - name: type
        in: query
        description: "The filter for the campaign instance type: userassignment, groupassignment,\
          \ or account."
        schema:
          default: all
          enum:
          - all
          - userassignment
          - groupassignment
          - account
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        deprecated: true
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstanceOutput'
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Server error
      x-publicAPI: "true"
  /itim/cm/v1.0/update/schema:
    put:
      tags:
      - Certification Campaign configurations v1.0 - Deprecated
      summary: Deprecated - Update the certification manager schema.
      description: "The api to update the certification manager schema v1.0 (v1.0/update/schema)\
        \ is deprecated. The end of life is 31-Dec-2025. Use the following alternative\
        \ API: PUT /v2.0/update/entitlementSchema<br/>This API will be invoked through\
        \ rundeck environment.This API will convert tenant hostnames to tenant UUID\
        \ for entire certification manager schema."
      operationId: rundeckJobtoUpdateSchemav1
      parameters:
      - name: dryRunMode
        in: query
        description: Set false to update the schema else by default it is set to true
          which will print the table statistics of certmgr DB in logs
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: singleTenant
        in: query
        description: Set true for single tenant execution
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: boolean
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        deprecated: true
        x-publicAPI: "false"
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RundeckRequestUpdateInput'
        required: true
      responses:
        "400":
          description: An application status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "401":
          description: Unauthorized status error occurred. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage1'
        "500":
          description: Your operation can't be processed because an internal server
            error occurred.
        "204":
          description: Operation is successful.
      x-publicAPI: "false"
  /itim/cm/v2.0/system/tenant/{id}:
    delete:
      tags:
      - Certification Campaign configurations v2.0
      summary: Remove all campaign metadata of a specific tenant.
      description: Internal usage.
      operationId: deleteTenant
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      - name: x-forwarded-host
        in: header
        description: The tenant where request for deletion of all campaign metadata
          is submitted.
        required: true
        schema:
          type: string
        x-publicAPI: "false"
      responses:
        "400":
          description: Generic application error status. The error code and description
            are available in the payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Server error
        "204":
          description: Tenant Cleaned Up
      x-publicAPI: "false"
  /itim/cm/v2.0/campaigns/{id}/instances:
    get:
      tags:
      - Certification Campaign instances v2.0
      summary: Retrieves the list of a campaign instances associated with the specified
        campaign configuration from the specific tenant.
      description: "The API is used to retrieves the list of a campaign instances\
        \ associated with the specified campaign configuration from the specific tenant.<br/>The\
        \ owners of the application can access the list of campaign instances that\
        \ are created by them or includes at least one application owned by them.<br/>Unspecified\
        \ filter parameters are treated as having the default values.<br/>Every provided\
        \ parameter value is considered as an extra filter for the search criteria.<br/>Entitlements\
        \ required: manageAccessCertification [Manage Access Certification]."
      operationId: campaignInstanceFindByCampaignID
      parameters:
      - name: id
        in: path
        description: Campaign Configuration ID
        required: true
        schema:
          type: string
      - name: asSupervisor
        in: query
        description: Consider the calling user as a supervisor of the campaign when
          set to true.
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
      - name: assignmentSource
        in: query
        description: "Filter by which the campaigns were assigned to the calling user:\
          \ assigned, delegated."
        schema:
          default: assigned
          enum:
          - all
          - assigned
          - delegated
          type: string
      - name: filter
        in: query
        description: "The generic filter for returning campaign instances that contain\
          \ the passed string in one of the following attributes: name (Campaign instance\
          \ name)."
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the maximum number of resources that the search returns
          for a page.
        schema:
          default: "500"
          type: string
      - name: page
        in: query
        description: Page number.
        schema:
          default: "1"
          type: string
      - name: sort
        in: query
        description: "The attribute of the campaign instance that is used to sort\
          \ results. The possible values are: name, type, priority, status, timelaststart,\
          \ timeclosed, progress, lastpausedate, timeremaining.<br><br><br>When you\
          \ provide,<br><strong>name</strong>: The campaign instance name is used\
          \ for sorting.<br><strong>type</strong>: The campaign instance type is used\
          \ for sorting.<br><strong>priority</strong>: The campaign instance priority\
          \ is used for sorting.<br><strong>status</strong>: The campaign instance\
          \ status is used for sorting.<br><strong>timelaststart</strong>: The campaign\
          \ instance lastStartDate timestamp is used for sorting.<br><strong>timeclosed</strong>:\
          \ The campaign instance endDate timestamp is used for sorting.<br><strong>progress</strong>:\
          \ The campaign instance progress is used for sorting.<br><strong>lastpausedate</strong>:\
          \ The campaign instance lastPauseDate timestamp is used for sorting.<br><strong>timeremaining</strong>:\
          \ The campaign instance timeRemaining timestamp is used for sorting."
        required: false
        schema:
          type: string
      - name: sortDesc
        in: query
        description: Decides sort order.
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          type: boolean
      - name: state
        in: query
        description: "The filter for the campaign instance state: noinstance, aborted,\
          \ closed, completed, created, deleted, failed, paused, running, starting,\
          \ success, cancelled."
        schema:
          default: all
          enum:
          - all
          - noinstance
          - aborted
          - closed
          - completed
          - created
          - deleted
          - failed
          - paused
          - running
          - starting
          - success
          - cancelled
          type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignInstance'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
        "403":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-publicAPI: "true"
  /itim/cm/v2.0/campaigns/stats:
    get:
      tags:
      - Certification Campaign statistics v2.0
      summary: Retrieves the campaign configuration statistics from the specific tenant.
      description: "The API is used to retrieve the campaign configuration statistics\
        \ from the specific tenant.</br>The owners of the application can retrieve\
        \ the statistics of the campaign configurations that are created by them or\
        \ includes at least one application owned by them.</br>Entitlements required:\
        \ manageAccessCertification [Manage Access Certification]."
      operationId: campaignStats
      parameters:
      - name: filterType
        in: query
        description: "The filter type to apply: createdby, type, reviewer, state,\
          \ priority, application."
        schema:
          default: all
          enum:
          - createdby
          - type
          - reviewer
          - state
          - priority
          - application
          - all
          type: string
      - name: types
        in: query
        description: "The filter for the campaign configuration type: userassignment,\
          \ groupassignment, account, groupmembership.<br><br>Multiple values can\
          \ be selected."
        schema:
          enum:
          - userassignment
          - groupassignment
          - account
          - groupmembership
          type: array
          items:
            type: string
      - name: entitlements-jwt
        in: header
        description: Incoming JSON Web Token.
        required: true
        x-publicAPI: "true"
      - name: x-admin-invocation
        in: header
        description: "If the value is set to true, the API call is treated as an admin\
          \ API call."
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: boolean
        x-publicAPI: "true"
      - name: x-forwarded-host
        in: header
        description: The tenant from which a list of campaign configurations is retrieved.
        required: true
        schema:
          type: string
        x-publicAPI: "true"
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCampaignStats'
        "400":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Your request can't be processed. The error code and description
            are available in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Your request cannot be processed because an internal server
            error occurred.
      x-publicAPI: "true"
  /itim/arc/swagger:
    get:
      responses:
        "200":
          description: OK
  /itim/arc/v1.0/activities:
    post:
      tags:
      - Business Activity APIs
      summary: Create a Business Activity or Bulk Delete Business Activities
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity4'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users:
    get:
      tags:
      - ARC User APIs
      summary: Get Users for a provided entity
      parameters:
      - name: entityId
        in: query
        schema:
          type: string
      - name: entityType
        in: query
        description: Define the entity Type for which you want to get Users
        required: true
        schema:
          enum:
          - Business Activity
          - Mitigation
          - Risk
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/swagger.{type}:
    get:
      parameters:
      - name: type
        in: path
        required: true
        schema:
          pattern: json|yaml
          type: string
      responses:
        "200":
          description: OK
  /itim/arc/v1.0/users/{id}/risks/analysis:
    post:
      tags:
      - ARC User APIs
      summary: Executes the User Analysis for the provided User.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerUserRiskAnalysis'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/search:
    post:
      tags:
      - Risk APIs
      summary: Search for Risks based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: level
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Business Activity APIs
      summary: Delete the Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
    patch:
      tags:
      - Business Activity APIs
      summary: Update the Business Activity details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity5'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/entity/search:
    post:
      summary: Search for Entities based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: type
        in: query
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/search:
    post:
      tags:
      - Business Activity APIs
      summary: Search for Business Activities based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders:
    post:
      tags:
      - Activity Folder APIs
      summary: Create Activity Folder or Bulk Delete Activity Folders
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/{id}/children:
    get:
      tags:
      - Activity Folder APIs
      summary: Get the Activities in Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Activity Folder APIs
      summary: Updates the relation between Activity Folder and other Activities or
        Folders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/search:
    post:
      tags:
      - Mitigation APIs
      summary: Search for Mitigations based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/{id}/risks/preview:
    post:
      tags:
      - ARC User APIs
      summary: Check impact of adding Permissions to the User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: groupBy
        in: query
        description: Select grouping type
        schema:
          default: Permission
          enum:
          - Permission
          - Risk
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerUserRiskPreview'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks:
    post:
      tags:
      - Risk APIs
      summary: Create Risk or Bulk Delete Risks
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk3'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}/risks:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of Risks linked to a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}:
    get:
      tags:
      - Risk APIs
      summary: Get the Risk details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Risk APIs
      summary: Delete the Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
    patch:
      tags:
      - Risk APIs
      summary: Update the Risk details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations:
    post:
      tags:
      - Mitigation APIs
      summary: Create Mitigation or Bulk Delete Mitigations
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: X-HTTP-Method-Override
        in: header
        description: "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE"
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation'
      responses:
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/{userId}/risks/{riskId}/mitigations:
    post:
      tags:
      - ARC User APIs
      summary: Apply Mitigation to the Risk of a User
      parameters:
      - name: riskId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
        "207":
          description: Multi-Status
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/{id}:
    get:
      tags:
      - Activity Folder APIs
      summary: Get the details of Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Activity Folder APIs
      summary: Delete the Activity Folder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: removeChildren
        in: query
        schema:
          default: "false"
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Deleted
          content:
            application/json: {}
    patch:
      tags:
      - Activity Folder APIs
      summary: Update the Activity Folder details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity2'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/activityfolders/search:
    post:
      tags:
      - Activity Folder APIs
      summary: Search for Activity Folders based on the provided filters
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/users/risks/preview/bulk:
    post:
      tags:
      - ARC User APIs
      summary: Return the Analysis of User and added Access
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/V1SwaggerUserRiskPreviewBulk'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/{id}:
    get:
      tags:
      - Mitigation APIs
      summary: Get the Mitigation details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    delete:
      tags:
      - Mitigation APIs
      summary: Delete the Mitigation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: Deleted
          content:
            application/json: {}
    patch:
      tags:
      - Mitigation APIs
      summary: Update the Mitigation details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mitigation1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/stats:
    get:
      tags:
      - ARC Statistics APIs
      summary: Get the statistics of an entity
      parameters:
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: resourceType
        in: query
        description: Define the resource type to apply
        required: true
        schema:
          enum:
          - Business Activity
          - Mitigation
          - Risk
          - All
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}/mitigations:
    get:
      tags:
      - Risk APIs
      summary: Get the details of Mitigations linked to a Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Risk APIs
      summary: Risk and Mitigation relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk1'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/mitigations/{id}/risks:
    get:
      tags:
      - Mitigation APIs
      summary: Get the details of Risks linked to a Mitigation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /itim/arc/v1.0/risks/{id}/activities:
    get:
      tags:
      - Risk APIs
      summary: Get the details of Activities linked to a Risk
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Risk APIs
      summary: Risk and Activity relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Risk'
      responses:
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "204":
          description: No Content
          content:
            application/json: {}
  /itim/arc/v1.0/bulk:
    post:
      tags:
      - Bulk APIs
      summary: Perform bulk operations
      parameters:
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SwaggerBulkApi'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
        "207":
          description: Partial Execution
          content:
            application/json: {}
  /itim/arc/v1.0/activities/{id}/permissions:
    get:
      tags:
      - Business Activity APIs
      summary: Get the details of Permissions linked to a Business Activity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: page
        in: query
        schema:
          format: int32
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: sortDesc
        in: query
        schema:
          type: boolean
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Bad Request
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
    post:
      tags:
      - Business Activity APIs
      summary: Business Activity and Permission relation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: locale
        schema:
          type: string
      - name: x-admin-invocation
        in: header
        description: Is a admin call
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        description: Tenant
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity3'
      responses:
        "200":
          description: Success
          content:
            application/json: {}
        "400":
          description: Invalid Json
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
components:
  schemas:
    BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke:
      type: object
      properties:
        revoke:
          $ref: '#/components/schemas/UserEntitlementRevoke'
        grant:
          $ref: '#/components/schemas/UserEntitlementGrant'
    ModifyServiceRequestBeanSwagger:
      type: object
      properties:
        profileName:
          type: string
          example: manualService
        manualWorkOrderRequest:
          allOf:
          - $ref: '#/components/schemas/ManualWorkOrderRequestBean'
          - example:
              participant:
                type: ADMINISTRATOR
        _attributes:
          type: object
          example:
            erservicename: ManualService
            erconnectionmode: MANUAL
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    PersonModifyBeanSwagger:
      type: object
      properties:
        justification:
          type: string
          example: Department Change
        _attributes:
          type: object
          example:
            manager:
            - "erglobalid=328765385581670887,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
            title: Marketing Manager
    ViewResponseBean:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/v1.2/views/200218159
              title: Project Manager
        _attributes:
          type: object
          example:
            name: Project Manager
            description: creating Project Manager view
            id: "200218159"
            tasks:
              DV_SELF_SERVICE:
                subtasks:
                  CHANGE_PERSONAL_PROFILE: "no"
                  SELF_SERVICE-CHANGE_ACCOUNT_CATEGORY: "no"
                  CHANGE_PASSWORDS: "no"
                  SELF_SERVICE-VIEW_ACCESSES: "no"
                  VIEW_REQUESTS-VIEW_ALL_MY_REQUEST: "no"
                  MANAGE_MY_ACCOUNTS-REQUEST_ACCOUNT: "no"
                  SELF_SERVICE-CHANGE_ACCOUNT_PASSWORD: "no"
                  MANAGE_MY_ACCOUNTS-VIEW_ACCOUNT: "no"
                  VIEW_REQUESTS-VIEW_MY_ALL_REQUEST: "no"
                  VIEW_PERSONAL_PROFILE: "no"
                  SELF_SERVICE-REQUEST_ACCESS: "no"
                  MANAGE_MY_ACCOUNTS-REQUEST_ACCOUNT_ADVANCED: "no"
                  MANAGE_MY_ACCOUNTS-DELETE_ACCOUNT: "no"
                  DELEGATE_TODOS: "no"
                  SELF_SERVICE-DELETE_ACCESSES: "no"
                  MANAGE_MY_ACCOUNTS-CHANGE_ACCOUNT: "no"
                  VIEW_TODO_LIST: "no"
              DV_ADMIN_CONSOLE:
                subtasks:
                  DESIGN_WORKFLOWS:
                    subtasks:
                      DESIGN_WORKFLOWS-MANAGE_ACCESS_REQUEST_WORKFLOWS: "no"
                      DESIGN_WORKFLOWS-MANAGE_ACCOUNT_REQUEST_WORKFLOWS: "no"
                  MANAGE_TODO_LIST:
                    subtasks:
                      ADMIN_CONSOLE_VIEW_TODO_LIST: "no"
                      ADMIN_CONSOLE_DELEGATE_TODOS: "no"
                      VIEW_TODOS_BY_USER: "no"
                  MANAGE_ROLES: "no"
                  MANAGE_ORPHAN_ACCOUNTS:
                    subtasks:
                      MANAGE_ORPHAN_ACCOUNTS-DELETE_ORPHAN_ACCOUNT: "no"
                      MANAGE_ORPHAN_ACCOUNTS-SUSPEND_ORPHAN_ACCOUNT: "no"
                      MANAGE_ORPHAN_ACCOUNTS-ASSIGN_ORPHAN_ACCOUNT: "no"
                  CHANGE_OTHERS_PASSWORDS: "no"
                  MANAGE_ORGANIZATION_STRUCTURE: "no"
                  REPORTS:
                    subtasks:
                      REPORTS-USER-AND-ACCOUNTS: "no"
                      REPORTS-SERVICES: "no"
                      REPORTS-REQUESTS: "no"
                      REPORTS-AUDIT-AND-SECURITY: "no"
                      REPORTS-CUSTOM: "no"
                  MANAGE_SERVICES:
                    subtasks:
                      MANAGE_SERVICES-POLICY_ENFORCEMENT: "yes"
                      MANAGE_SERVICES-DELETE_ACCOUNT_FORM: "yes"
                      MANAGE_SERVICES-RECONCILE_NOW: "yes"
                      MANAGE_SERVICES-CREATE_SERVICE: "yes"
                      MANAGE_SERVICES-ACCOUNTS:
                        subtasks:
                          MANAGE_SERVICES-CHANGE_ACCOUNT: "yes"
                          MANAGE_SERVICES-SUSPEND_ACCOUNT: "yes"
                          MANAGE_SERVICES-DELETE_ACCOUNT: "yes"
                          MANAGE_SERVICES-ASSIGN_ACCOUNT: "yes"
                          MANAGE_SERVICES-RESTORE_ACCOUNT: "yes"
                          MANAGE_SERVICES-ORPHAN_ACCOUNT: "yes"
                          MANAGE_SERVICES_ACCOUNTS-CHANGE_PASSWORD: "yes"
                          MANAGE_SERVICES-REQUEST_ACCOUNT: "yes"
                      MANAGE_SERVICES-CUSTOMIZE_ACCOUNT_FORM: "yes"
                      MANAGE_SERVICES-MANAGE_ACCOUNT_DEFAULTS: "yes"
                      MANAGE_SERVICES-ENFORCE_POLICY: "yes"
                      MANAGE_SERVICES-EXPORT_ACCESS_DATA: "yes"
                      MANAGE_SERVICES-SETUP_RECON: "yes"
                      MANAGE_SERVICES-ACCOUNT_RECERTIFICATION_STATUS: "yes"
                      MANAGE_SERVICES-RETRY_PENDING: "yes"
                      MANAGE_SERVICES-MANAGE_GROUPS:
                        subtasks:
                          MANAGE_SERVICES-ACCESS_RECERTIFICATION_STATUS: "yes"
                          MANAGE_SERVICES-GROUP_MEMBERSHIP: "yes"
                          MANAGE_SERVICES-DEFINE_ACCESS: "yes"
                      MANAGE_SERVICES-CHANGE_SERVICE: "yes"
                      MANAGE_SERVICES-IMPORT_ACCESS_DATA: "yes"
                      MANAGE_SERVICES-DELETE_SERVICE: "yes"
                  MANAGE_POLICIES:
                    subtasks:
                      MANAGE_POLICIES-MANAGE_IDENTITY_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_ADOPTION_RULES: "no"
                      MANAGE_POLICIES-MANAGE_SOD_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_SERVICE_SELECTION_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_PASSWORD_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_PROVISIONING_POLICIES: "no"
                      MANAGE_POLICIES-MANAGE_RECERTIFICATION_POLICIES: "no"
                  SET_SYSTEM_SECURITY:
                    subtasks:
                      SET_SYSTEM_SECURITY-MANAGE_ACI: "no"
                  MANAGE_USERS:
                    subtasks:
                      MANAGE_PEOPLE-ACCOUNTS:
                        subtasks:
                          MANAGE_PEOPLE-CHANGE_ACCOUNT: "no"
                          MANAGE_PEOPLE-REQUEST_ACCOUNT: "yes"
                          MANAGE_PEOPLE-DELETE_ACCOUNT: "no"
                          MANAGE_PEOPLE-CHANGE_ACCOUNT_CATEGORY: "no"
                          MANAGE_PEOPLE-RESTORE_ACCOUNT: "no"
                          MANAGE_USERS_ACCOUNTS-CHANGE_PASSWORD: "no"
                          MANAGE_PEOPLE-SUSPEND_ACCOUNT: "no"
                      MANAGE_PEOPLE-RESTORE_PERSON: "no"
                      MANAGE_USERS-CHANGE_PASSWORDS: "no"
                      MANAGE_PEOPLE-DELETE_PERSON: "no"
                      MANAGE_PEOPLE-SUSPEND_PERSON: "no"
                      MANAGE_PEOPLE-CHANGE_PERSON: "yes"
                      MANAGE_USERS-TRANSFER_USER: "no"
                      MANAGE_PEOPLE-DELEGATE_ACTIVITIES_SYSTEMUSER: "no"
                      MANAGE_USERS-MANAGE_ACCESS:
                        subtasks:
                          MANAGE_USERS-REQUEST_ACCESS: "no"
                          MANAGE_USERS-DELETE_ACCESS: "yes"
                      MANAGE_PEOPLE-CREATE_PERSON: "yes"
                  VIEW_REQUESTS:
                    subtasks:
                      ADMIN_CONSOLE_VIEW_REQUESTS-VIEW_ALL_REQUEST: "no"
                      VIEW_REQUESTS-VIEW_ALL_OTHERS_REQUEST: "no"
                      VIEW_REQUESTS-VIEW_REQUEST_BY_SERVICE: "no"
                      VIEW_REQUESTS-VIEW_OTHERS_PENDING_REQUESTS: "no"
                      VIEW_REQUESTS-VIEW_ALL_PENDING_REQUESTS_BY_SERVICE: "no"
                  SET_SYSTEM_SECURITY-MANAGE_GROUPS: "no"
              DV_SERVICE_CENTER:
                subtasks:
                  SVCENTER_MANAGE_MY_PROFILE:
                    subtasks:
                      SVCENTER_VIEW_PROFILE_FOR_MYSELF: "yes"
                      SVCENTER_MODIFY_PROFILE_FOR_MYSELF: "yes"
                  SVCENTER_MANAGE_OTHERS_PROFILE:
                    subtasks:
                      SVCENTER_VIEW_PROFILE: "yes"
                      SVCENTER_MODIFY_PROFILE: "yes"
                  SVCENTER_CHANGE_PASSWORD_FOR_MYSELF: "yes"
                  SVCENTER_CHANGE_ACCESS_PASSWORD_FOR_MYSELF: "yes"
                  SVCENTER_MANAGE_OTHERS_ACCESS:
                    subtasks:
                      SVCENTER_MODIFY_ACCESS: "yes"
                      SVCENTER_VIEW_ACCESS: "yes"
                      SVCENTER_REQUEST_ACCESS: "yes"
                  SVCENTER_MANAGE_MY_ACTIVITY:
                    subtasks:
                      SVCENTER_DELEGATION_SCHEDULE: "yes"
                      SVCENTER_VIEW_TODO_LIST: "yes"
                  SVCENTER_CHANGE_ACCESS_PASSWORD: "yes"
                  SVCENTER_CHANGE_PASSWORD: "yes"
                  SVCENTER_VIEW_REQUEST_STATUS: "yes"
                  SVCENTER_MANAGE_MY_ACCESS:
                    subtasks:
                      SVCENTER_VIEW_ACCESS_FOR_MYSELF: "yes"
                      SVCENTER_REQUEST_ACCESS_FOR_MYSELF: "yes"
                      SVCENTER_MODIFY_ACCESS_FOR_MYSELF: "yes"
    Access:
      enum:
      - DENY
      - GRANT
      - INVALID
      - NONE
      type: string
    AccountUpdateBeanSwagger:
      type: object
      properties:
        requestee:
          allOf:
          - $ref: '#/components/schemas/HALLink'
          - example:
              href: /itim/rest/people/ZXJnbG9iYWxpZD03MjQyNDYxMTI1MTM0MTE0ODM5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - attribute: erPassword
              value: secret
            - property: itimPassword
              value: secret
    RoleBean:
      type: object
      properties:
        entityRef:
          type: string
    CreateAccessBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            badges:
            - style: blue
              designation: approle
            additionalInformation: Access created for the ApplicationRole
            accessName: ApplicationRole
            entityType: 3
            accessCategory: Application
            description: ApplicationRole Access
            isCommon: true
            entityRef: 410a7b56-37c8-4b1d-9ca7-e96680d8a7eb
            tags:
            - tag1
            - tag2
    ServiceRequestBeanSwagger:
      type: object
      properties:
        profileName:
          type: string
          example: manualService
        defaultProvisioningPolicyRequest:
          allOf:
          - $ref: '#/components/schemas/ProvisioningPolicyRequestBean'
          - example:
              enabled: "true"
              provisioningMode: Manual
        manualWorkOrderRequest:
          allOf:
          - $ref: '#/components/schemas/ManualWorkOrderRequestBean'
          - example:
              profileName: manualService
              defaultProvisioningPolicyRequest:
                enabled: "true"
                provisioningMode: Manual
              manualWorkOrderRequest:
                defaultNotification: "true"
                escalationPeriod: "10"
                escalationParticipant:
                  id: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNSxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20
                  type: GROUP
                participant:
                  id: ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                  type: USER
              _attributes:
                erservicename: ManualService
                erconnectionmode: MANUAL
              orgID: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
        _attributes:
          type: object
          example:
            erservicename: ManualService
            erconnectionmode: MANUAL
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    RecertifyWorkItemSwagger:
      type: object
      properties:
        userComment:
          type: string
          example: ""
        userRecertificationData:
          type: object
          example:
            accountsToCertify:
            - ownershipType: Individual
              decision: true
              name: vm on linux service
              description: ""
              dependentRecertificationTodoTargets:
              - ownershipType: ""
                decision: false
                name: apache access
                description: Apache access to xyz application
                dependentRecertificationTodoTargets: []
                dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
              dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
            - ownershipType: Individual
              decision: false
              name: vm on aix service
              description: ""
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
            rolesToCertify:
            - ownershipType: ""
              decision: false
              name: Developers
              description: Developers in Costa Mesa location
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
            - ownershipType: ""
              decision: true
              name: Managers
              description: Managers in Costa Mesa location
              dependentRecertificationTodoTargets: []
              dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
        justification:
          type: string
          example: The user requires the role and accesses to do the job
    WorkItemUpdateBeanSwagger:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/WorkItemActionBean'
          - example:
              code: RS
        justification:
          type: string
          example: Provided requested information
        label:
          type: string
          example: RFIAccountAdd
        rfiAttributeValues:
          type: object
          example:
          - name: cn
            value:
            - Marco Lounton
          - name: erntlocalgroups
            value:
            - Backup Operators
            - ConfigMgr Remote Control Users
        additionalData:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalData'
          example:
          - value:
              mitigationIds:
              - 46474dda-c61f-4c28-aec8-45ec92efe682
            key: RISK_MITIGATION
    CreatePersonRequestBean:
      type: object
      properties:
        profileName:
          type: string
          example: Person
        scheduledTime:
          type: string
          example: 01/01/2017 12:30
        justification:
          type: string
        _attributes:
          type: object
          example:
            sn: Doe
            cn: john
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    SelfRegisterPersonRequestBean:
      type: object
      properties:
        profileName:
          type: string
          example: Person
        tenantID:
          type: string
          example: org
        justification:
          type: string
        _attributes:
          type: object
    WorkItemBatchUpdateBeanSwagger:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/workitems/2461578322863485336
        action:
          allOf:
          - $ref: '#/components/schemas/WorkItemActionBean'
          - example:
              code: AR
        justification:
          type: string
          example: Rejecting request due to policy violations
        label:
          type: string
          example: Manager Approval
    ChangePasswordSwaggerBean:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - property: oldPassword
              value: myoldpassword
            - attribute: erPassword
              value: mypassword
    ACIScope:
      enum:
      - INVALID
      - SINGLE
      - SUBTREE
      type: string
    PersonSuspendRestoreBeanSwagger:
      type: object
      properties:
        justification:
          type: string
          example: The person is on a long leave
    LabelBean:
      type: object
      properties:
        text:
          type: string
        inserts:
          type: array
          items:
            type: object
        key:
          type: string
    RetrievePasswordSwagger:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
    ValidatePasswordSwaggerBean:
      type: object
      properties:
        _forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
          example:
          - _inputs:
            - attribute: erPassword
              value: mypassword
    Permissions:
      type: object
      properties:
        class-rights:
          type: object
          example:
            modify: GRANT
            search: GRANT
        attribute-rights:
          type: object
          example:
            givenname:
              read: GRANT
              write: NONE
            cn:
              read: GRANT
              write: NONE
    Membership:
      type: object
      properties:
        values:
          type: array
          items:
            format: uuid
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - example: SYSTEM_ROLE
    AdditionalData:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/IAdditionalDataValue'
          - example: RISK_MITIGATION
        key:
          type: string
    EnforcePolicyRequestBeanSwagger:
      type: object
      properties:
        scheduledTime:
          type: string
          example: 01/01/2017 12:30
    DesignFormBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            formTemplate:
              tabbedForm:
                tab:
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      maxlength: "128"
                      name: data.sn
                      type: text
                    name: data.sn
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    - parameter: "128"
                      type: MAX_LENGTH
                    label: $sn
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.cn
                      type: text
                    name: data.cn
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    label: $cn
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.uid
                      type: text
                    name: data.uid
                    constraint:
                    - parameter: "true"
                      type: REQUIRED
                    label: $uid
                    required: "true"
                    direction: inherit
                  - input:
                      size: "50"
                      maxlength: "128"
                      name: data.givenname
                      type: text
                    name: data.givenname
                    constraint:
                    - parameter: "128"
                      type: MAX_LENGTH
                    label: $givenname
                    direction: inherit
                  - input:
                      size: "50"
                      maxlength: "20"
                      name: data.initials
                      type: text
                    name: data.initials
                    constraint:
                    - parameter: "20"
                      type: MAX_LENGTH
                    label: $initials
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.homepostaladdress
                      type: text
                    name: data.homepostaladdress
                    label: $homepostaladdress
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.sharedsecret
                      type: text
                    name: data.ersharedsecret
                    label: $ersharedsecret
                    direction: inherit
                  - name: data.erroles
                    searchMatch:
                      orgSubTreeSearch: "true"
                      multiple: "true"
                      _class: DefaultRole
                      comboItem:
                        size: "4"
                        name: data.erroles
                        label: $erroles
                      category: Role
                      type: select
                    label: $erroles
                    direction: inherit
                  - input:
                      size: ""
                      name: data.erlocale
                      type: text
                      value: ""
                    helpText: ""
                    hintText: ""
                    isHiddenOnModify: ""
                    name: data.erlocale
                    isReadOnlyOnModify: ""
                    label: $erlocale
                    required: ""
                    direction: inherit
                  index: "0"
                  title: $personal
                  selected: "true"
                  url: "javascript:switchTabs(document.forms['body'],0);"
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      name: data.roomnumber
                      type: text
                    name: data.roomnumber
                    label: $roomnumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.employeenumber
                      type: text
                    name: data.employeenumber
                    label: $employeenumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.title
                      type: text
                    name: data.title
                    label: $title
                    direction: inherit
                  - name: data.manager
                    searchControl:
                      orgSubTreeSearch: "true"
                      comboItem:
                        name: data.manager
                        label: $manager
                      category: Person
                      type: input
                    label: $manager
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.postaladdress
                      type: text
                    name: data.postaladdress
                    label: $postaladdress
                    direction: inherit
                  - name: data.secretary
                    searchControl:
                      orgSubTreeSearch: "true"
                      comboItem:
                        name: data.secretary
                        label: $secretary
                      category: Person
                      type: input
                    label: $secretary
                    direction: inherit
                  index: "1"
                  title: $corporate
                  selected: "false"
                  url: "javascript:switchTabs(document.forms['body'],1);"
                - image: ' '
                  formElement:
                  - input:
                      size: "50"
                      name: data.mail
                      type: text
                    name: data.mail
                    constraint:
                    - parameter: "true"
                      type: EMAIL
                    label: $mail
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.telephonenumber
                      type: text
                    name: data.telephonenumber
                    label: $telephonenumber
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.mobile
                      type: text
                    name: data.mobile
                    label: $mobile
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.pager
                      type: text
                    name: data.pager
                    label: $pager
                    direction: inherit
                  - input:
                      size: "50"
                      name: data.homephone
                      type: text
                    name: data.homephone
                    label: $homephone
                    direction: inherit
                  - name: data.eraliases
                    label: $eraliases
                    editableTextList:
                      comboItem:
                        size: "4"
                        name: data.eraliases
                        label: $eraliases
                    direction: inherit
                  index: "2"
                  title: $communications
                  selected: "false"
                  url: "javascript:switchTabs(document.forms['body'],2);"
            ercustomclass: inetOrgPerson
            erformname: inetOrgPerson
    ModifyIdentityPolicyBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            erenabled: "true"
    PermissionValue:
      type: object
      properties:
        read:
          $ref: '#/components/schemas/Access'
        write:
          $ref: '#/components/schemas/Access'
    UserRecertificationDetailsBean:
      type: object
      properties:
        accountsToCertify:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
          example:
          - ownershipType: Individual
            decision: true
            name: vm on linux service
            description: ""
            dependentRecertificationTodoTargets:
            - ownershipType: ""
              decision: false
              name: apache access
              description: Apache access to xyz application
              dependentRecertificationTodoTargets: []
              dn: "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
            dn: "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
          - ownershipType: Individual
            decision: false
            name: vm on aix service
            description: ""
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
        comment:
          type: string
          example: string
        justification:
          type: string
          example: string
        rolesToCertify:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
          example:
          - ownershipType: ""
            decision: false
            name: Developers
            description: Developers in Costa Mesa location
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
          - ownershipType: ""
            decision: true
            name: Managers
            description: Managers in Costa Mesa location
            dependentRecertificationTodoTargets: []
            dn: "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
    WorkItemActionBean:
      type: object
      properties:
        code:
          type: string
        inProgressLabel:
          $ref: '#/components/schemas/LabelBean'
        label:
          $ref: '#/components/schemas/LabelBean'
    CreateIdentityPolicyRequestBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            eruserclass: Person
            erenabled: "true"
            erscope: "2"
            erkeywords: Person
            description: abc-desc
            erjavascript: <Javascript code here>
            erpolicytarget: "1;erglobalid=6995527626792419564,ou=services,erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
            erpolicyitemname: Identity-Policy
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwghMDAwMCxvdT1vcmcsZGM9RGl2eWE
    ChallengeResponseBean:
      type: object
      properties:
        response:
          type: string
        challenge:
          type: string
    AccessAssignCheckComplianceRequestBeanSwagger:
      type: object
      properties:
        newAccount:
          allOf:
          - $ref: '#/components/schemas/ExtendedHALBean'
          - example:
              _links:
                requestee:
                  href: /itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0MzA0Njg5MTAzLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
                service:
                  href: /itim/rest/services/ZXJnbG9iYWxpZD03NjQxMTc2MjkxOTU5MDI1OTU0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
              _forms:
              - _inputs:
                - attribute: eruid
                  value: userid
                - attribute: erposixgecos
                  value:
                  - aValue
    RecertificationTodoTarget:
      type: object
      properties:
        ownershipType:
          type: string
        decision:
          type: boolean
        name:
          type: string
        description:
          type: string
        dependentRecertificationTodoTargets:
          type: array
          items:
            $ref: '#/components/schemas/RecertificationTodoTarget'
        readOnly:
          type: boolean
        dN:
          type: string
    ACIResponseBean:
      type: object
      properties:
        _links:
          type: object
          example:
            self:
              href: /itim/rest/v1.2/acis/e2ad43d0-dcfd-49ab-8f37-704a6c2fb877
              title: Some name update
            erparent:
              href: /itim/rest/v1.2/organizationcontainers/organizations/3de5e18a-c918-4af3-90f7-7e72ff1fba29
        _attributes:
          $ref: '#/components/schemas/ACIAttributes'
        orgId:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    EntityBean:
      type: object
      properties:
        _attributes:
          type: object
    ExtendedHALBean:
      type: object
      properties:
        _attributes:
          type: object
    ForgotPasswordSubmitResponseBeanSwagger:
      type: object
      properties:
        password:
          type: string
          example: itimPassword
        challengeResponses:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeResponseBean'
          example:
          - response: IBM
            challenge: What is the name of your first company?
          - response: Red
            challenge: What is your favorite color?
          - response: "4"
            challenge: How many siblings does your father have?
    ViewRequestBean:
      type: object
      properties:
        _attributes:
          type: object
          example:
            name: ProjectManager
            description: View for Project Manager
            tasks:
              DV_ADMIN_CONSOLE:
                subtasks:
                  MANAGE_SERVICES:
                    viewAllSubtasks: "yes"
                  MANAGE_USERS:
                    subtasks:
                      MANAGE_PEOPLE-ACCOUNTS:
                        subtasks:
                          MANAGE_PEOPLE-REQUEST_ACCOUNT: "yes"
                          MANAGE_PEOPLE-DELETE_ACCOUNT: "no"
                        viewAllSubtasks: "no"
                      MANAGE_PEOPLE-CHANGE_PERSON: "yes"
                      MANAGE_USERS-MANAGE_ACCESS:
                        subtasks:
                          RECERTIFY_USER: "yes"
                          MANAGE_USERS-REQUEST_ACCESS: "yes"
                          MANAGE_USERS-DELETE_ACCESS: "no"
                        viewAllSubtasks: "no"
                      MANAGE_PEOPLE-CREATE_PERSON: "yes"
                    viewAllSubtasks: "no"
                viewAllSubtasks: "no"
              DV_SERVICE_CENTER:
                viewAllSubtasks: "yes"
    BulkAssignementAttributeValueGrant:
      type: object
      properties:
        entitlement:
          type: string
          example: <entitlementcode>
        assignmentAttributes:
          type: object
          example:
            <entitlementcode>:
              attr4:
              - val4
              attr3:
              - val3
        users:
          type: array
          items:
            type: string
          example:
          - <user1-id>
          - <user2-id>
    DelegateRequestBean:
      type: object
      properties:
        delegate:
          allOf:
          - $ref: '#/components/schemas/EntityBean'
          - example:
              _links:
                self:
                  href: /itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t
        endDate:
          type: string
          example: "1432603800000"
        startDate:
          type: string
          example: "1432603800000"
    UserEntitlementGrant:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserToEntitlementGrant'
    Form:
      type: object
      properties:
        _inputs:
          type: array
          items:
            $ref: '#/components/schemas/FormInput'
    ACIRequestBean:
      required:
      - _attributes
      type: object
      properties:
        _attributes:
          $ref: '#/components/schemas/ACIAttributes'
        orgId:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    ChallengeRequestUserBean:
      type: object
      properties:
        userId:
          type: string
    UserToEntitlementGrant:
      type: object
      properties:
        rights:
          uniqueItems: true
          type: array
          items:
            type: string
          example: []
        assignmentAttributes:
          type: object
          example:
            ent2:
              attr1:
              - val1
              attr3:
              - val3
            ent1:
              attr2:
              - val2
              attr1:
              - val1
        user:
          type: string
          example: ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ
        group:
          type: string
          example: ""
    ManualWorkOrderRequestBean:
      type: object
      properties:
        defaultNotification:
          type: boolean
        escalationPeriod:
          format: int64
          type: integer
        escalationParticipant:
          $ref: '#/components/schemas/ParticipantBean'
        _attributes:
          type: object
        participant:
          $ref: '#/components/schemas/ParticipantBean'
    ParticipantBean:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        _attributes:
          type: object
    FormInput:
      type: object
      properties:
        attribute:
          type: string
          example: sharedSecret
        value:
          type: object
          example: sharedSecret
    AccessAssignmentSingleRequestBean:
      type: object
      properties:
        justification:
          type: string
          example: Deleting the access assignment due to change of role
    ModifyAccessBean:
      type: object
      properties:
        enableAccess:
          type: boolean
          example: false
        _attributes:
          type: object
          example:
            entityType: 3
    SearchAssignmentRequestBeanSwagger:
      type: object
      properties:
        rightsFilter:
          type: string
          example: name eq "Elite Plumbing" AND city eq "New York"
        entitlement:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          example: f2d2a97e-e4fa-42c4-8222-ebc7487053f3
    ModifyPasswordPolicyRequestBeanSwagger:
      type: object
      properties:
        policyTargets:
          type: array
          items:
            type: object
          example:
          - constant: SPECIFIC_SERVICE
            service: ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
        rules:
          type: object
          example:
            minLength: "1"
            maxLength: "10"
        _attributes:
          type: object
          example:
            erenabled: "false"
            erscope: "2"
    ModifySystemRoleRequestSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            description: Role with administrative privileges
            ersystemrolecategory: 1
    MessageBean:
      type: object
      properties:
        severity:
          type: string
        text:
          type: string
        id:
          type: string
        inserts:
          type: array
          items:
            type: object
        key:
          type: string
        supportingData:
          type: object
    ProvisioningPolicyRequestBean:
      type: object
      properties:
        _attributes:
          type: object
        enabled:
          type: boolean
        provisioningMode:
          type: string
    ACIAttributes:
      type: object
      properties:
        filter:
          type: string
          example: (&(!(erObjectType=1))(!(eruid=root))(!(eruid=administrator)))
        permissions:
          $ref: '#/components/schemas/Permissions'
        scope:
          allOf:
          - $ref: '#/components/schemas/ACIScope'
          - example: SUBTREE
        name:
          type: string
          example: IVIG account policy
        id:
          format: uuid
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        target:
          type: string
          example: erAccountItem
    CreateLifecycleRuleRequestBeanSwagger:
      type: object
      properties:
        typeInfo:
          type: string
          example: Account
        ruleType:
          type: string
          example: CATEGORY_TYPE
        schedules:
          type: array
          items:
            type: object
          example:
          - dayOfWeek: 0
            hour: 12
            month: 0
            dayOfMonth: -1
            minute: 0
        _attributes:
          type: object
          example:
            OperationName: suspend
            Filter: (cn=*)
            name: Suspend Dormant Account LCR
            description: LCR to suspend dormant accounts
    MultipartBodyBean:
      required:
      - file
      type: object
      properties:
        file:
          format: binary
          description: file data
          type: string
    PasswordSubmitResponseBeanSwagger:
      type: object
      properties:
        challengeResponses:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeResponseBean'
          example:
          - response: IBM
            challenge: What is the name of your first company?
          - response: Red
            challenge: What is your favorite color?
          - response: "4"
            challenge: How many siblings does your father have?
    CreatePasswordPolicyRequestBeanSwagger:
      type: object
      properties:
        policyTargets:
          type: array
          items:
            type: object
          example:
          - constant: SPECIFIC_SERVICE
            service: ZXJnbG9iYWxpZD02NTgxNDM4MDU4NjI3Njg3NjI1LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
          - constant: SERVICE_TYPE
            service: WinLocalProfile
        rules:
          type: object
          example:
            customRules:
              examples.passwordrules.RegularExpressionRule: "true"
            minAlphabeticCharacters: "3"
            minLength: "5"
            maxLength: "13"
        _attributes:
          type: object
          example:
            erenabled: "true"
            erscope: "1"
            erkeywords: Policy new
            description: test new
            erpolicyitemname: REST password-Policy new
        orgID:
          type: string
          example: ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t
    Type:
      enum:
      - ACCESSOWNER
      - ADMINISTRATOR
      - ALL
      - INVALID
      - OWNER
      - ROLEOWNER
      - SELF
      - SERVICEOWNER
      - SERVICE_ACCESSOWNER
      - SPONSOR
      - SUPERVISOR
      - SYSTEM_ROLE
      type: string
    CreateSystemRoleRequestBeanSwagger:
      required:
      - erparent
      type: object
      properties:
        _attributes:
          type: object
          example:
            errolename: AdminRole
            description: Role with administrative privileges
            ersystemrolecategory: 1
            uuid: 123e4567-e89b-12d3-a456-426614174000
        erparent:
          description: UUID of the organization that the system role belongs to
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
    HALLink:
      type: object
      properties:
        hreflang:
          type: string
        templated:
          type: boolean
        profile:
          format: uri
          type: string
        name:
          type: string
        href:
          format: uri
          type: string
        title:
          type: string
        type:
          type: string
    RoleAccessRequestBean:
      type: object
      properties:
        enableAccess:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleBean'
        accessCategory:
          type: string
        commonAccess:
          type: boolean
    IAdditionalDataValue:
      type: object
    UserEntitlementRevoke:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserToEntitlementRevoke'
    ModifyLifecycleRuleRequestBeanSwagger:
      type: object
      properties:
        _attributes:
          type: object
          example:
            name: Suspend Unused Account LCR
    UserToEntitlementRevoke:
      type: object
      properties:
        assignmentOrigin:
          type: string
          example: ""
        assignmentAttributes:
          type: object
          example:
            ent2:
              attr1:
              - val1
              attr3:
              - val3
            ent1:
              attr2:
              - val2
              attr1:
              - val1
        user:
          type: string
          example: ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ
        group:
          type: string
          example: ""
    PersonDeleteResponseBean:
      type: object
      properties:
        requestId:
          type: string
        status:
          format: int32
          type: integer
    ReminderAction:
      description: The action to be taken after a while to send periodic reminders
        to reviewers for unreviewed assignments
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReminderActionType'
        reminderInterval:
          format: int64
          type: integer
    Account:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/UserGroup'
        ownershipType:
          type: string
        deletionDate:
          format: date
          type: string
        name:
          type: string
          readOnly: true
        id:
          type: string
        finerStatus:
          type: string
        status:
          type: string
    CampaignConfigurationLaunchOutput:
      description: Representation of a campaign configuration launch result object
        for the resposne
      type: object
      properties:
        _campaignId:
          description: _campaignId
          type: string
    Entity:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        id:
          type: string
    BulkOperationCampaign:
      description: Representation of a bulk operation on campaign configurations.
      required:
      - op
      - path
      type: object
      properties:
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        value:
          $ref: '#/components/schemas/CampaignConfiguration'
    ListResponse:
      description: Object used to return a list of objects
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            type: object
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    BulkResult1:
      description: Representation of a generic response of a Bulk REST API
      required:
      - op
      - path
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        error:
          type: string
        value:
          type: object
    UserGroupV1:
      description: Represents a user group
      type: object
      properties:
        formatted:
          type: string
          readOnly: true
        givenName:
          type: string
          readOnly: true
        familyName:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
          readOnly: true
        realm:
          type: string
          readOnly: true
        userType:
          type: string
          readOnly: true
        id:
          type: string
        email:
          type: string
          readOnly: true
    TenantLimitsOutput:
      description: Representation of a limit in creating a new campaign for a tenant
      type: object
      properties:
        current_active_campaign_instances:
          format: int32
          description: Number of current active campaign instances
          type: integer
        current_total_campaign_assignments_in_db:
          format: int64
          description: Current total campaign assignments in db
          type: integer
        current_active_campaign_assignments:
          format: int64
          description: Number of current active campaign assignments
          type: integer
        max_active_campaign_assignments:
          format: int64
          description: Maximum number of active campaign assignments
          type: integer
        max_total_campaign_assignments_in_db:
          format: int64
          description: Total campaign assignments in db
          type: integer
        max_active_campaign_instances:
          format: int32
          description: Maximum number of active campaign instances
          type: integer
    JsonNode:
      type: array
    RundeckRequestUpdateInput:
      description: Object used to run rundeck jobs for updating requests.
      required:
      - userName
      - password
      type: object
      properties:
        password:
          description: Password
          type: string
        userName:
          description: User Name
          type: string
    UserGroup:
      description: Represents a user group
      type: object
      properties:
        formatted:
          type: string
          readOnly: true
        givenName:
          type: string
          readOnly: true
        familyName:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        realm:
          type: string
          readOnly: true
        id:
          type: string
        userType:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
    Assignment:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        assigner:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: User who assigned the entitlement.
        extRef:
          description: Entitlement external ref. Valid only if type is ENTITLEMENT
          type: string
        subType:
          description: The entitlement type (ROLE or PERMISSION)
          type: string
        rightsRef:
          description: Entitlement rights ref. Valid only if type is ENTITLEMENT
          type: string
        id:
          type: string
        assignee:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: The user to which the entitlement has been assigned.
        type:
          description: "The subject type: possible values are ENTITLEMENT."
          type: string
        creationDate:
          format: date
          description: Date when assignment has been created
          type: string
    ErrorMessageForBulkOp:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkOperationResult1'
    EventOutput:
      description: Object used to represent an event in the assignment
      required:
      - type
      - changedAttributes
      type: object
      properties:
        type:
          description: type
          type: string
        changedAttributes:
          description: changedAttributes
          type: array
          items:
            $ref: '#/components/schemas/AttributeChangesOutput'
    ReviewerOperation:
      enum:
      - all
      - approved
      - escalated
      - noMoreOnTarget
      - none
      - redirected
      - rejected
      - unmanage
      type: string
    SubjectAdditionalData1:
      type: object
      properties:
        accountName:
          description: Account name on the respective entitlement.
          type: string
        name:
          description: The entitlement name when the subject is an entitlement or
            the account name when subject is an account.
          type: string
        assigner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: User who assigned the entitlement.
        extRef:
          description: Entitlement external ref. Valid only if type is ENTITLEMENT
          type: string
        subType:
          description: "The entitlement type (ROLE or PERMISSION) when the subject\
            \ is an entitlement or the account status (MATCHED, UNMATCHED, NON-COMPLIANT,\
            \ COMPLIANT) when the subject is an account."
          type: string
        rightsRef:
          description: Entitlement rights ref. Valid only if type is ENTITLEMENT
          type: string
        extId:
          description: The subject identifier.
          type: string
        type:
          description: "The subject type: possible values are ENTITLEMENT or ACCOUNT."
          type: string
        creationDate:
          format: date
          description: Date when assignment has been created
          type: string
        accountOwnershipType:
          description: Account ownership type of the respective account.
          type: string
    ErrorMessageForBulk:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkResult1'
    CampaignConfigurationInput:
      description: Object used to create a new campaign configuration
      required:
      - owner
      - type
      - priority
      - name
      - applications
      - launchDate
      - duration
      type: object
      properties:
        preview:
          description: "A flag for a preview campaign, not opened to reviewers"
          type: boolean
        _rev:
          description: _rev
          type: string
        description:
          description: Campaign description
          type: string
        nextRunDate:
          description: Forecasted Run date for the next campaign instance.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy.
        launchDate:
          description: Date when the first instance of the campaign starts
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - epoch
          type: string
        automaticRefreshContinuousCampaign:
          description: "A flag, valid for continuous campaigns only, saying that campaign\
            \ should refresh the existing filter for building dataset"
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign type
            enum:
            - userassignment
            - groupassignment
            - account
        frequency:
          description: A UNIX or Linux Cron-compatible string that defines the start
            of subsequent instances
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The The duration (in milliseconds) for which each campaign
            instance remains open
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        id:
          description: Campaign configuration id
          type: string
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        blocklist:
          description: List of users or groups denied for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - description: List of entitlements for inclusion/exclusion or filter for
              entitlements allowed for the certification
        rev:
          description: Campaign configuration rev
          type: string
          readOnly: true
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/V1CampaignFrequency'
          - description: Frequency unit days or months
        runNow:
          description: A flag to start that the campaign immediately
          type: boolean
        blacklist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign priority
            enum:
            - high
            - medium
            - low
        creationDate:
          description: The creation date of the campaign configuration.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        name:
          description: Campaign name
          type: string
        reviewerOverwritten:
          type: boolean
        _id:
          description: _id
          type: string
        applications:
          description: List of applications the campaign the campaign certifies
          type: array
          items:
            $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    AssignmentAction:
      description: Object used to create or replace an assignment.
      required:
      - id
      type: object
      properties:
        id:
          description: Assignment Id
          type: string
        applicationId:
          description: Application identifier
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
    ListResponseCampaignStatsOutput:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignStatsOutput'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    OperationAndValue:
      description: Rest representation for Operation and Value.
      required:
      - op
      - v1
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: eq
        v1:
          description: Value
          type: string
          example: Security
    CampaignAssignment:
      description: Representation of a campaign assignment for REST APIs.
      type: object
      properties:
        The campaign subject additional data.:
          $ref: '#/components/schemas/SubjectAdditionalData'
        fulfilled:
          type: boolean
        Id of the parent campaign configuration.:
          type: string
        The date representing when the assignment was first imported inside certification manager.:
          format: date
          type: string
        Owning tenant id:
          type: string
        The reviewer of the assignment.:
          $ref: '#/components/schemas/UserGroup'
        The group through which the assignee is granted access to the entitlement (visibility).:
          $ref: '#/components/schemas/UserGroup'
        The date representing when the last operation was performed.:
          format: date
          type: string
        The owner of the assignment.:
          $ref: '#/components/schemas/UserGroup'
        Last operation, if any, executed by the reviewer during the campaign.:
          $ref: '#/components/schemas/ReviewerOperation'
        Id of the parent campaign instance.:
          type: string
        The application associated to the assignment.:
          $ref: '#/components/schemas/Application'
        If the value associated to the last operation was set internally and automatically by the microservice:
          type: boolean
        If true, the assignment is removed from target and hence disabled.:
          type: boolean
        entitlement:
          $ref: '#/components/schemas/Entitlement1'
        'The assignment id coming from the external system to certify (that is AuthZ). ':
          type: string
        lastOperationAutomatic:
          type: boolean
        Justification text for the last operation in case of rejections and redirections.:
          type: string
        doImmediateFulfillment:
          type: boolean
        The rights associated to the assignment.:
          type: array
          items:
            type: string
        A string containing the error raised by the backend in case of a bulk assignment update.:
          type: string
        Id:
          type: string
        If true the assignment operation has been fulfilled:
          type: boolean
        The list of delegators assigned the duties for a given campaign instance.:
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        account:
          $ref: '#/components/schemas/Account'
    AllowBlockListInputOutput:
      description: Object used to represent an allowlist and blocklist.
      type: object
      properties:
        formatted:
          description: "The full name of the user that includes  user name, middle\
            \ name, and suffix, that are formatted for display."
          type: string
          readOnly: true
        givenName:
          description: "The given name of the user, or first name in most Western\
            \ languages. For example, Barbara is the given name from the full name\
            \ Ms. Barbara J Jensen, PhD."
          type: string
          readOnly: true
        description:
          description: Description of group
          type: string
          readOnly: true
        type:
          type: string
        accountStatus:
          description: To filter the account status.
          enum:
          - compliant
          - unmatched
          - non_compliant
          type: string
        parentName:
          type: string
        familyName:
          description: "The family name of the user, or the last name in most Western\
            \ languages. For example, Jensen is the family name from the full name\
            \ Ms. Barbara J Jensen, PhD."
          type: string
          readOnly: true
        name:
          description: The userName or groupName of the user or group.
          type: string
          readOnly: true
        realm:
          description: The realm to which the user belongs. It is always "cloudIdentityRealm"
            for regular users. Maximum length is 240 characters.
          type: string
          readOnly: true
        aGroup:
          description: Specifies if the filter refers to a group. The values are true
            or false.
          type: boolean
        id:
          description: The user identifier of the user to be filtered.
          type: string
        userType:
          description: "The type of the user. For example, regular, federated."
          type: string
          readOnly: true
        email:
          description: The email address of the user.
          type: string
          readOnly: true
        accountOwnershipType:
          description: Account ownership type.
          type: string
    UserOrAccountAllowBlockList:
      description: Rest representation for an userList or user condition set filter.
      type: object
      properties:
        businessUnitExclusionList:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userConditionSet:
          description: "The conditionSet set to build the user filter. Example for\
            \ userConditionSet : [{\"work_locality\":[{\"op\":\"sw\",\"vl\":\"J\"\
            },{\"op\":\"ew\",\"vl\":\"a\"}],\"department\":[{\"op\":\"eq\",\"vl\"\
            :\"Security\"}]}]"
          type: array
          items:
            type: object
        businessUnitInclusionList:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userExclusionList:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        userInclusionList:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
    Application:
      description: The list of Applications certified by the campaign.
      type: object
      properties:
        name:
          type: string
          readOnly: true
        icon:
          description: application icon
          type: string
          readOnly: true
        description:
          description: application description
          type: string
          readOnly: true
        id:
          type: string
        url:
          description: application url
          type: string
          readOnly: true
    CampaignStatsOutput:
      description: Representation of aggregated information for campaign objects -
        REST APIs.
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        numNoMoreOnTargetItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object.
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        delegators:
          description: List of delegators who were delegated the duties for a given
            campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        count:
          format: int32
          description: The total number of associated object occurrences returned.
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object.
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object.
          type: integer
        entity:
          description: "A string representing the aggregated object. Not null if filterType\
            \ is type, state, priority."
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
    ContinuousCampaignEvents:
      description: A list of events thats needs to be monitored through the campaign
      type: object
      properties:
        monitoredAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ContinuousCampaignMonitoredAttribute'
        type:
          type: string
    ListResponseCampaignInstanceOutput:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstanceOutput'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    AttributeChangesOutput:
      description: Object used to create or replace a list of changed attributes
      required:
      - id
      type: object
      properties:
        displayName:
          description: Display name of the attribute
          type: string
        id:
          description: Identifier of the attribute
          type: string
        value:
          description: value of the attribute
          type: string
    StateType:
      enum:
      - aborted
      - all
      - cancelled
      - closed
      - completed
      - created
      - deleted
      - failed
      - noinstance
      - overlapped
      - paused
      - removed
      - running
      - scheduled
      - starting
      - success
      type: string
    AssignmentFilter1:
      description: Assignment-like object that uses filters to search assignments.
      type: object
      properties:
        assignmentStatus:
          description: Assignment compliance status (Account campaign case).
          enum:
          - compliant
          - non_compliant
          - unmanaged
          - unmatched
          type: array
          items:
            type: string
        filter:
          description: Smart filter matched to assignee and application properties
            of each assignment.
          type: string
        groupsId:
          description: IDs of the groups having the assignments.
          type: array
          items:
            type: string
        lastActions:
          description: Last actions executed by each reviewer.
          enum:
          - all
          - none
          - approved
          - rejected
          - redirected
          - escalated
          - noMoreOnTarget
          type: array
          items:
            type: string
        appsId:
          description: IDs of the applications to which the assignments are related.
          type: array
          items:
            type: string
        assignmentNames:
          description: Assignment names
          type: array
          items:
            type: string
        assigneesId:
          description: IDs of the users
          type: array
          items:
            type: string
        reviewersId:
          description: IDs of the users having the assignments
          type: array
          items:
            type: string
        assignmentTypes:
          description: Assignment types
          enum:
          - all
          - permission
          - role
          - account
          type: array
          items:
            type: string
    V1CampaignFrequency:
      description: A UNIX or Linux Cron compatible string that defines the start of
        subsequent instances
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/FrequencyUnit'
        rate:
          format: int32
          type: integer
        cronString:
          type: string
    AssignmentInput:
      description: Object used to create or replace an assignment.
      required:
      - id
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If the campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, the operation is run immediately."
          type: boolean
        id:
          description: Assignment Id
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        applicationId:
          description: Application identifier
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
    ListResponseCampaignStats:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignStats'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ReminderAction1:
      description: The action to be taken after a while to send periodic reminders
        to reviewers for unreviewed assignments
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReminderActionType1'
        reminderInterval:
          format: int64
          type: integer
    CampaignPriority:
      enum:
      - all
      - high
      - low
      - medium
      type: string
    Operation and Value:
      description: Rest representation for Operation and Value.
      required:
      - op
      - vl
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: eq
        vl:
          description: Value
          type: string
          example: Security
    AttributeMap:
      description: Rest representation for an AttributeMap.
      required:
      - name
      type: object
      properties:
        name:
          description: name of the Attribute
          type: string
    EntitlementWithConditionSet:
      description: Rest representation for an entitlement or entitlement condition
        set filter.
      type: object
      properties:
        entitlementExclusionList:
          description: List of Entitlements to be excluded
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        entitlementInclusionList:
          description: List of Entitlements to be included
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
    V1CampaignConfiguration:
      description: Object to represent a Campaign Configuration.
      required:
      - owner
      - type
      - priority
      - name
      - applications
      type: object
      properties:
        preview:
          description: A flag indicating that the campaign is in preview mode and
            not open to reviewers.
          type: boolean
        userConditionSet:
          description: "The conditionSet set to build the user filter. Example for\
            \ userConditionSet : [{\"work_locality\":[{\"op\":\"sw\",\"vl\":\"J\"\
            },{\"op\":\"ew\",\"vl\":\"a\"}],\"department\":[{\"op\":\"eq\",\"vl\"\
            :\"Security\"}]}]"
          type: array
          items:
            type: object
        description:
          description: Campaign Description
          type: string
        nextRunDate:
          format: date
          description: Forecasted Run date for the next campaign instance.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy.
        launchDate:
          format: date
          description: The start date of the first instance of campaign.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          type: string
        automaticRefreshContinuousCampaign:
          description: "A flag, valid for continuous campaigns only, saying that campaign\
            \ should refresh the existing filter for building dataset"
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign Type
        frequency:
          description: A UNIX or Linux Cron compatible string that defines the start
            of subsequent instances.
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification.
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The duration (in milliseconds) for which each campaign instance
            remains open.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The creator of the campaign.
        blocklist:
          description: The list of Users or Groups denied certification.
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
            enum:
            - none
            - reminder
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The default reviewer identified for the assignments for which
              the system cannot find a suitable reviewer.
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - description: List of entitlements for inclusion/exclusion or filter for
              entitlements allowed for the certification
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/CampaignFrequency'
          - description: Frequency Unit days or months
        runNow:
          description: The flag indicating the campaign occurs one-time and needs
            to be started immediately.
          type: boolean
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - description: The identified reviewer for the campaign.
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign Priority
            enum:
            - high
            - medium
            - low
            - all
        creationDate:
          format: date
          description: The creation date of the campaign configuration.
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - "null"
          type: string
        name:
          description: Campaign Name
          type: string
        reviewerOverwritten:
          type: boolean
        applications:
          description: The list of Applications certified by the campaign.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    Event:
      type: object
      properties:
        type:
          type: string
        changedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeChanges'
    UpdateApplicationOperation:
      required:
      - op
      - path
      type: object
      properties:
        op:
          description: Operation to be performed
          enum:
          - remove
          - replace
          type: string
          example: replace
        path:
          description: "The string that contains an attribute path that describes\
            \ the target of the operation. The \"path\" attribute is required for\
            \ all operations. Examples of valid \"path\" specification formats include:\
            \ <br> <br>     \"path\":\"application.owner\" <br>"
          enum:
          - application.owner
          type: string
          example: application.owner
        value:
          description: "The attribute content used for the operation. The \"value\"\
            \ attribute is required for the \"replace\" operations. The \"value\"\
            \ attribute is allowed with \"remove\" operations only when the \"path\"\
            \ identifies  a single object (specified by a selection filter). <br>\
            \ <br> The following example shows a put operation replacing a multiple\
            \ values from \"application.owner\" : <br>  <table> <tr><td> {  \"Operations\"\
            :  [    {      \"op\":\"replace\",      \"path\":\"application.owner\"\
            ,      \"value\":[\"323000PBCU\",\"32600092KB\"],    }  ]}</td></tr></table>"
          type: string
          example: Service Now
    ErrorMessage:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
    CampaignInstanceAction:
      description: Object used to specify action on a campaign instance.
      required:
      - eventType
      type: object
      properties:
        id:
          description: Campaign instance id
          type: string
        eventType:
          description: Specifies the action to apply to the campaign instance.
          enum:
          - cancel
          - pause
          - restart
          - runnow
          type: string
    BulkOperationResult1:
      description: Representation of a response for bulk operation results in REST
        API calls.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        error:
          type: string
        value:
          type: object
    FrequencyUnit:
      enum:
      - DAYS
      - MINUTES
      - MONTHS
      type: string
    Pagination1:
      description: Object used to paginate a REST Api
      type: object
      properties:
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        sortDesc:
          description: Sort results descending.
          type: boolean
        page:
          format: int32
          description: Page number to be returned.
          type: integer
    CampaignFrequency:
      description: A UNIX or Linux Cron compatible string that defines the start of
        subsequent instances
      type: object
      properties:
        cronString:
          type: string
    CampaignInstanceReplaceInput:
      description: Object used to create a new campaign instance.
      required:
      - eventType
      type: object
      properties:
        eventType:
          description: Specifies the action to apply to the campaign.
          enum:
          - cancel
          - pause
          - restart
          - runnow
          type: string
    BulkErrorMessage:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/BulkErrorResponse1'
    AssignmentUpdateAction:
      description: Object used to replace an assignment.
      required:
      - id
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If the campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, the operation is run immediately."
          type: boolean
        id:
          description: Assignment Id
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
    BulkErrorResponse1:
      description: Representation of a generic error response in bulk.
      type: object
      properties:
        Unique identifier of the error message.:
          type: string
          readOnly: true
        Description of the error message.:
          type: string
          readOnly: true
    ListResponseDatasetRecord:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/DatasetRecord'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ListResponse1:
      description: Object used to return a list of objects
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            type: object
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    Pagination:
      description: Object used to paginate a REST Api
      type: object
      properties:
        The maximum number of elements to be returned.:
          format: int32
          type: integer
        Page number to be returned.:
          format: int32
          type: integer
        Sort results descending.:
          type: boolean
    OverdueAction:
      enum:
      - approveAll
      - doNothing
      - rejectAll
      type: string
    ReminderActionType1:
      enum:
      - none
      - reminder
      type: string
    CampaignInstanceInput:
      description: Object used to create a new campaign instance.
      required:
      - event
      type: object
      properties:
        id:
          description: Campaign instance Id
          type: string
        event:
          description: Specifies the action to apply to the campaign.
          enum:
          - delete
          - pause
          - restart
          - runnow
          - end
          - harddelete
          type: string
    ApplicationV1:
      type: object
      properties:
        _rev:
          type: string
          readOnly: true
        name:
          type: string
        icon:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        id:
          type: string
        url:
          type: string
          readOnly: true
    BulkResultType:
      enum:
      - failure
      - success
      type: string
    CampaignConfigurationLaunchInput:
      description: The Campaign Configuration in a draft that is used to launch.
      type: object
      properties:
        campaignId:
          description: Campaign id
          type: string
    CampaignType:
      enum:
      - account
      - all
      - groupassignment
      - groupmembership
      - userassignment
      type: string
    CampaignInstanceOutput:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        timeLastStart:
          format: date
          description: The date representing the start of the instance.
          type: string
        delegators:
          description: List of delegators who were delegated the duties for a given
            campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        configuration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
        _rev:
          description: _rev
          type: string
        timeRemaining:
          format: int64
          description: "The date representing when the instance gets completed, if\
            \ any."
          type: integer
        reviewersCompletedCount:
          format: int32
          description: The total number of reviewers that have completed the review.
          type: integer
        timeClosed:
          format: date
          description: "The date representing when the instance was closed, if any."
          type: string
        assignmentsProcessedCount:
          format: int32
          description: The overall number of assignments processed for the campaign
            instance.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        state:
          description: A string representing the state of the campaign instance.
          type: string
        id:
          description: Campaign instance id
          type: string
        assignmentSources:
          description: The campaign instance assignment sources.
          type: array
          items:
            type: string
        timeLastPause:
          format: date
          description: "The date representing when the instance was paused, if any."
          type: string
        tenantUUID:
          description: Tenant UUID
          type: string
        reviewersTotalCount:
          format: int32
          description: The total number of reviewers.
          type: integer
        rev:
          description: Campaign instance review
          type: string
        delegatees:
          description: List of delegatees to whom duties for a given campaign instance
            were delegated.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
        campaignConfiguration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - description: The parent configuration.
        priority:
          description: The priority from the parent configuration.
          type: string
        assignmentsTotalCount:
          format: int32
          description: The overall number of assignments to be reviewed in the campaign
            instance.
          type: integer
        campaignConfigurationId:
          description: The ID of the parent configuration.
          type: string
        tenantId:
          description: Tenant Id
          type: string
        name:
          description: The unique campaign instance name.
          type: string
        progress:
          format: int32
          description: The percentage of overall progress made in the campaign instance.
          type: integer
        _id:
          description: _id
          type: string
        supervisors:
          description: "The list of supervisors identified for the campaign. If a\
            \ group is selected as supervisor, this list contains the group members."
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    AssignmentActionReplaceInput:
      description: Object used to create or replace an assignment.
      required:
      - operation
      type: object
      properties:
        doImmediateFulfillment:
          description: "If campaign sign-off policy is manual and doImmediateFulfillment\
            \ is set, then the operation is executed immediately."
          type: boolean
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification of the operation in case of rejections and redirections.
          type: string
        operation:
          description: The operation executed by the reviewer.
          enum:
          - none
          - approved
          - rejected
          - redirected
          - escalated
          type: string
        events:
          description: Event
          enum:
          - CHANGE_USER_PROFILE
          - CHANGE_GROUP_MEMBER
          - CHANGE_ACCESS
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
    SubjectAdditionalData:
      description: The campaign subject additional data.
      type: object
      properties:
        accountName:
          description: Account name on the respective entitlement.
          type: string
        rights:
          description: Rights reference. It is valid only if type is ENTITLEMENT.
          type: string
        name:
          description: The entitlement name when the subject is an entitlement or
            the account name when subject is an account.
          type: string
        assigner:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - description: User who assigned the entitlement.
        extRef:
          description: External reference. It is valid only if type is ENTITLEMENT.
          type: string
        subType:
          description: "The entitlement type (ROLE or PERMISSION) when the subject\
            \ is an entitlement or the account status (MATCHED, UNMATCHED, NON-COMPLIANT,\
            \ COMPLIANT) when the subject is an account."
          type: string
        extId:
          description: The subject identifier.
          type: string
        type:
          description: "The subject type: possible values are ENTITLEMENT or ACCOUNT."
          type: string
        creationDate:
          format: date
          description: Date when assignment was created.
          type: string
        accountOwnershipType:
          description: Account ownership type of the respective account.
          type: string
    MitigationActionType:
      enum:
      - none
      - reminder
      type: string
    ContinuousCampaignMonitoredAttribute:
      description: A attribute thats needs to be monitored through the campaign
      type: object
      properties:
        displayName:
          description: Display name of the attribute
          type: string
          readOnly: true
        name:
          description: A schemaAttribute.name of the attribute.
          type: string
        id:
          description: A unique id of the attribute.
          type: string
    UpdateByApplication:
      description: JSON object used to update all the assignment resources filtered
        by the application
      required:
      - Operations
      type: object
      properties:
        Operations:
          description: "An array of operation objects to be performed.  Operation\
            \ objects must have exactly one \"op\" member, whose value indicates the\
            \ operation to perform. Its value must be one of \"remove\", or \"replace\"\
            . Values are errors."
          type: array
          items:
            $ref: '#/components/schemas/UpdateApplicationOperation'
    CampaignConfigurationCloneInput:
      description: The object can be used to clone an existing campaign configuration.
      type: object
      properties:
        sourceCampaignId:
          description: Source campaign id.
          type: string
    ContinuousCampaignMetaData:
      description: Details of continuous campaign
      type: object
      properties:
        generateInitialDataSet:
          type: boolean
        overdueThreshold:
          format: int32
          type: integer
        reminderAction:
          $ref: '#/components/schemas/ReminderAction1'
        overdueAction:
          $ref: '#/components/schemas/OverdueAction'
        events:
          description: A list of events thats needs to be monitored through the campaign.
          type: array
          items:
            $ref: '#/components/schemas/ContinuousCampaignEvents'
        automaticRefresh:
          type: boolean
    CreateAssignment:
      description: Object used to create an assignment
      required:
      - id
      type: object
      properties:
        id:
          description: Assignment Id
          type: string
        applicationId:
          description: Application identifier
          type: string
    BulkErrorResponse:
      description: Representation of a generic error response in bulk.
      type: object
      properties:
        Unique identifier of the error message.:
          type: string
          readOnly: true
        Description of the error message.:
          type: string
          readOnly: true
    ReminderActionType:
      enum:
      - none
      - reminder
      type: string
    AssignmentFilter:
      description: Assignment-like object that uses filters to search assignments.
      type: object
      properties:
        assignmentStatus:
          description: Assignment compliance status (Account campaign case).
          enum:
          - compliant
          - non_compliant
          - unmanaged
          - unmatched
          type: array
          items:
            type: string
        filter:
          description: Smart filter matched to assignee and application properties
            of each assignment.
          type: string
        groupsId:
          description: IDs of the groups having the assignments.
          type: array
          items:
            type: string
        lastActions:
          description: Last actions executed by each reviewer.
          enum:
          - all
          - none
          - approved
          - rejected
          - redirected
          - escalated
          - noMoreOnTarget
          type: array
          items:
            type: string
        appsId:
          description: IDs of the applications to which the assignments are related.
          type: array
          items:
            type: string
        assignmentNames:
          description: Assignment names
          type: array
          items:
            type: string
        assigneesId:
          description: The user ID whose accesses are being reviewed.
          type: array
          items:
            type: string
        reviewersId:
          description: ID of the user who is going to review OR provide certification.
          type: array
          items:
            type: string
        assignmentTypes:
          description: Assignment types
          enum:
          - all
          - permission
          - role
          - account
          type: array
          items:
            type: string
    AttributeChanges:
      description: Rest representation for an AttributeChanges.
      required:
      - id
      type: object
      properties:
        id:
          description: Identifier of the attribute
          type: string
        oldValue:
          description: old value of the attribute
          type: array
          items:
            type: string
        dispalyName:
          description: Display name of the attribute
          type: string
          readOnly: true
        value:
          description: value of the attribute
          type: string
    CampaignStats1:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        count:
          format: int32
          description: The total number of associated object occurrences returned
          type: integer
        filterType:
          description: The filterType
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        entity:
          description: " A string representing the aggregated object. Not null if\
            \ filterType is type, state, priority"
          type: string
    User:
      type: object
      properties:
        formatted:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        name:
          type: string
          readOnly: true
        realm:
          type: string
        id:
          type: string
        userType:
          type: string
        email:
          type: string
    ListResponseAssignmentStats:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/AssignmentStats'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    ListResponseCampaignConfig:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignConfiguration'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    AssignmentOutput:
      description: Representation of a campaign assignment for REST APIs.
      type: object
      properties:
        lastReminderDate:
          format: date
          description: Date when last email reminder was sent to the reviewer
          type: string
        isLastOperationAutomatic:
          description: Specifies whether the value associated to the last operation
            was set internally and automatically by the microservice
          type: boolean
        tenantUUID:
          description: Owning tenant UUID
          type: string
        isFulfilled:
          description: "If true, the assignment operation was fulfilled"
          type: boolean
        delegators:
          $ref: '#/components/schemas/UserGroupV1'
        noMoreOnTargetSystem:
          description: "If true, the assignment was greyed-out"
          type: boolean
        delegator:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        discretionaryGroup:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        lastActionDate:
          format: date
          description: Date when last operation was performed
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        creationDate:
          format: date
          description: Date when the assignment was first imported inside certification
            manager
          type: string
        error:
          description: A string that contains the back-end error that occurred during
            a bulk assignment update
          type: string
        assignmentId:
          description: The id of the assignment from the external system to certification
            (i.e. AuthZ).
          type: string
        instanceId:
          description: ID of the parent campaign instance.
          type: string
        reminderCount:
          format: int32
          description: Number of email reminders sent to the reviewer for a specific
            assignment
          type: integer
        application:
          allOf:
          - $ref: '#/components/schemas/ApplicationV1'
          - $ref: '#/components/schemas/ApplicationV1'
        configId:
          description: ID of the parent campaign configuration.
          type: string
        rights:
          description: The rights associated to the assignment.
          type: array
          items:
            type: string
        lastOperation:
          allOf:
          - $ref: '#/components/schemas/ReviewerOperation1'
          - description: "Last operation, if any, executed by the reviewer during\
              \ the campaign."
        tenantId:
          description: Owning tenant ID
          type: string
        id:
          description: Id
          type: string
        additionalData:
          allOf:
          - $ref: '#/components/schemas/SubjectAdditionalData1'
          - description: The campaign subject additional data.
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        justification:
          description: Justification text for the last operation in case of rejections
            and redirections.
          type: string
    CampaignStats:
      description: Representation of aggregated information for campaign objects -
        REST APIs.
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object.
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object.
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        count:
          format: int32
          description: The total number of associated object occurrences returned.
          type: integer
        numRemovedFromTargetItems:
          format: int32
          description: The number of absent records in the target associated to the
            user represented in the object.
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object.
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object.
          type: integer
        entity:
          description: "A string representing the aggregated object. Not null if filterType\
            \ is type, state, priority."
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
    MitigationAction:
      description: The action to be taken after a while to avoid open records when
        a campaign closes
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MitigationActionType'
        reminderInterval:
          format: int64
          type: integer
    BulkResult:
      description: Representation of a generic response of a Bulk REST API
      required:
      - op
      - path
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        error:
          type: string
        value:
          type: object
    ReviewerOperation1:
      enum:
      - all
      - approved
      - escalated
      - noMoreOnTarget
      - none
      - redirected
      - rejected
      - unmanage
      type: string
    CampaignConfigurationCloneOutput:
      description: Representation of a campaign configuration cloned object for the
        resposne
      type: object
      properties:
        _clonedId:
          description: _clonedId
          type: string
        _sourceId:
          description: _sourceId
          type: string
    BulkOperationResult:
      description: Representation of a response for bulk operation results in REST
        API calls.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/BulkResultType'
        error:
          type: string
        value:
          type: object
    ListResponseCampaignInstance:
      type: object
      properties:
        count:
          format: int32
          description: Number of filtered objects.
          type: integer
        limit:
          format: int32
          description: The maximum number of elements to be returned.
          type: integer
        resources:
          description: List of objects.
          type: array
          items:
            $ref: '#/components/schemas/CampaignInstance'
        page:
          format: int32
          description: Page number to be returned.
          type: integer
        totalCount:
          format: int32
          description: Total number of objects.
          type: integer
    CampaignSignOffType:
      enum:
      - auto
      - eoc
      - manual
      - no_signoff
      type: string
    RestResponse:
      type: object
      properties:
        count:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        resources:
          type: array
          items:
            type: object
        page:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
    BulkOperation:
      description: Representation of a generic payload of a Bulk REST API.
      required:
      - op
      - path
      type: object
      properties:
        op:
          enum:
          - replace
          - remove
          - delete
          type: string
        path:
          type: string
        value:
          type: object
    DatasetRecord:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        lastReminderDate:
          format: date
          type: string
        isFulfilled:
          description: If true the assignment operation has been fulfilled
          type: boolean
        isLastActionAutomatic:
          description: If the value associated to the last operation was set internally
            and automatically by the microservice
          type: boolean
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        noMoreOnTargetSystem:
          description: "If true, the assignment is removed from target and hence disabled."
          type: boolean
        discretionaryGroup:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        fulfilled:
          type: boolean
        lastActionDate:
          format: date
          description: The date representing when the last operation was performed.
          type: string
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        creationDate:
          format: date
          description: The date representing when the assignment was first imported
            inside certification manager.
          type: string
        error:
          description: A string containing the error raised by the backend in case
            of a bulk assignment update.
          type: string
        assignmentId:
          description: 'The assignment id coming from the external system to certify
            (that is AuthZ). '
          type: string
        lastActionAutomatic:
          type: boolean
        instanceId:
          description: Id of the parent campaign instance.
          type: string
        reminderCount:
          format: int32
          type: integer
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        configId:
          description: Id of the parent campaign configuration.
          type: string
        rights:
          description: The rights associated to the assignment.
          type: array
          items:
            type: string
        lastOperation:
          allOf:
          - $ref: '#/components/schemas/ReviewerOperation'
          - description: "Last operation, if any, executed by the reviewer during\
              \ the campaign."
        id:
          description: Id
          type: string
        additionalData:
          allOf:
          - $ref: '#/components/schemas/SubjectAdditionalData'
          - $ref: '#/components/schemas/SubjectAdditionalData'
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        justification:
          description: Justification text for the last operation in case of rejections
            and redirections.
          type: string
        events:
          description: A list of events thats needs to be monitored through the campaign.
          type: array
          items:
            $ref: '#/components/schemas/Event'
    CampaignInstance:
      description: Representation of a campaign instance for REST APIs.
      type: object
      properties:
        timeLastStart:
          format: date
          description: The date representing the start of the instance.
          type: string
        reviewerAssignmentCountMap:
          type: object
        reviewersTotalCount:
          format: int32
          description: The total number of reviewers.
          type: integer
        delegators:
          description: The list of delegators assigned the duties for a given campaign
            instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        delegatees:
          description: The list of delegatees who are delegated to perform duties
            for a given campaign instance.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        campaignConfiguration:
          allOf:
          - $ref: '#/components/schemas/CampaignConfiguration'
          - $ref: '#/components/schemas/CampaignConfiguration'
        timeRemaining:
          format: int64
          description: "The date representing when the instance gets completed, if\
            \ any."
          type: integer
        timeLastModified:
          format: date
          description: "The date representing when the instance was last modified,\
            \ if any."
          type: string
        priority:
          description: The priority from the parent configuration.
          type: string
        assignmentsTotalCount:
          format: int32
          description: The overall number of assignments to be reviewed in the campaign
            instance.
          type: integer
        campaignConfigurationId:
          description: The id of the parent configuration.
          type: string
        reviewersCompletedCount:
          format: int32
          description: The total number of reviewers that have completed the review.
          type: integer
        timeClosed:
          format: date
          description: "The date representing when the instance was closed, if any."
          type: string
        assignmentsProcessedCount:
          format: int32
          description: The overall number of assignments processed for the campaign
            instance.
          type: integer
        continuous:
          description: A flag indicating that the campaign is continuous.
          type: boolean
        name:
          description: The unique campaign instance name.
          type: string
        progress:
          format: int32
          description: The percentage of overall progress made in the campaign instance.
          type: integer
        id:
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/StateType'
          - description: A string representing the state of the campaign instance.
        assignmentSources:
          description: The campaign instance assignment sources.
          type: array
          items:
            type: string
        timeLastPause:
          format: date
          description: "The date representing when the instance was paused, if any."
          type: string
        supervisors:
          description: "The list of supervisors identified for the campaign. If a\
            \ group is selected as supervisor, the list contains the group members."
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
    Entitlement1:
      type: object
      properties:
        hasRights:
          type: boolean
        accountName:
          type: string
        rights:
          type: string
        name:
          type: string
          readOnly: true
        assigner:
          $ref: '#/components/schemas/UserGroup'
        extRef:
          type: string
        assignmentDate:
          format: date
          type: string
        id:
          type: string
        applicationId:
          type: string
    AssignmentStats:
      type: object
      properties:
        numUnprocesedItems:
          format: int32
          description: The number of unprocessed records associated to the user represented
            in the object
          type: integer
        completion:
          format: float
          description: The percentage of completion for the user represented in the
            object
          type: number
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          - $ref: '#/components/schemas/Application'
        count:
          format: int32
          description: The total number of associated object occurrences returned
          type: integer
        filterType:
          description: The filterType
          type: string
        numApprovedItems:
          format: int32
          description: The number of approved records associated to the user represented
            in the object
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
        numRejectedItems:
          format: int32
          description: The number of rejected records associated to the user represented
            in the object
          type: integer
        entity:
          description: " A string representing the aggregated object. Not null if\
            \ filterType is type, state, priority"
          type: string
        group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          - $ref: '#/components/schemas/UserGroup'
    ErrorMessage1:
      type: object
      properties:
        messageId:
          type: string
        messageDescription:
          type: string
    CampaignConfiguration:
      $ref: '#/components/schemas/CampaignConfiguration'
    CampaignConfigurationOutput:
      description: Representation of a campaign configuration for REST APIs
      required:
      - owner
      - type
      - priority
      - name
      - applications
      - launchDate
      - duration
      type: object
      properties:
        preview:
          description: "A flag for a preview campaign, not opened to reviewers"
          type: boolean
        tenantCreationLimits:
          allOf:
          - $ref: '#/components/schemas/TenantLimitsOutput'
          - description: A JSON object that indicates the limits for this tenant
        description:
          description: Campaign description
          type: string
        nextRunDate:
          description: "Estimated next run date for this configuration, if any"
          type: string
        signOff:
          allOf:
          - $ref: '#/components/schemas/CampaignSignOffType'
          - description: The campaign sign-off policy
        launchDate:
          description: Date when the first instance of the campaign starts
          enum:
          - yyyy-MM-dd'T'HH:mm:ss
          - epoch
          type: string
        automaticRefreshContinuousCampaign:
          description: A flag for a campaign to refresh the existing filter for building
            dataset. It is valid for continuous campaigns only.
          type: boolean
        type:
          allOf:
          - $ref: '#/components/schemas/CampaignType'
          - description: Campaign type
            enum:
            - userassignment
            - groupassignment
            - account
        frequency:
          description: A UNIX or Linux Cron-compatible string that defines the start
            of subsequent instances
          type: string
        allowlist:
          description: List of users or groups that are allowed for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        duration:
          format: int64
          description: The duration (in milliseconds) for which each campaign instance
            remains open
          type: integer
        isDeleted:
          description: The campaign configuration was deleted
          type: boolean
        continuous:
          description: A flag for a continuous campaign
          type: boolean
        draft:
          description: A flag for a draft campaign
          type: boolean
        overdueAction:
          allOf:
          - $ref: '#/components/schemas/OverdueAction'
          - description: The action to be taken for open records when a campaign closes.
            enum:
            - rejectAll
            - approveAll
            - doNothing
        id:
          description: Campaign configuration ID
          type: string
        owner:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        blocklist:
          description: List of users or groups denied for the certification
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        mitigationAction:
          allOf:
          - $ref: '#/components/schemas/MitigationAction'
          - description: The action to be taken after a while to avoid open records
              when a campaign closes.
        defaultReviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        tenantUUID:
          type: string
        rev:
          description: Campaign configuration review
          type: string
        entitlementFilter:
          allOf:
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
          - $ref: '#/components/schemas/EntitlementWithConditionSet'
        associatedPreviewCampaign:
          allOf:
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
          - $ref: '#/components/schemas/CampaignConfigurationOutput'
        allowSupervisorEscalation:
          description: Allow escalation to the supervisors.
          type: boolean
        runEvery:
          allOf:
          - $ref: '#/components/schemas/CampaignFrequency'
          - description: Frequency unit days or months
        runNow:
          description: A flag to start the campaign immediately
          type: boolean
        blacklist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        reviewer:
          allOf:
          - $ref: '#/components/schemas/UserGroupV1'
          - $ref: '#/components/schemas/UserGroupV1'
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/AllowBlockListInputOutput'
        priority:
          allOf:
          - $ref: '#/components/schemas/CampaignPriority'
          - description: Campaign priority
            enum:
            - high
            - medium
            - low
        creationDate:
          description: Creation date of the campaign configuration
          type: string
        tenantId:
          type: string
        name:
          description: Campaign name
          type: string
        reviewerOverwritten:
          type: boolean
        applications:
          $ref: '#/components/schemas/ApplicationV1'
        supervisors:
          description: The list of supervisors identified for the campaign.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupV1'
    Entitlement:
      description: Rest representation for an entitlement.
      required:
      - entitlementId
      type: object
      properties:
        entitlementId:
          description: Unique id of an entitlement
          type: string
    RundeckOperationResponse:
      type: object
      properties:
        count:
          format: int32
          type: integer
        description:
          type: string
    Activity3:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        remove:
          type: array
          items:
            type: string
    Activity4:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
        folderId:
          type: string
    Activity5:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
    V1SwaggerBulkApi:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operations'
    V1SwaggerUserRiskAnalysis:
      type: object
      properties:
        risks:
          type: array
          items:
            $ref: '#/components/schemas/Risk4'
        processId:
          format: int64
          type: integer
    Activity6:
      type: object
      properties:
        condition:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Activity6'
        name:
          type: string
    Activity1:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        remove:
          type: array
          items:
            type: string
    Activity2:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Activity:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        folderId:
          type: string
    Risk:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Activity6'
        remove:
          type: array
          items:
            type: string
    Mitigation:
      type: object
      properties:
        extraDescription:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        ownerId:
          type: string
    Mitigation1:
      type: object
      properties:
        extraDescription:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        ownerId:
          type: string
    Risk3:
      type: object
      properties:
        likelihood:
          type: string
        level:
          type: string
        trend:
          type: string
        acceptRational:
          type: string
        impact:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ownerId:
          type: string
        tolerance:
          type: string
    Mitigation2:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        processId:
          format: int64
          type: integer
        remove:
          type: array
          items:
            type: string
    Risk4:
      type: object
      properties:
        mitigationIds:
          type: array
          items:
            type: string
        riskId:
          type: string
    V1SwaggerUserRiskPreview:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
    Risk1:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        remove:
          type: array
          items:
            type: string
    Risk2:
      type: object
      properties:
        likelihood:
          type: string
        level:
          type: string
        trend:
          type: string
        acceptRational:
          type: string
        impact:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ownerId:
          type: string
        tolerance:
          type: string
    V1SwaggerUserRiskPreviewBulk:
      type: object
      properties:
        userId:
          type: string
        permissionIds:
          type: array
          items:
            type: string
    Permission:
      type: object
      properties:
        condition:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        name:
          type: string
    Operations:
      type: object
      properties:
        path:
          type: string
        bulkId:
          type: string
        method:
          type: string
        data:
          type: object